<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>欢迎参观小灰灰的网站哟 ヾ(◍°∇°◍)ﾉﾞ ~</title>
  
  <subtitle>My Personal blog website —— be founded on March 9, 2019</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-15T09:02:05.511Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>黄宇辉</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java项目开发中PO,BO,VO,DTO,POJO,DAO的概念及其作用</title>
    <link href="http://yoursite.com/2019/08/15/Java%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E4%B8%ADPO-BO-VO-DTO-POJO-DAO%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%85%B6%E4%BD%9C%E7%94%A8/"/>
    <id>http://yoursite.com/2019/08/15/Java项目开发中PO-BO-VO-DTO-POJO-DAO的概念及其作用/</id>
    <published>2019-08-15T07:39:18.000Z</published>
    <updated>2019-08-15T09:02:05.511Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-Java项目开发中PO-BO-VO-DTO-POJO-DAO的概念及其作用"><a href="#学习笔记-Java项目开发中PO-BO-VO-DTO-POJO-DAO的概念及其作用" class="headerlink" title="学习笔记 : Java项目开发中PO,BO,VO,DTO,POJO,DAO的概念及其作用"></a>学习笔记 : Java项目开发中PO,BO,VO,DTO,POJO,DAO的概念及其作用</h2><p><em>最近参与了GitHub上的一个开源项目 : <a href="https://github.com/YUbuntu0109/springboot-shiro" target="_blank" rel="noopener">一个简洁优美的Springboot集成Shiro的权限管理系统</a>, 项目中无论是模块的划分,还是结构的分层,都让我眼前一亮! 既而代码的功能被理所当然地划分的非常有层次感,可见作者的编程设计水平实属厉害啊~ 下面来一起学习下Java项目开发中 <code>PO</code>, <code>BO</code>, <code>VO</code>, <code>DTO</code>, <code>POJO</code>, <code>DAO</code> 的概念及其作用吧~</em></p><h3 id="PO-bean、entity等命名"><a href="#PO-bean、entity等命名" class="headerlink" title="PO(bean、entity等命名)"></a>PO(bean、entity等命名)</h3><p><em><code>Persistant Object</code>持久对象 : 数据库表中的记录在Java对象中的显示状态. 最形象的理解就是一个<code>PO</code>就是数据库中的一条记录,好处是可以把一条记录作为一个对象处理,可以方便的转为其它对象</em></p><h3 id="BO-service、manager、business等命名"><a href="#BO-service、manager、business等命名" class="headerlink" title="BO(service、manager、business等命名)"></a>BO(service、manager、business等命名)</h3><p><em><code>Business Object</code>业务对象 : 主要作用是把业务逻辑封装为一个对象. 这个对象可以包括一个或多个其它的对象,形象描述为一个对象的形为和动作,当然也有涉及到基它对象的一些形为和动作. 比如处理一个人的业务逻辑,有睡觉,吃饭,工作,上班等等形为,这样处理业务逻辑时,我们就可以针对BO去处理</em></p><h3 id="VO-from也有此写法"><a href="#VO-from也有此写法" class="headerlink" title="VO(from也有此写法)"></a>VO(from也有此写法)</h3><p><em><code>Value Object</code>值对象 : 主要体现在视图的对象,对于一个<code>WEB</code>页面将整个页面的属性封装成一个对象,然后用一个VO对象在控制层与视图层进行传输交换</em></p><h3 id="DTO-经过处理后的PO-可能增加或者减少PO的属性"><a href="#DTO-经过处理后的PO-可能增加或者减少PO的属性" class="headerlink" title="DTO(经过处理后的PO,可能增加或者减少PO的属性)"></a>DTO(经过处理后的PO,可能增加或者减少PO的属性)</h3><p><em><code>Data Transfer Object</code>数据传输对象 : 主要用于远程调用等需要大量传输对象的地方. 比如我们一张表有100个字段,那么对应的PO就有100个属性,但是我们界面上只要显示10个字段,客户端用<code>WEB service</code>来获取数据,没有必要把整个PO对象传递到客户端,这时我们就可以用只有这10个属性的DTO来传递结果到客户端,这样也不会暴露服务端表结构. 到达客户端以后,如果用这个对象来对应界面显示,那此时它的身份就转为VO</em></p><h3 id="POJO-POJO是一种概念或者接口-身份及作用随环境变化而变化"><a href="#POJO-POJO是一种概念或者接口-身份及作用随环境变化而变化" class="headerlink" title="POJO(POJO是一种概念或者接口,身份及作用随环境变化而变化)"></a>POJO(POJO是一种概念或者接口,身份及作用随环境变化而变化)</h3><p><em><code>Plain Ordinary Java Object</code>简单Java对象 : 即POJO是一个简单的普通的Java对象,它不包含业务逻辑或持久逻辑等,但不是JavaBean、EntityBean等,不具有任何特殊角色和不继承或不实现任何其它Java框架的类或接口. POJO有一些Private的参数作为对象的属性. 然后针对每个参数定义了get和set方法作为访问的接口,POJO对象有时也被称为Data对象，大量应用于表现现实中的对象. <code>一个POJO持久化以后就是PO. 直接用它传递、传递过程中就是DTO. 直接用来对应表示层就是VO</code></em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/15/Java项目开发中PO-BO-VO-DTO-POJO-DAO的概念及其作用/Java-POJO-PO-DTO-VO.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="DAO-Data-Access-Object数据访问对象"><a href="#DAO-Data-Access-Object数据访问对象" class="headerlink" title="DAO(Data Access Object数据访问对象)"></a>DAO(Data Access Object数据访问对象)</h3><p><em>这个大家最熟悉,和上面几个O区别最大,基本没有互相转化的可能性和必要. 主要用来封装对数据库的访问,通过它可以把POJO持久化为PO,用PO组装出来VO、DTO</em></p><h3 id="Controller-控制层"><a href="#Controller-控制层" class="headerlink" title="Controller(控制层)"></a>Controller(控制层)</h3><p><em>控制层主要由<code>Action / Servlet</code>等构成( 目前Spring MVC则是通过@Controller标签使用 ),此层业务层与视图层打交道的中间层,负责传输VO对象和调用BO层的业务方法,负责视图层请求的数据处理后响应给视图层</em></p><h3 id="View-视图层"><a href="#View-视图层" class="headerlink" title="View(视图层)"></a>View(视图层)</h3><p><em>主要是指由JSP、HTML等文件形成的显示层,总结一下要用具体的X0需要看具体环境及项目架构,在不同的层、不同的应用场合,对象的身份也不一样,而且对象身份的转化也是很自然的. 就像你对老婆来说就是老公,对父母来说就是子女. 设计这些概念的初衷不是为了唬人而是为了更好的理解和处理各种逻辑,让大家能更好的去用面向对象的方式处理问题</em></p><h3 id="上述名词在实际项目的应用举例"><a href="#上述名词在实际项目的应用举例" class="headerlink" title="上述名词在实际项目的应用举例"></a>上述名词在实际项目的应用举例</h3><p><em><code>控制层</code>( controller-action ),<code>业务层/服务层</code>( bo-manager ),<code>实体层</code>( po-entity ),<code>数据访问</code>( dao ),<code>视图对象</code>( Vo-本项目省略 ),<code>视图层</code>( view-jsp/html )</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/15/Java项目开发中PO-BO-VO-DTO-POJO-DAO的概念及其作用/Java项目中各个层次的详细划分.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p><em><code>在平时开发项目中大家记得要精细设计各层,既而避免后续项目开发中产生不必要的大量重复工作. 如果不是大型系统可简化一些层,毕竟技术是为应用服务哒~</code></em></p><p><em>🙏摘自(获益匪浅,非常感谢) : <a href="https://www.cnblogs.com/EasonJim/p/7967949.html" target="_blank" rel="noopener">https://www.cnblogs.com/EasonJim/p/7967949.html</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-Java项目开发中PO-BO-VO-DTO-POJO-DAO的概念及其作用&quot;&gt;&lt;a href=&quot;#学习笔记-Java项目开发中PO-BO-VO-DTO-POJO-DAO的概念及其作用&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : J
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot整合FreeMarker</title>
    <link href="http://yoursite.com/2019/08/14/SpringBoot%E6%95%B4%E5%90%88FreeMarker/"/>
    <id>http://yoursite.com/2019/08/14/SpringBoot整合FreeMarker/</id>
    <published>2019-08-14T01:43:05.000Z</published>
    <updated>2019-08-14T02:18:25.459Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-Spring-Boot整合FreeMarker"><a href="#学习笔记-Spring-Boot整合FreeMarker" class="headerlink" title="学习笔记 : Spring Boot整合FreeMarker"></a>学习笔记 : Spring Boot整合FreeMarker</h2><h3 id="FreeMarker官方简介"><a href="#FreeMarker官方简介" class="headerlink" title="FreeMarker官方简介"></a>FreeMarker官方简介</h3><p><em>Apache FreeMarker™ is a template engine: a Java library to generate text output (HTML web pages, e-mails, configuration files, source code, etc.) based on templates and changing data. Templates are written in the FreeMarker Template Language (FTL), which is a simple, specialized language (not a full-blown programming language like PHP). Usually, a general-purpose programming language (like Java) is used to prepare the data (issue database queries, do business calculations). Then, Apache FreeMarker displays that prepared data using templates. <code>In the template you are focusing on how to present the data, and outside the template you are focusing on what data to present.</code></em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/14/SpringBoot整合FreeMarker/FreeMarker-overview.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p><em>This approach is often referred to as the MVC (Model View Controller) pattern, and is particularly popular for dynamic web pages. <code>It helps in separating web page designers (HTML authors) from developers (Java programmers usually). Designers won&#39;t face complicated logic in templates</code>, and can change the appearance of a page without programmers having to change or recompile code.</em></p><h3 id="引入Maven依赖"><a href="#引入Maven依赖" class="headerlink" title="引入Maven依赖"></a>引入Maven依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Web --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- FreeMark --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编写Controller"><a href="#编写Controller" class="headerlink" title="编写Controller"></a>编写Controller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.freemark.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span>: springboot-freemarker</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: SpringBoot整合FreeMarker</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 黄宇辉</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 8/14/2019-9:16 AM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@website</span>: https://yubuntu0109.github.io/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/hiFreeMark"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hiFreeMark</span><span class="params">(Model model)</span> </span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"resource"</span>, <span class="string">"SringBoot is integrated with FreeMarker !"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写FreeMarker页面"><a href="#编写FreeMarker页面" class="headerlink" title="编写FreeMarker页面"></a>编写FreeMarker页面</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">style</span>=<span class="string">"color: blueviolet"</span>&gt;</span>$&#123;resource&#125; Date: $&#123;.now?string("yyyy-MM-dd HH:mm:ss.sss")&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>程序运行效果如下所示 :</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/14/SpringBoot整合FreeMarker/Hi-FreeMarker.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-Spring-Boot整合FreeMarker&quot;&gt;&lt;a href=&quot;#学习笔记-Spring-Boot整合FreeMarker&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : Spring Boot整合FreeMarker&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="FreeMarker" scheme="http://yoursite.com/tags/FreeMarker/"/>
    
  </entry>
  
  <entry>
    <title>Lombok简介及基本使用</title>
    <link href="http://yoursite.com/2019/08/13/Lombok%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/08/13/Lombok简介及基本使用/</id>
    <published>2019-08-13T12:46:07.000Z</published>
    <updated>2019-08-13T14:06:47.313Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-Lombok简介及基本使用"><a href="#学习笔记-Lombok简介及基本使用" class="headerlink" title="学习笔记 : Lombok简介及基本使用"></a>学习笔记 : Lombok简介及基本使用</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><em>问题引入 : 开发中经常需要写的JavaBean,都需要花时间去添加相应的getter/setter,也许还要去写构造器、equals等方法,而且需要维护,当属性多时会出现大量的getter/setter方法,这些显得很冗长也没有太多技术含量,一旦修改属性,就容易出现忘记修改对应方法的失误哟~</em></p><p><em>Lombok能通过注解的方式,在编译时自动为属性生成<code>构造器</code>、<code>getter/setter</code>、<code>equals</code>、<code>hashcode</code>、<code>toString</code>方法. 出现的神奇就是在源码中没有getter和setter方法,但是在编译生成的字节码文件中有getter和setter方法. 这样就省去了手动重建这些代码的麻烦,既而达到简化代码,提高开发人员的开发效率的目的</em></p><ul><li>优点 :<ul><li>能通过注解的形式自动生成构造器、getter/setter、equals、hashcode、toString等方法,提高了一定的开发效率</li><li>让代码变得简洁,不用过多的去关注相应的方法</li><li>属性做修改时,也简化了维护为这些属性所生成的getter/setter方法等</li></ul></li><li>缺点 :<ul><li>不支持多种参数构造器的重载</li><li>虽然省去了手动创建getter/setter方法的麻烦,但大大降低了源代码的可读性和完整性,降低了阅读源代码的舒适度</li></ul></li><li>总结 : <ul><li>Lombok虽然有很多优点,但Lombok更类似于一种IDE插件,项目也需要依赖相应的jar包. Lombok依赖jar包是因为编译时要用它的注解,为什么说它又类似插件 ? 因为在使用时Eclipse或IntelliJ IDEA都需要安装相应的插件,<code>在编译器编译时通过操作AST( 抽象语法树 )改变字节码生成,变向的就是说它在改变Java语法. 它不像Spring的依赖注入或者MyBatis的ORM一样是运行时的特性,而是编译时的特性</code></li></ul></li></ul><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><ol><li><p><em>添加Maven依赖 :</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>安装IDEA(<code>IntelliJ Lombok plugin</code>)插件</em></p></li></ol><h3 id="常见异常"><a href="#常见异常" class="headerlink" title="常见异常"></a>常见异常</h3><ol><li><p><em>(已添加<code>lombok</code>依赖情况下)抛出此异常,(IDEA环境)解决方案:安装<code>IntelliJ Lombok plugin</code>并启用<code>Enable annotation processing</code></em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Warning:(49, 8) java: lombok.javac.apt.LombokProcessor could not be initialized. Lombok will not run during this compilation: java.lang.IllegalArgumentException: com.sun.tools.javac.main.DelegatingJavaFileManager$DelegatingSJFM extends com.sun.tools.javac.main.DelegatingJavaFileManager implements javax.tools.StandardJavaFileManager</span><br><span class="line">  at lombok.javac.apt.LombokFileObjects.getCompiler(LombokFileObjects.java:148)</span><br><span class="line">  at lombok.javac.apt.InterceptingJavaFileManager.&lt;init&gt;(InterceptingJavaFileManager.java:40)</span><br><span class="line">  at lombok.javac.apt.LombokProcessor.placePostCompileAndDontMakeForceRoundDummiesHook(LombokProcessor.java:165)</span><br><span class="line">  at lombok.javac.apt.LombokProcessor.init(LombokProcessor.java:87)</span><br><span class="line">  at lombok.core.AnnotationProcessor$JavacDescriptor.want(AnnotationProcessor.java:87)</span><br><span class="line">  at lombok.core.AnnotationProcessor.init(AnnotationProcessor.java:140)</span><br></pre></td></tr></table></figure></li><li><p><em>JDK版本bug,解决方案:重置JDK版本,Project Structure—&gt;Porject settings—&gt;Project : 将<code>Project SDK</code>设置为:<code>9(java version&quot;9.0.4&quot;)</code>, <code>language level</code>设置为<code>8</code>,详情操作请参考 : <a href="https://github.com/YUbuntu0109/YUbuntu0109.github.io/blob/ce0545de04d3cfc9b328a1760bb5f3c84d322362/source/_posts/%E8%AF%A6%E8%A7%A3%E5%9C%A8IDEA%E4%B8%AD%E5%A4%9A%E5%A4%84%E8%AE%BE%E7%BD%AEJDK%E5%8F%8A%E5%85%B6%E5%8C%BA%E5%88%AB.md" target="_blank" rel="noopener">IDEA为何多处设置JDK,有什么区别呢 ?</a></em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Warning:(9, 8) java: lombok.javac.apt.LombokProcessor could not be initialized. Lombok will not run during this compilation: java.lang.IllegalArgumentException: com.sun.tools.javac.main.DelegatingJavaFileManager$DelegatingSJFM extends com.sun.tools.javac.main.DelegatingJavaFileManager implements javax.tools.StandardJavaFileManager</span><br><span class="line">  at lombok.javac.apt.LombokFileObjects.getCompiler(LombokFileObjects.java:148)</span><br><span class="line">  at lombok.javac.apt.InterceptingJavaFileManager.&lt;init&gt;(InterceptingJavaFileManager.java:40)</span><br></pre></td></tr></table></figure></li></ol><h3 id="使用Lombok前后对比"><a href="#使用Lombok前后对比" class="headerlink" title="使用Lombok前后对比"></a>使用Lombok前后对比</h3><ol><li><p><em>一个未使用Lombok的普通JavaBean</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.lombok.bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Logger log = Logger.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Integer id, String name, String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", password='"</span> + password + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>一个使用Lombok的普通JavaBean( 使用Lombok注解达到与上述JavaBean同样的效果 )~</em></p></li></ol><ul><li><code>@Data</code> : 注解在类上,提供类所有属性的 getting 和 setting 方法,此外还提供了equals、canEqual、hashCode、toString方法</li><li><code>@Setter</code> : 注解在属性上,为属性提供 setting 方法</li><li><code>@Getter</code> : 注解在属性上,为属性提供 getting 方法</li><li><code>@Log4j</code> : 注解在类上,为类提供一个属性名为 log 的 log4j 日志对象</li><li><code>@ToString</code> : 注解在类上,为类提供一个 toString 方法</li><li><code>@NoArgsConstructor</code> : 注解在类上,为类提供一个无参的构造方法</li><li><code>@AllArgsConstructor</code> : 注解在类上,为类提供一个全参的构造方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.lombok.bean;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.log4j.Log4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Log</span>4j</span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserWithLombok</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">outLogInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"the message object to log ~"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>参考链接 :</em></p><ul><li><a href="https://github.com/rzwitserloot/lombok" target="_blank" rel="noopener">https://github.com/rzwitserloot/lombok</a></li><li><a href="https://www.cnblogs.com/heyonggang/p/8638374.html" target="_blank" rel="noopener">https://www.cnblogs.com/heyonggang/p/8638374.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-Lombok简介及基本使用&quot;&gt;&lt;a href=&quot;#学习笔记-Lombok简介及基本使用&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : Lombok简介及基本使用&quot;&gt;&lt;/a&gt;学习笔记 : Lombok简介及基本使用&lt;/h2&gt;&lt;h3 i
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="Lombok" scheme="http://yoursite.com/tags/Lombok/"/>
    
  </entry>
  
  <entry>
    <title>详解在IDEA中多处设置JDK及其区别</title>
    <link href="http://yoursite.com/2019/08/13/%E8%AF%A6%E8%A7%A3%E5%9C%A8IDEA%E4%B8%AD%E5%A4%9A%E5%A4%84%E8%AE%BE%E7%BD%AEJDK%E5%8F%8A%E5%85%B6%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2019/08/13/详解在IDEA中多处设置JDK及其区别/</id>
    <published>2019-08-13T01:56:45.000Z</published>
    <updated>2019-08-13T03:08:17.159Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-IDEA为何多处设置JDK-有什么区别呢"><a href="#学习笔记-IDEA为何多处设置JDK-有什么区别呢" class="headerlink" title="学习笔记 : IDEA为何多处设置JDK,有什么区别呢 ?"></a>学习笔记 : IDEA为何多处设置JDK,有什么区别呢 ?</h2><h3 id="设置编译器的版本"><a href="#设置编译器的版本" class="headerlink" title="设置编译器的版本"></a>设置编译器的版本</h3><p><em>编译器的版本,既生成class文件的jdk版本 : Settings &gt; Build,Execution,Deployment &gt; Complier &gt; Java Compiler</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/13/详解在IDEA中多处设置JDK及其区别/IDEA-JDK-Java-Complie.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h3 id="设置Modules中的SDK和language-level版本"><a href="#设置Modules中的SDK和language-level版本" class="headerlink" title="设置Modules中的SDK和language level版本"></a>设置Modules中的SDK和language level版本</h3><p><em>这里选择Modules中的SDK和language level的默认版本 : Project Structure &gt; Project Settings &gt; Project</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/13/详解在IDEA中多处设置JDK及其区别/IDEA-JDK-Modules-SDK_Language-level.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>注意 : <code>Language Level为限定项目编译检查时最低要求的 JDK 特性</code></em></p><h3 id="设置项目实际的Language-Level版本"><a href="#设置项目实际的Language-Level版本" class="headerlink" title="设置项目实际的Language Level版本"></a>设置项目实际的Language Level版本</h3><p><em>Project Structure &gt; Project Settings &gt; Modules &gt; Sources</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/13/详解在IDEA中多处设置JDK及其区别/IDEA-JDK-Language-level.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h3 id="设置项目实际的SDK版本"><a href="#设置项目实际的SDK版本" class="headerlink" title="设置项目实际的SDK版本"></a>设置项目实际的SDK版本</h3><p><em>相比整个工程设置语言级别可以更加地精确控制 : Project Structure &gt; Project Settings &gt; Modules &gt; Dependencies</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/13/详解在IDEA中多处设置JDK及其区别/IDEA-JDK-Module-SDK.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h3 id="❓-IDEA为何多处设置JDK-有什么区别"><a href="#❓-IDEA为何多处设置JDK-有什么区别" class="headerlink" title="❓ IDEA为何多处设置JDK,有什么区别 ?"></a>❓ IDEA为何多处设置JDK,有什么区别 ?</h3><p><code>project SDK</code> : 表示开发环境使用什么JDK来编译<br><code>language level</code> :  表示项目最低可以使用什么版本的JDK通过</p><p><em>至于说两者之间的区别,让我来给你举个例子 :若设置<code>project SDK</code>为1.8,<code>language level</code>设置为1.7,此时若使用lambda表达式,IDEA则会帮你标红并提醒你若这么写,项目未来可就不能使用1.7版本的JDK编译啦 ( <code>languang level用来保证代码最低可以被什么级别的 JDK 编译</code> ) ,尽管你使用的是SDK1.8 · · ·</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-IDEA为何多处设置JDK-有什么区别呢&quot;&gt;&lt;a href=&quot;#学习笔记-IDEA为何多处设置JDK-有什么区别呢&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : IDEA为何多处设置JDK,有什么区别呢 ?&quot;&gt;&lt;/a&gt;学习笔记 : 
      
    
    </summary>
    
    
      <category term="IDEA" scheme="http://yoursite.com/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>一个基础的的SSM整合Shiro案例</title>
    <link href="http://yoursite.com/2019/08/11/%E4%B8%80%E4%B8%AA%E5%9F%BA%E7%A1%80%E7%9A%84%E7%9A%84SSM%E6%95%B4%E5%90%88Shiro%E6%A1%88%E4%BE%8B/"/>
    <id>http://yoursite.com/2019/08/11/一个基础的的SSM整合Shiro案例/</id>
    <published>2019-08-10T23:43:50.000Z</published>
    <updated>2019-08-12T01:20:12.761Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-一个基础的的SSM整合Shiro案例"><a href="#学习笔记-一个基础的的SSM整合Shiro案例" class="headerlink" title="学习笔记 : 一个基础的的SSM整合Shiro案例"></a>学习笔记 : 一个基础的的SSM整合Shiro案例</h2><p><em>前些日子写了<a href="https://github.com/YUbuntu0109/Shiro-learning/tree/master/spring%20boot%20project%20with%20shiro" target="_blank" rel="noopener">一个基础的SpringBoot整合Shiro案例</a>,然后又进阶地学习了SSM整合Shiro的基本知识,继而今天总结一下 : 写一个基础的SSM整合Shiro案例(该案例与上述案例思路相同)~ 该案例的代码仓库 : <a href="https://github.com/YUbuntu0109/Shiro-learning/tree/master/ssm%20project%20with%20shiro" target="_blank" rel="noopener">https://github.com/YUbuntu0109/Shiro-learning/tree/master/ssm%20project%20with%20shiro</a></em></p><h3 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h3><p><em>数据库ER图如下所示 :</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/11/一个基础的的SSM整合Shiro案例/shiro-learning-database-er.png" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>数据表中用户及其分配的权限信息如下所示 :</em></p><table><thead><tr><th style="text-align:center">账户</th><th style="text-align:center">密码(MD5加密前)</th><th style="text-align:center">角色</th><th style="text-align:center">权限</th></tr></thead><tbody><tr><td style="text-align:center">admin</td><td style="text-align:center">demo</td><td style="text-align:center">admin</td><td style="text-align:center">*</td></tr><tr><td style="text-align:center">tea</td><td style="text-align:center">demo</td><td style="text-align:center">teacher</td><td style="text-align:center">teaListView:view , stuListView:view , stuListView:add , stuListView:edit</td></tr><tr><td style="text-align:center">stu</td><td style="text-align:center">demo</td><td style="text-align:center">student</td><td style="text-align:center">stuListView:view</td></tr></tbody></table><h3 id="案例截屏解析"><a href="#案例截屏解析" class="headerlink" title="案例截屏解析"></a>案例截屏解析</h3><p><em>用户登录页面,访问资源前必须先进行用户身份认证,详情参考资源拦截器中的配置信息哟</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/11/一个基础的的SSM整合Shiro案例/ssm-shiro-用户登录页面.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>若要访问教师 / 学生信息管理页面,需要用户拥有<code>teaListView:view / stuListView:view</code>权限</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/11/一个基础的的SSM整合Shiro案例/ssm-shiro-用户主页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>管理员( admin )拥有访问资源的所有权限( </em> ),所以可以操控学生信息页面中的任何操作*<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/11/一个基础的的SSM整合Shiro案例/ssm-shiro-[admin]-学生信息管理页面.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>管理员( admin )拥有访问资源的所有权限( </em> ),所以可以操控教师信息页面中的任何操作*<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/11/一个基础的的SSM整合Shiro案例/ssm-shiro-[admin]-教师信息管理页面.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>教师( tea )拥有学生页面面的<code>stuListView:view , stuListView:add , stuListView:edit</code>权限,所以删除信息操作为不可见</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/11/一个基础的的SSM整合Shiro案例/ssm-shiro-[tea]-学生信息管理页面.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>教师( tea )仅拥有教师信息管理页面的<code>teaListView:view</code>权限,所以增,删,改,操作为不可见状态</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/11/一个基础的的SSM整合Shiro案例/ssm-shiro-[tea]-教师信息管理页面.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>学生( stu )仅拥有学生信息管理页面的<code>stuListView:view</code>权限,所以增,删,改,操作为不可见状态</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/11/一个基础的的SSM整合Shiro案例/ssm-shiro-[stu]-学生信息管理页面.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>学生( stu )没有访问教师信息管理页面的权限,所以被资源拦截器所拦截继而进入指定的’unauthorized.html’页面面</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/11/一个基础的的SSM整合Shiro案例/ssm-shiro-[stu]-教师信息管理页面.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-一个基础的的SSM整合Shiro案例&quot;&gt;&lt;a href=&quot;#学习笔记-一个基础的的SSM整合Shiro案例&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : 一个基础的的SSM整合Shiro案例&quot;&gt;&lt;/a&gt;学习笔记 : 一个基础的的SS
      
    
    </summary>
    
    
      <category term="SSM" scheme="http://yoursite.com/tags/SSM/"/>
    
      <category term="Shiro" scheme="http://yoursite.com/tags/Shiro/"/>
    
  </entry>
  
  <entry>
    <title>详解JSP中Shiro标签的使用</title>
    <link href="http://yoursite.com/2019/08/11/%E8%AF%A6%E8%A7%A3JSP%E4%B8%ADShiro%E6%A0%87%E7%AD%BE%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/08/11/详解JSP中Shiro标签的使用/</id>
    <published>2019-08-10T23:42:13.000Z</published>
    <updated>2019-08-11T03:46:42.415Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-详解JSP中Shiro标签的使用"><a href="#学习笔记-详解JSP中Shiro标签的使用" class="headerlink" title="学习笔记 : 详解JSP中Shiro标签的使用"></a>学习笔记 : 详解JSP中Shiro标签的使用</h2><p><em>Apache Shiro provides a Subject-aware JSP/GSP tag library that allows you to control your JSP, JSTL or GSP page output based on the current Subject’s state. This is quite useful for personalizing views based on the identity and authorization state of the current user viewing the web page. For more information, please refer to : <a href="http://shiro.apache.org/web.html#Web-taglibrary" target="_blank" rel="noopener">http://shiro.apache.org/web.html#Web-taglibrary</a></em></p><h3 id="Tag-Library-Configuration"><a href="#Tag-Library-Configuration" class="headerlink" title="Tag Library Configuration"></a>Tag Library Configuration</h3><p><em>The Tag Library Descriptor (TLD) file is bundled in shiro-web.jar in the <code>META-INF/shiro.tld</code> file. To use any of the tags, add the following line to the top of your JSP page (or wherever you define page directives) :</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"shiro"</span> <span class="attr">uri</span>=<span class="string">"http://shiro.apache.org/tags"</span> %&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li>We’ve used the shiro prefix to indicate the shiro tag library namespace, but you can assign whatever name you like.</li></ul><h3 id="shiro-authenicated"><a href="#shiro-authenicated" class="headerlink" title="shiro : authenicated"></a>shiro : authenicated</h3><p><em>表示认证已通过,但不包括<code>remember me</code>登录的</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shiro:authenticated</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户身份验证已通过<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:authenticated</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>说明 : 只有已通过用户认证,但不是通过记住我(<code>remember me</code>)浏览才会看到标签内的内容</em></p><h3 id="shiro-guest"><a href="#shiro-guest" class="headerlink" title="shiro : guest"></a>shiro : guest</h3><p><em>表示是游客身份,没有登录</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shiro:guest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>您当前是游客,<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/login.jsp"</span> &gt;</span>请登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:guest</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>说明 : 只有是没有登录过,以游客的身份浏览才会看到标签内的内容</em></p><h3 id="shiro-hasAnyRoles"><a href="#shiro-hasAnyRoles" class="headerlink" title="shiro : hasAnyRoles"></a>shiro : hasAnyRoles</h3><p><em>表示拥有这些角色中其中一个</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shiro:hasAnyRoles</span> <span class="attr">name</span>=<span class="string">"admin,user"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>这是拥有admin或者是user角色的用户<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:hasAnyRoles</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>说明 : 只有成功登录后,且具有admin或者user角色的用户才会看到标签内的内容. name属性中可以填写多个角色名称，以逗号( , )分隔</em></p><h3 id="shiro-hasPermission"><a href="#shiro-hasPermission" class="headerlink" title="shiro : hasPermission"></a>shiro : hasPermission</h3><p><em>表示拥有某一权限</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">"admin:add"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>这个用户拥有admin:add的权限<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>说明 : 只有成功登录后,且具有admin:add权限的用户才可以看到标签内的内容,name属性中只能填写一个权限的名称</em></p><h3 id="shiro-hashRole"><a href="#shiro-hashRole" class="headerlink" title="shiro : hashRole"></a>shiro : hashRole</h3><p><em>表示拥有某一角色</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">"admin"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>这个用户拥有的角色是admin<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>说明 : 只有成功登录后,且具有admin角色的用户才可以看到标签内的内容,name属性中只能填写一个角色的名称</em></p><h3 id="shiro-lacksPermission"><a href="#shiro-lacksPermission" class="headerlink" title="shiro : lacksPermission"></a>shiro : lacksPermission</h3><p><em>表示不拥有某一角色</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shiro:lacksPermission</span> <span class="attr">name</span>=<span class="string">"admin:delete"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>这个用户不拥有admin:delete的权限<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:lacksPermission</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>说明 : 只有成功登录后,且不具有admin:delete权限的用户才可以看到标签内的内容,name属性中只能填写一个权限的名称</em></p><h3 id="shiro-lacksRole"><a href="#shiro-lacksRole" class="headerlink" title="shiro : lacksRole"></a>shiro : lacksRole</h3><p><em>表示不拥有某一角色</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shiro:lacksRole</span> <span class="attr">name</span>=<span class="string">"admin"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>这个用户不拥有admin的角色<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:lacksRole</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>说明 : 只有成功登录后，且不具有admin角色的用户才可以看到标签内的内容,name属性中只能填写一个角色的名称</em></p><h3 id="shiro-notAuthenticated"><a href="#shiro-notAuthenticated" class="headerlink" title="shiro : notAuthenticated"></a>shiro : notAuthenticated</h3><p><em>表示没有通过验证</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shiro:notAuthenticated</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户身份验证没有通过<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:notAuthenticated</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>说明 : 只有没有通过验证的才可以看到标签内的内容,包括通过记住我(<code>remember me</code>)登录的</em></p><h3 id="shiro-principal"><a href="#shiro-principal" class="headerlink" title="shiro : principal"></a>shiro : principal</h3><p><em>表示用户的身份 : 取值取的是你登录的时候,在Realm实现类中的<code>SimpleAuthenticationInfo(Object principal, Object hashedCredentials, ByteSource credentialsSalt, String realmName)</code>放的第一个参数哟~ 例如 :</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> SimpleAuthenticationInfo(user, user.getPassword(), ByteSource.Util.bytes(user.getUsername()), <span class="keyword">this</span>.getName());</span><br></pre></td></tr></table></figure></p><ol><li><p><em>如果第一个放的是username或者是一个值,那么就可以直接用</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--取到username--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:</span> <span class="attr">principal</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>如果第一个参数放的是对象,比如放User对象. 那么如果要取其中某一个值,可以通过property属性来指定</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--需要指定property--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:principal</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="shiro-user"><a href="#shiro-user" class="headerlink" title="shiro : user"></a>shiro : user</h3><p><em>表示已登录</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shiro:user</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>欢迎[<span class="tag">&lt;<span class="name">shiro:principal</span>/&gt;</span>],<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/logout.jsp"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:user</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>说明 : 只有已经登录(包含通过记住我(<code>remember me</code>)登录的)的用户才可以看到标签内的内容. 一般和标签<code>shiro : principal</code>一起用,来做显示用户的名称</em></p><h3 id="标签嵌套"><a href="#标签嵌套" class="headerlink" title="标签嵌套"></a>标签嵌套</h3><p><em>shiro的jsp标签可以嵌套使用,可以根据业务的具体场景进行使用. 例如一个按钮需要排除不是admin或user角色的用户才可以显示,则可以像如下这样实现 :</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shiro:lacksRole</span> <span class="attr">name</span>=<span class="string">"admin"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">shiro:lacksRole</span> <span class="attr">name</span>=<span class="string">"user"</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>这个用户不拥有admin或user的角色<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">shiro:lacksRole</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:lacksRole</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>🙏参考链接(获益匪浅,非常感谢) :</em></p><ul><li><a href="https://blog.csdn.net/yaodieteng1510/article/details/79992247" target="_blank" rel="noopener">https://blog.csdn.net/yaodieteng1510/article/details/79992247</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-详解JSP中Shiro标签的使用&quot;&gt;&lt;a href=&quot;#学习笔记-详解JSP中Shiro标签的使用&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : 详解JSP中Shiro标签的使用&quot;&gt;&lt;/a&gt;学习笔记 : 详解JSP中Shiro标签的
      
    
    </summary>
    
    
      <category term="JSP" scheme="http://yoursite.com/tags/JSP/"/>
    
      <category term="Shiro" scheme="http://yoursite.com/tags/Shiro/"/>
    
  </entry>
  
  <entry>
    <title>SSM整合Shiro的基本配置</title>
    <link href="http://yoursite.com/2019/08/11/SSM%E6%95%B4%E5%90%88Shiro%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/08/11/SSM整合Shiro的基本配置/</id>
    <published>2019-08-10T22:55:55.000Z</published>
    <updated>2019-08-11T02:42:51.025Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-SSM整合Shiro的基本配置"><a href="#学习笔记-SSM整合Shiro的基本配置" class="headerlink" title="学习笔记 : SSM整合Shiro的基本配置"></a>学习笔记 : SSM整合Shiro的基本配置</h2><p><em>学习Spring Boot整合Shiro知识后,写了<a href="https://github.com/YUbuntu0109/Shiro-learning/tree/master/spring%20boot%20project%20with%20shiro" target="_blank" rel="noopener">一个简单的Spring Boot整合Shiro的权限管理案例</a>,可随后在GitHub上发现了一个<a href="https://github.com/YUbuntu0109/Permission" target="_blank" rel="noopener">基于SSM框架简单的后台权限管理系统</a>,很喜欢该项目(比较初级,适合练手),所以又开始学习如何在SSM中整合Shiro,Spring集成Shiro一般通过的 xml 配置,相比Spring Boot较为繁琐哟~ 以下基本配置信息摘自案例 : <a href="https://github.com/YUbuntu0109/Shiro-learning/tree/master/ssm%20project%20with%20shiro" target="_blank" rel="noopener">一个简单的SSM整合Shiro的权限管理案例</a></em></p><h3 id="Maven依赖"><a href="#Maven依赖" class="headerlink" title="Maven依赖"></a>Maven依赖</h3><p><em>Shiro-learning/ssm project with shiro/ssm-shiro/pom.xml</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Shiro --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Ehcache --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="web-xml配置"><a href="#web-xml配置" class="headerlink" title="web.xml配置"></a>web.xml配置</h3><p><em>Shiro-learning/ssm project with shiro/ssm-shiro/src/main/webapp/WEB-INF/web.xml</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">配置Spring整合Shiro的过滤器:将拦截下来的请求交给Spring容器中名为'shiroFilter'(与filter-name同名)的bean处理</span></span><br><span class="line"><span class="comment">详情信息见:applicationContext-shiro.xml</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>shiroFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.DelegatingFilterProxy<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>shiroFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="Shiro的基本配置"><a href="#Shiro的基本配置" class="headerlink" title="Shiro的基本配置"></a>Shiro的基本配置</h3><p><em>Shiro-learning/ssm project with shiro/ssm-shiro/src/main/resources/spring-config/applicationContext-shiro.xml</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>configuration informations about Shiro<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置shiroFilter:这里的id名(shiroFilter)要和web.xml配置的名字保持一致哟 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"shiroFilter"</span> <span class="attr">class</span>=<span class="string">"org.apache.shiro.spring.web.ShiroFilterFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 关联SecurityManage --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"securityManager"</span> <span class="attr">ref</span>=<span class="string">"securityManager"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义过虑器链,从上向下顺序执行,一般将/**放在最下边 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"filterChainDefinitions"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 防止过滤器拦截验证用户登录信息的请求(/login ) --&gt;</span></span><br><span class="line">                /login=anon</span><br><span class="line">                <span class="comment">&lt;!-- 设置Shiro默认的注销请求:其具体的注销逻辑代码Shiro已经替我们实现了哟 --&gt;</span></span><br><span class="line">                /logout=logout</span><br><span class="line">                <span class="comment">&lt;!-- 设置角色过滤 --&gt;</span></span><br><span class="line">                /teaListView=roles[admin]</span><br><span class="line">                <span class="comment">&lt;!-- 设置请求权限过滤:除身份认证外,还需要用户拥有对stuListView/teaListView资源的view权限 --&gt;</span></span><br><span class="line">                /stuListView=perms[stuListView:view]</span><br><span class="line">                /teaListView=perms[teaListView:view]</span><br><span class="line">                <span class="comment">&lt;!-- 所有资源的访问都需要身份认证 --&gt;</span></span><br><span class="line">                /**=authc</span><br><span class="line">            <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定Shiro默认的登录请求,默认: http://localhost:8080/login.jsp --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"loginUrl"</span> <span class="attr">value</span>=<span class="string">"/loginView"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定用户未授权操作提示页 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"unauthorizedUrl"</span> <span class="attr">value</span>=<span class="string">"/unauthorizedView"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自定义realm --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"realm"</span> <span class="attr">class</span>=<span class="string">"pers.huangyuhui.shiro.shiro.UserRealm"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 用户凭证加密配置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"credentialsMatcher"</span> <span class="attr">ref</span>=<span class="string">"credentialsMatcher"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 是否启用缓存:默认为true --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cachingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 是否启用身份验证缓存 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"authenticationCachingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 缓存AuthenticationInfo信息的缓存名称 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"authenticationCacheName"</span> <span class="attr">value</span>=<span class="string">"authenticationCache"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 是否启用授权缓存:缓存AuthorizationInfo信息 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"authorizationCachingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 缓存AuthorizationInfo信息的缓存名称 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"authorizationCacheName"</span> <span class="attr">value</span>=<span class="string">"authorizationCache"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Shiro安全管理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"securityManager"</span> <span class="attr">class</span>=<span class="string">"org.apache.shiro.web.mgt.DefaultWebSecurityManager"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入自定义Realm --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"realm"</span> <span class="attr">ref</span>=<span class="string">"realm"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入缓存管理器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cacheManager"</span> <span class="attr">ref</span>=<span class="string">"ehCacheManager"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Shiro凭证匹配器:对登录用户的密码进行MD5加密,hashIterations是散列加密次数,盐值信息见:UserRealm.java --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"credentialsMatcher"</span> <span class="attr">class</span>=<span class="string">"org.apache.shiro.authc.credential.HashedCredentialsMatcher"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hashAlgorithmName"</span> <span class="attr">value</span>=<span class="string">"MD5"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hashIterations"</span> <span class="attr">value</span>=<span class="string">"3"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Shiro缓存管理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"ehCacheManager"</span> <span class="attr">class</span>=<span class="string">"org.apache.shiro.cache.ehcache.EhCacheManager"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入ehcache配置文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cacheManagerConfigFile"</span> <span class="attr">value</span>=<span class="string">"classpath:shiro-config/ehcache-shiro.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Shiro生命周期处理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"lifecycleBeanPostProcessor"</span> <span class="attr">class</span>=<span class="string">"org.apache.shiro.spring.LifecycleBeanPostProcessor"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开启shiro注解模式:如果使用注解模式,必须采用cglib针对类进行代理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">depends-on</span>=<span class="string">"lifecycleBeanPostProcessor"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"proxyTargetClass"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"securityManager"</span> <span class="attr">ref</span>=<span class="string">"securityManager"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>Shiro-learning/ssm project with shiro/ssm-shiro/src/main/resources/shiro-config/ehcache-shiro.xml</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">"http://ehcache.org/ehcache.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">updateCheck</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">name</span>=<span class="string">"myEhcache"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">"java.io.tmpdir"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 授权信息缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"authorizationCache"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"2000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">statistics</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 身份信息缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"authenticationCache"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"2000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">statistics</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Session缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"activeSessionCache"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"2000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">statistics</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存半小时 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"halfHour"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsOnDisk</span>=<span class="string">"100000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存一小时 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"hour"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsOnDisk</span>=<span class="string">"100000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"3600"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"3600"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存一天 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"oneDay"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsOnDisk</span>=<span class="string">"100000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"86400"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"86400"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">         name: 缓存名称</span></span><br><span class="line"><span class="comment">         maxElementsInMemory: 缓存最大个数</span></span><br><span class="line"><span class="comment">         eternal: 对象是否永久有效,一但设置了,timeout将不起作用</span></span><br><span class="line"><span class="comment">         timeToIdleSeconds: 设置对象在失效前的允许闲置时间(单位：秒). 仅当eternal=false对象不是永久有效时使用,可选属性,默认值是0,也就是可闲置时间无穷大</span></span><br><span class="line"><span class="comment">         timeToLiveSeconds: 设置对象在失效前允许存活时间(单位：秒). 最大时间介于创建时间和失效时间之间. 仅当eternal=false对象不是永久有效时使用,默认是0,也就是对象存活时间无穷大</span></span><br><span class="line"><span class="comment">         overflowToDisk: 当内存中对象数量达到maxElementsInMemory时,Ehcache将会对象写到磁盘中</span></span><br><span class="line"><span class="comment">         diskSpoolBufferSizeMB: 这个参数设置DiskStore(磁盘缓存)的缓存区大小,默认是30MB. 每个Cache都应该有自己的一个缓冲区</span></span><br><span class="line"><span class="comment">         maxElementsOnDisk: 硬盘最大缓存个数</span></span><br><span class="line"><span class="comment">         diskPersistent: 是否缓存虚拟机重启期数据 Whether the disk store persists between restarts of the Virtual Machine. The default value is false.</span></span><br><span class="line"><span class="comment">         diskExpiryThreadIntervalSeconds: 磁盘失效线程运行时间间隔,默认是120秒</span></span><br><span class="line"><span class="comment">         memoryStoreEvictionPolicy: 当达到maxElementsInMemory限制时,Ehcache将会根据指定的策略去清理内存. 默认策略是LRU(最近最少使用). 你可以设置为FIFO(先进先出)或是LFU(较少使用)</span></span><br><span class="line"><span class="comment">         clearOnFlush: 内存数量最大时是否清除</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defaultCache</span> <span class="attr">name</span>=<span class="string">"defaultCache"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">maxElementsInMemory</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">timeToIdleSeconds</span>=<span class="string">"600"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">timeToLiveSeconds</span>=<span class="string">"600"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">maxElementsOnDisk</span>=<span class="string">"100000"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">diskPersistent</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">diskExpiryThreadIntervalSeconds</span>=<span class="string">"120"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">defaultCache</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="自定义Realm的基本配置"><a href="#自定义Realm的基本配置" class="headerlink" title="自定义Realm的基本配置"></a>自定义Realm的基本配置</h3><p><em>Shiro-learning/ssm project with shiro/ssm-shiro/src/main/java/pers/huangyuhui/shiro/shiro/UserRealm.java</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.shiro.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.SimpleAuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.ByteSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> pers.huangyuhui.shiro.bean.Permission;</span><br><span class="line"><span class="keyword">import</span> pers.huangyuhui.shiro.bean.Role;</span><br><span class="line"><span class="keyword">import</span> pers.huangyuhui.shiro.bean.User;</span><br><span class="line"><span class="keyword">import</span> pers.huangyuhui.shiro.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span>: ssm-shiro</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 配置自定义Realm</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 黄宇辉</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 8/10/2019-1:11 PM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@website</span>: https://yubuntu0109.github.io/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 授权认证:提供用户信息,返回权限信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>: principals</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-11 7:50 AM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: org.apache.shiro.authz.AuthorizationInfo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principals)</span> </span>&#123;</span><br><span class="line">        System.err.println(<span class="string">"------------&gt; 授权认证 ------------&gt;"</span>);</span><br><span class="line">        <span class="comment">//获取当前登录的用户信息</span></span><br><span class="line">        Subject currentUser = SecurityUtils.getSubject();</span><br><span class="line">        User u = (User) currentUser.getPrincipal();</span><br><span class="line">        <span class="comment">//从数据库中获取用户所拥有的角色及权限信息</span></span><br><span class="line">        User user = userService.findByName(u.getUsername());</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            SimpleAuthorizationInfo info = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">            <span class="comment">//用于存储用户的角色及权限信息</span></span><br><span class="line">            Collection&lt;String&gt; rolesCollection = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">            Collection&lt;String&gt; permissionsCollection = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">            Set&lt;Role&gt; roles = user.getRoles(); <span class="comment">//获取用户Role的Set集合</span></span><br><span class="line">            <span class="comment">//通过遍历用户所拥有的角色,来获取其对应的权限信息</span></span><br><span class="line">            <span class="keyword">for</span> (Role role : roles) &#123;</span><br><span class="line">                rolesCollection.add(role.getName()); <span class="comment">//将每一个role的name封装到集合中</span></span><br><span class="line">                Set&lt;Permission&gt; permissionSet = role.getPermissions(); <span class="comment">//获取每一个role所对应的permission的set集合</span></span><br><span class="line">                <span class="comment">//遍历用户所拥有的权限信息</span></span><br><span class="line">                <span class="keyword">for</span> (Permission permission : permissionSet) &#123;</span><br><span class="line">                    permissionsCollection.add(permission.getName()); <span class="comment">//将每一个permission的name封装到集合中</span></span><br><span class="line">                &#125;</span><br><span class="line">                info.addStringPermissions(permissionsCollection); <span class="comment">//为用户授权</span></span><br><span class="line">            &#125;</span><br><span class="line">            info.addRoles(rolesCollection); <span class="comment">//为用户授予角色</span></span><br><span class="line">            System.out.println(<span class="string">"[roles]------------&gt;"</span> + rolesCollection.toString());</span><br><span class="line">            System.out.println(<span class="string">"[permissions]------------&gt;"</span> + permissionsCollection.toString());</span><br><span class="line">            <span class="keyword">return</span> info;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 登录认证:提供帐户信息,返回认证信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>: authenticationToken</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-11 7:51 AM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: org.apache.shiro.authc.AuthenticationInfo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        System.err.println(<span class="string">"------------&gt; 开始认证 ------------&gt;"</span>);</span><br><span class="line">        UsernamePasswordToken token = (UsernamePasswordToken) authenticationToken;</span><br><span class="line">        <span class="comment">//从数据库中获取用户信息</span></span><br><span class="line">        User user = userService.findByName(token.getUsername());</span><br><span class="line">        System.out.println(<span class="string">"[user]------------&gt;"</span> + user);</span><br><span class="line">        <span class="comment">//验证账户信息</span></span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>; <span class="comment">//it's will be throw a UnknownAccountException</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//验证密码信息(盐值:ByteSource.Util.bytes(user.getUsername()))</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SimpleAuthenticationInfo(user, user.getPassword(), ByteSource.Util.bytes(user.getUsername()), <span class="keyword">this</span>.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-SSM整合Shiro的基本配置&quot;&gt;&lt;a href=&quot;#学习笔记-SSM整合Shiro的基本配置&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : SSM整合Shiro的基本配置&quot;&gt;&lt;/a&gt;学习笔记 : SSM整合Shiro的基本配置&lt;/
      
    
    </summary>
    
    
      <category term="SSM" scheme="http://yoursite.com/tags/SSM/"/>
    
      <category term="Shiro" scheme="http://yoursite.com/tags/Shiro/"/>
    
  </entry>
  
  <entry>
    <title>GitHub中emoji表情的含义及使用规范</title>
    <link href="http://yoursite.com/2019/08/10/GitHub%E4%B8%ADemoji%E8%A1%A8%E6%83%85%E7%9A%84%E5%90%AB%E4%B9%89%E5%8F%8A%E4%BD%BF%E7%94%A8%E8%A7%84%E8%8C%83/"/>
    <id>http://yoursite.com/2019/08/10/GitHub中emoji表情的含义及使用规范/</id>
    <published>2019-08-10T12:02:55.000Z</published>
    <updated>2019-08-11T09:08:28.204Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-GitHub中emoji表情的含义及使用规范"><a href="#学习笔记-GitHub中emoji表情的含义及使用规范" class="headerlink" title="学习笔记 : GitHub中emoji表情的含义及使用规范"></a>学习笔记 : GitHub中emoji表情的含义及使用规范</h2><p><em>日语 : <code>絵文字/えもじ emoji</code>,是日本在无线通信中所使用的视觉情感符号,绘指图画,文字指的则是字符,可用来代表多种表情,如笑脸表示笑、蛋糕表示食物等. emoji 频繁地出现在我们的聊天记录、朋友圈、甚至很多时候我们都会用 emoji 代替文字来聊天,既而来传达自己想要表达的一切,作为一名程序员,常用的代码托管平台 GitHub 中也是可以使用 emoji 表情的哟~ 😜</em>  </p><p><em>执行<code>git commit</code>时使用 emoji 为本次提交打上一个标签, 使得此次 commit 的主要工作得以凸现,也能够使得其在整个提交历史中易于区分与查找,添加了 emoji 表情的提交记录真的能包含很多有用信息,阅读体验非常棒. 但是,emoji 表情在提交代码的时候也不能乱用,否则容易造成误解. 因此开源项目 <a href="https://gitmoji.carloscuesta.me/" target="_blank" rel="noopener">gitmoji</a> 专门规定了在 GitHub 提交代码时应当遵循的 emoji 规范~ 更多信息请参考 : <a href="https://github.com/carloscuesta/gitmoji/" target="_blank" rel="noopener">https://github.com/carloscuesta/gitmoji/</a></em></p><table><thead><tr><th style="text-align:center">emoji</th><th style="text-align:center">emoji代码</th><th style="text-align:center">commit描述</th></tr></thead><tbody><tr><td style="text-align:center">🎨 (调色板)</td><td style="text-align:center"><code>:art:</code></td><td style="text-align:center">改进代码结构/代码格式</td></tr><tr><td style="text-align:center">⚡️(闪电)</td><td style="text-align:center"><code>:zap:</code></td><td style="text-align:center">提高性能</td></tr><tr><td style="text-align:center">🔥 (火焰)</td><td style="text-align:center"><code>:fire:</code></td><td style="text-align:center">移除代码或文件</td></tr><tr><td style="text-align:center">🐛 (bug)</td><td style="text-align:center"><code>:bug:</code></td><td style="text-align:center">修复 bug</td></tr><tr><td style="text-align:center">🚑 (急救车)</td><td style="text-align:center"><code>:ambulance:</code></td><td style="text-align:center">重要补丁</td></tr><tr><td style="text-align:center">✨ (火花)</td><td style="text-align:center"><code>:sparkles:</code></td><td style="text-align:center">引入新功能</td></tr><tr><td style="text-align:center">📝 (备忘录)</td><td style="text-align:center"><code>:memo:</code></td><td style="text-align:center">撰写文档</td></tr><tr><td style="text-align:center">🚀 (火箭)</td><td style="text-align:center"><code>:rocket:</code></td><td style="text-align:center">部署功能</td></tr><tr><td style="text-align:center">💄 (口红)</td><td style="text-align:center"><code>:lipstick:</code></td><td style="text-align:center">更新 UI 和样式文件</td></tr><tr><td style="text-align:center">🎉 (庆祝)</td><td style="text-align:center"><code>:tada:</code></td><td style="text-align:center">初次提交</td></tr><tr><td style="text-align:center">✅ (白色复选框)</td><td style="text-align:center"><code>:white_check_mark:</code></td><td style="text-align:center">增加测试</td></tr><tr><td style="text-align:center">🔒 (锁)</td><td style="text-align:center"><code>:lock:</code></td><td style="text-align:center">修复安全问题</td></tr><tr><td style="text-align:center">🍎 (红苹果)</td><td style="text-align:center"><code>:apple:</code></td><td style="text-align:center">修复 macOS 下的问题</td></tr><tr><td style="text-align:center">🍏(青苹果)</td><td style="text-align:center"><code>:green_apple:</code></td><td style="text-align:center">修复 iOS 下的问题</td></tr><tr><td style="text-align:center">🐧 (企鹅)</td><td style="text-align:center"><code>:penguin:</code></td><td style="text-align:center">修复 Linux 下的问题</td></tr><tr><td style="text-align:center">🏁 (旗帜)</td><td style="text-align:center"><code>:checkered_flag:</code></td><td style="text-align:center">修复 Windows 下的问题</td></tr><tr><td style="text-align:center">🤖(机器人)</td><td style="text-align:center"><code>:robot:</code></td><td style="text-align:center">修复 androd 下的问题</td></tr><tr><td style="text-align:center">🔖 (书签)</td><td style="text-align:center"><code>:bookmark:</code></td><td style="text-align:center">发行/版本标签</td></tr><tr><td style="text-align:center">🚨 (警车灯)</td><td style="text-align:center"><code>:rotating_light:</code></td><td style="text-align:center">移除 linter 警告</td></tr><tr><td style="text-align:center">🚧 (施工)</td><td style="text-align:center"><code>:construction:</code></td><td style="text-align:center">工作进行中</td></tr><tr><td style="text-align:center">💚 (绿心)</td><td style="text-align:center"><code>:green_heart:</code></td><td style="text-align:center">修复 CI 构建问题</td></tr><tr><td style="text-align:center">⬇️ (下降箭头)</td><td style="text-align:center"><code>:arrow_down:</code></td><td style="text-align:center">降级依赖</td></tr><tr><td style="text-align:center">⬆️ (上升箭头)</td><td style="text-align:center"><code>:arrow_up:</code></td><td style="text-align:center">升级依赖</td></tr><tr><td style="text-align:center">👷 (工人)</td><td style="text-align:center"><code>:construction_worker:</code></td><td style="text-align:center">添加 CI 构建系统</td></tr><tr><td style="text-align:center">📈 (上升趋势图)</td><td style="text-align:center"><code>:chart_with_upwards_trend:</code></td><td style="text-align:center">添加分析或跟踪代码</td></tr><tr><td style="text-align:center">🔨 (锤子)</td><td style="text-align:center"><code>:hammer:</code></td><td style="text-align:center">重大重构</td></tr><tr><td style="text-align:center">➖ (减号)</td><td style="text-align:center"><code>:heavy_minus_sign:</code></td><td style="text-align:center">减少一个依赖</td></tr><tr><td style="text-align:center">🐳 (鲸鱼)</td><td style="text-align:center"><code>:whale:</code></td><td style="text-align:center">Docker 相关工作</td></tr><tr><td style="text-align:center">➕ (加号)</td><td style="text-align:center"><code>:heavy_plus_sign:</code></td><td style="text-align:center">增加一个依赖</td></tr><tr><td style="text-align:center">🔧 (扳手)</td><td style="text-align:center"><code>:wrench:</code></td><td style="text-align:center">修改配置文件</td></tr><tr><td style="text-align:center">🌐 (地球)</td><td style="text-align:center"><code>:globe_with_meridians:</code></td><td style="text-align:center">国际化与本地化</td></tr><tr><td style="text-align:center">✏️ (铅笔)</td><td style="text-align:center"><code>:pencil2:</code></td><td style="text-align:center">修复错别字</td></tr><tr><td style="text-align:center">👌 (OK手势)</td><td style="text-align:center"><code>:ok_hand:</code></td><td style="text-align:center">由于代码审查更改而更新代码</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:pushpin:</code></td><td style="text-align:center">Pinning dependencies to specific versions</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:recycle:</code></td><td style="text-align:center">Refactoring code</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:poop:</code></td><td style="text-align:center">Writing bad code that needs to be improved</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:rewind:</code></td><td style="text-align:center">Reverting changes</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:twisted_rightwards_arrows:</code></td><td style="text-align:center">Merging branches</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:package:</code></td><td style="text-align:center">Updating compiled files or packages</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:alien:</code></td><td style="text-align:center">Updating code due to external API changes</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:truck:</code></td><td style="text-align:center">Moving or renaming files</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:page_facing_up:</code></td><td style="text-align:center">Adding or updating license</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:boom:</code></td><td style="text-align:center">Introducing breaking changes</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:bento:</code></td><td style="text-align:center">Adding or updating assets</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:wheelchair:</code></td><td style="text-align:center">Improving accessibility</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:bulb:</code></td><td style="text-align:center">Documenting source code</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:beers:</code></td><td style="text-align:center">Writing code drunkenly</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:speech_balloon:</code></td><td style="text-align:center">Updating text and literals</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:card_file_box:</code></td><td style="text-align:center">Performing database related changes</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:loud_sound:</code></td><td style="text-align:center">Adding logs</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:mute:</code></td><td style="text-align:center">Removing logs</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:busts_in_silhouette:</code></td><td style="text-align:center">Adding contributor(s)</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:children_crossing:</code></td><td style="text-align:center">Improving user experience / usability</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:building_construction:</code></td><td style="text-align:center">Making architectural changes</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:iphone:</code></td><td style="text-align:center">Working on responsive design</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:clown_face:</code></td><td style="text-align:center">Mocking things</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:egg:</code></td><td style="text-align:center">Adding an easter egg</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:see_no_evil:</code></td><td style="text-align:center">Adding or updating a .gitignore file</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:camera_flash:</code></td><td style="text-align:center">Adding or updating snapshots</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:alembic:</code></td><td style="text-align:center">Experimenting new things</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:mag:</code></td><td style="text-align:center">Improving SEO</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:wheel_of_dharma:</code></td><td style="text-align:center">Work about Kubernetes</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>:label:</code></td><td style="text-align:center">Adding or updating types (Flow, TypeScript)</td></tr></tbody></table><p><em>🙏参考链接 :</em></p><ul><li><a href="https://qq52o.me/1974.html" target="_blank" rel="noopener">https://qq52o.me/1974.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-GitHub中emoji表情的含义及使用规范&quot;&gt;&lt;a href=&quot;#学习笔记-GitHub中emoji表情的含义及使用规范&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : GitHub中emoji表情的含义及使用规范&quot;&gt;&lt;/a&gt;学习笔
      
    
    </summary>
    
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Git Commit Message 规范</title>
    <link href="http://yoursite.com/2019/08/08/Git-Commit-Message-%E8%A7%84%E8%8C%83/"/>
    <id>http://yoursite.com/2019/08/08/Git-Commit-Message-规范/</id>
    <published>2019-08-08T11:59:13.000Z</published>
    <updated>2019-08-09T00:34:42.090Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-Git-Commit-Message规范"><a href="#学习笔记-Git-Commit-Message规范" class="headerlink" title="学习笔记 : Git Commit Message规范"></a>学习笔记 : Git Commit Message规范</h2><p><em>Git Commit Message 应该清晰明了,要用精简的语言说明本次提交的目的,其主要作用是为了后续的搜索、版本的回滚、合并冲突的追溯等操作~</em></p><h3 id="规范介绍"><a href="#规范介绍" class="headerlink" title="规范介绍"></a>规范介绍</h3><p><em>这次主要介绍 AngularJS 的规范,它是由 Google 推出的一套提交消息规范标准,也是目前使用范围最广的规范,比较合理和系统化,并且还有配套的工具可以供我们使用,规范执行方案如下 :</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/08/Git-Commit-Message-规范/git-commit-message-mindmap.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="格式要求"><a href="#格式要求" class="headerlink" title="格式要求"></a>格式要求</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">type</span>&gt;</span>(<span class="tag">&lt;<span class="name">scope</span>&gt;</span>): <span class="tag">&lt;<span class="name">subject</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">BLANK</span> <span class="attr">LINE</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">BLANK</span> <span class="attr">LINE</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>消息只占用一行,任何行都不能超过 100 个字符</li><li>允许使用 GitHub 以及各种 Git 工具阅读消息</li><li>提交消息由页眉、正文和页脚组成,由空行分隔</li></ul><h4 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h4><p><em>Header部分只有一行,包括三个字段 : <code>type</code>(必需)、<code>scope</code>(可选)、和<code>subject</code>(必需)</em></p><ol><li><em><code>type</code>代表某次提交的类型,比如是修复一个 bug 或是增加一个 feature,类型如下 :</em></li></ol><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">feat</td><td style="text-align:center">新增feature</td></tr><tr><td style="text-align:center">fix</td><td style="text-align:center">修复bug</td></tr><tr><td style="text-align:center">docs</td><td style="text-align:center">仅仅修改了文档,比如README , CHANGELOG , CONTRIBUTE等等</td></tr><tr><td style="text-align:center">style</td><td style="text-align:center">修改了空格,格式缩进,逗号等,不改变代码逻辑</td></tr><tr><td style="text-align:center">refactor</td><td style="text-align:center">代码重构,没有添加新功能或修复Bug</td></tr><tr><td style="text-align:center">perf</td><td style="text-align:center">优化相关,比如提升性能,体验</td></tr><tr><td style="text-align:center">test</td><td style="text-align:center">测试用例,包括单元测试,集成测试等</td></tr><tr><td style="text-align:center">chore</td><td style="text-align:center">改变构建流程,或者增加依赖库,工具等</td></tr><tr><td style="text-align:center">revert</td><td style="text-align:center">回滚到上一个版本</td></tr></tbody></table><ol start="2"><li><em><code>scope</code>用于说明 commit 影响的范围,可以是指定提交更改位置的任何内容,如 :</em></li></ol><ul><li>对 package.json 文件新增依赖库，chore(package.json): 新增依赖库</li><li>或对代码进行重构，refacto(weChat.vue): 重构微信进件</li></ul><ol start="3"><li><em><code>subject</code>是 commit 目的的简短描述,不超过50个字符. 如果没有更合适的范围,可以直接写提交内容,格式要求如下 :</em></li></ol><ul><li>以动词开头,使用第一人称现在时,比如change,而不是changed或changes</li><li>第一个字母小写</li><li>结尾不加句号( . )</li></ul><h4 id="Body"><a href="#Body" class="headerlink" title="Body"></a>Body</h4><p><em>Body 部分是对本次 commit 的详细描述,可以分成多行. 下面是一个范例 :</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">More detailed explanatory text, if necessary.  Wrap it to </span><br><span class="line">about 72 characters or so. </span><br><span class="line"></span><br><span class="line">Further paragraphs come after blank lines.</span><br><span class="line"></span><br><span class="line">- Bullet points are okay, too</span><br><span class="line">- Use a hanging indent</span><br></pre></td></tr></table></figure></p><p><em>有两个注意点 :</em></p><ul><li>使用第一人称现在时,比如使用change而不是changed或changes</li><li>应该说明代码变动的动机,以及与以前行为的对比</li></ul><h4 id="Footer"><a href="#Footer" class="headerlink" title="Footer"></a>Footer</h4><p><em>Footer 部分只用于两种情况 :</em></p><ol><li><p><em>不兼容变动 : 如果当前代码与上一个版本不兼容,则 Footer 部分以<code>BREAKING CHANGE</code>开头,后面是对变动的描述、以及变动理由和迁移方法,示例如下 :</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BREAKING CHANGE: isolate scope bindings definition has changed.</span><br><span class="line"></span><br><span class="line">    To migrate the code follow the example below:</span><br><span class="line"></span><br><span class="line">    Before:</span><br><span class="line"></span><br><span class="line">    scope: &#123;</span><br><span class="line">      myAttr: &apos;attribute&apos;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    After:</span><br><span class="line"></span><br><span class="line">    scope: &#123;</span><br><span class="line">      myAttr: &apos;@&apos;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    The removed `inject` wasn&apos;t generaly useful for directives so there should be no code using it.</span><br></pre></td></tr></table></figure></li><li><p><em>关闭 Issue : 如果当前 commit 针对某个issue,那么可以在 Footer 部分关闭这个 issue :</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Closes #234</span><br></pre></td></tr></table></figure></li></ol><p><em>也可以一次关闭多个 issue :</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Closes #123, #245, #992</span><br></pre></td></tr></table></figure></p><h4 id="Revert"><a href="#Revert" class="headerlink" title="Revert"></a>Revert</h4><p><em>还有一种特殊情况,如果当前 commit 用于撤销以前的 commit,则必须以<code>revert:</code>开头，后面跟着被撤销 Commit 的 Header,示例如下 :</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">revert: feat(pencil): add &apos;graphiteWidth&apos; option</span><br><span class="line"></span><br><span class="line">This reverts commit 667ecc1654a317a13331b17617d973392f415f02.</span><br></pre></td></tr></table></figure></p><p><em>Body部分的格式是固定的，必须写成<code>This reverts commit &amp;lt;hash&gt;</code>,其中的<code>hash</code>是被撤销 commit 的<code>SHA</code>标识符。</em></p><p><em>✨规范参考链接 :</em></p><ul><li><a href="https://github.com/vuejs/vue/commits/dev" target="_blank" rel="noopener">https://github.com/vuejs/vue/commits/dev</a></li><li><a href="https://github.com/angular/angular/commits/master" target="_blank" rel="noopener">https://github.com/angular/angular/commits/master</a></li></ul><p><em>🙏文章参考链接(获益匪浅,非常感谢) :</em></p><ul><li><a href="https://www.cnblogs.com/wubaiqing/p/10307605.html" target="_blank" rel="noopener">https://www.cnblogs.com/wubaiqing/p/10307605.html</a></li><li><a href="http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-Git-Commit-Message规范&quot;&gt;&lt;a href=&quot;#学习笔记-Git-Commit-Message规范&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : Git Commit Message规范&quot;&gt;&lt;/a&gt;学习笔记 : Gi
      
    
    </summary>
    
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>为GitHub量身定制的浏览器插件</title>
    <link href="http://yoursite.com/2019/08/08/%E4%B8%BAGitHub%E9%87%8F%E8%BA%AB%E5%AE%9A%E5%88%B6%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/08/08/为GitHub量身定制的浏览器插件/</id>
    <published>2019-08-08T00:29:09.000Z</published>
    <updated>2019-08-08T00:56:47.027Z</updated>
    
    <content type="html"><![CDATA[<h2 id="力推几款为GitHub量身定制的浏览器插件"><a href="#力推几款为GitHub量身定制的浏览器插件" class="headerlink" title="力推几款为GitHub量身定制的浏览器插件"></a>力推几款为GitHub量身定制的浏览器插件</h2><h3 id="Octotree"><a href="#Octotree" class="headerlink" title="Octotree"></a>Octotree</h3><p><em>GitHub现有的目录层级形式,在查看来自不同层级文件夹的文件的时候显得似乎不是很方便,体验相当糟糕,只能重复地点进一个文件夹,再进入其中一个文件夹,如此循环. 尤其是在文件繁多的项目之中,文件夹嵌套堪称噩梦,一个个点击太费时间和精力. 而<code>octotree</code>这款插件则可以解决这个痛点,他能够像 IDE 一样提供项目目录,快捷导航,方便浏览 !  <a href="https://github.com/ovity/octotree" target="_blank" rel="noopener">https://github.com/ovity/octotree</a></em></p><h3 id="Awesome-Autocomplete-for-GitHub"><a href="#Awesome-Autocomplete-for-GitHub" class="headerlink" title="Awesome Autocomplete for GitHub"></a>Awesome Autocomplete for GitHub</h3><p><em><code>Awesome Autocomplete for GitHub</code>是一款GitHub智能搜索插件 : 有点类似自动补全功能,实时监听输入的搜索关键字,自动列出相关内容. 正如官方介绍 : 致力于打造 GitHub 上最好的搜索引擎,助你在搜索仓库和用户方面,比以往更快人一步 !  <a href="https://github.com/algolia/github-awesome-autocomplete" target="_blank" rel="noopener">https://github.com/algolia/github-awesome-autocomplete</a></em></p><h3 id="Isometric-Contributions"><a href="#Isometric-Contributions" class="headerlink" title="Isometric Contributions"></a>Isometric Contributions</h3><p><em><code>Isometric Contributions</code>是一款可以将冷冰冰的数据转化为生动图形的扩展程序 : 它可以将你每天的contributions数目转化为颜色不一的立体柱状图,并给出自己的统计数据. Contributions数目由少到多分别以颜色逐渐变重的立体柱状图显示,宛如搭建一座高低错落的城市一般. 这个插件允许你在普通的 Github 贡献表与等距像素艺术版之间切换,除了”图形化”你的数据之外,它还可以将你一年内的提交状况,以及”最忙”的一天提交数目统计出来 !  <a href="https://github.com/jasonlong/isometric-contributions" target="_blank" rel="noopener">https://github.com/jasonlong/isometric-contributions</a></em></p><p><em>更多优秀插件介绍可参考 : <a href="https://www.cnblogs.com/fang8206/p/7484703.html" target="_blank" rel="noopener">https://www.cnblogs.com/fang8206/p/7484703.html</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;力推几款为GitHub量身定制的浏览器插件&quot;&gt;&lt;a href=&quot;#力推几款为GitHub量身定制的浏览器插件&quot; class=&quot;headerlink&quot; title=&quot;力推几款为GitHub量身定制的浏览器插件&quot;&gt;&lt;/a&gt;力推几款为GitHub量身定制的浏览器插件&lt;/
      
    
    </summary>
    
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>一个基础的SpringBoot整合Shiro案例</title>
    <link href="http://yoursite.com/2019/08/07/%E4%B8%80%E4%B8%AA%E5%9F%BA%E7%A1%80%E7%9A%84SpringBoot%E6%95%B4%E5%90%88Shiro%E6%A1%88%E4%BE%8B/"/>
    <id>http://yoursite.com/2019/08/07/一个基础的SpringBoot整合Shiro案例/</id>
    <published>2019-08-07T04:14:55.000Z</published>
    <updated>2019-08-12T01:13:12.139Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-一个基础的SpringBoot整合Shiro案例"><a href="#学习笔记-一个基础的SpringBoot整合Shiro案例" class="headerlink" title="学习笔记 : 一个基础的SpringBoot整合Shiro案例"></a>学习笔记 : 一个基础的SpringBoot整合Shiro案例</h2><p><em>前些日子写了一个<a href="https://github.com/YUbuntu0109/Shiro-learning/tree/master/basic%20web%20project%20with%20shiro" target="_blank" rel="noopener">整合Shiro的基本Web案例</a>,然后又进阶地学习了SpringBoot整合Shiro的基本知识,继而今天总结一下 : 写一个基础的SpringBoot整合Shiro案例~ 该案例的代码仓库 : <a href="https://github.com/YUbuntu0109/Shiro-learning/tree/master/spring%20boot%20project%20with%20shiro" target="_blank" rel="noopener">https://github.com/YUbuntu0109/Shiro-learning/tree/master/spring%20boot%20project%20with%20shiro</a></em></p><h3 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h3><p><em>数据库ER图如下所示 :</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/07/一个基础的SpringBoot整合Shiro案例/shiro-learning-database-er.png" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>数据表中用户及其分配的权限信息如下所示 :</em></p><table><thead><tr><th style="text-align:center">账户</th><th style="text-align:center">密码(MD5加密前)</th><th style="text-align:center">角色</th><th style="text-align:center">权限</th></tr></thead><tbody><tr><td style="text-align:center">admin</td><td style="text-align:center">demo</td><td style="text-align:center">admin</td><td style="text-align:center">*</td></tr><tr><td style="text-align:center">tea</td><td style="text-align:center">demo</td><td style="text-align:center">teacher</td><td style="text-align:center">teaListView:view , stuListView:view , stuListView:add , stuListView:edit</td></tr><tr><td style="text-align:center">stu</td><td style="text-align:center">demo</td><td style="text-align:center">student</td><td style="text-align:center">stuListView:view</td></tr></tbody></table><h3 id="资源权限设计"><a href="#资源权限设计" class="headerlink" title="资源权限设计"></a>资源权限设计</h3><p><em>springboot-shiro/src/main/java/pers/huangyuhui/ss/shiro/ShiroConfig.java : 资源过滤及其权限的配置信息如下</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 配置过滤器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>: securityManager</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2019-08-05 7:59 AM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>: org.apache.shiro.spring.web.ShiroFilterFactoryBean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">shiroFilterFactoryBean</span><span class="params">(SecurityManager securityManager)</span> </span>&#123;</span><br><span class="line">    ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">    <span class="comment">//设置安全管理器</span></span><br><span class="line">    shiroFilterFactoryBean.setSecurityManager(securityManager);</span><br><span class="line">    <span class="comment">//设置自定义过滤器</span></span><br><span class="line">    shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap());</span><br><span class="line">    <span class="comment">//设置用户登录页,默认: http://localhost:8080/login.jsp</span></span><br><span class="line">    shiroFilterFactoryBean.setLoginUrl(<span class="string">"/loginView"</span>);</span><br><span class="line">    <span class="comment">//设置用户未授权操作提示页</span></span><br><span class="line">    shiroFilterFactoryBean.setUnauthorizedUrl(<span class="string">"/unauthorizedView"</span>);</span><br><span class="line">    <span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 设置资源的权限控制</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2019-08-05 8:31 AM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>: java.util.Map</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Map&lt;String, String&gt; <span class="title">filterChainDefinitionMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Map&lt;String, String&gt; filterMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">    <span class="comment">//需身份认证</span></span><br><span class="line">    filterMap.put(<span class="string">"/stuListView"</span>, <span class="string">"authc"</span>);</span><br><span class="line">    filterMap.put(<span class="string">"/teaListView"</span>, <span class="string">"authc"</span>);</span><br><span class="line">    <span class="comment">//无需身份认证:防止验证用户登录信息操作被'filterMap.put("/**", "authc")'拦截</span></span><br><span class="line">    filterMap.put(<span class="string">"/login"</span>, <span class="string">"anon"</span>);</span><br><span class="line">    <span class="comment">//注销过滤器:其具体的注销逻辑代码Shiro已经替我们实现了哟</span></span><br><span class="line">    filterMap.put(<span class="string">"/logout"</span>, <span class="string">"logout"</span>);</span><br><span class="line">    <span class="comment">//角色过滤:需要用户拥有'admin'角色</span></span><br><span class="line">    filterMap.put(<span class="string">"/teaListView"</span>, <span class="string">"roles[admin]"</span>);</span><br><span class="line">    <span class="comment">//权限过滤:除身份认证外,还需要用户拥有对stuListView资源的view权限</span></span><br><span class="line">    filterMap.put(<span class="string">"/stuListView"</span>, <span class="string">"perms[stuListView:view]"</span>);</span><br><span class="line">    filterMap.put(<span class="string">"/teaListView"</span>, <span class="string">"perms[teaListView:view]"</span>);</span><br><span class="line">    <span class="comment">//拦截需要登录(用户认证)方可访问的资源(一般将/**放在最下边,不然会导致所有url都被拦截哟)</span></span><br><span class="line">    filterMap.put(<span class="string">"/**"</span>, <span class="string">"authc"</span>);</span><br><span class="line">    <span class="keyword">return</span> filterMap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ······</span></span><br></pre></td></tr></table></figure></p><h3 id="凭证加密设计"><a href="#凭证加密设计" class="headerlink" title="凭证加密设计"></a>凭证加密设计</h3><p><em>springboot-shiro/src/main/java/pers/huangyuhui/ss/shiro/ShiroConfig.java : 用户凭证加密的配置信息如下(盐值:用户名)</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 初始化自定义Realm</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>: credentialsMatcher</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2019-08-05 7:50 AM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>: pers.huangyuhui.ss.shiro.UserRealm</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> UserRealm <span class="title">userRealm</span><span class="params">(HashedCredentialsMatcher hashedCredentialsMatcher)</span> </span>&#123;</span><br><span class="line">    UserRealm userRealm = <span class="keyword">new</span> UserRealm();</span><br><span class="line">    <span class="comment">//设置凭证匹配器</span></span><br><span class="line">    userRealm.setCredentialsMatcher(hashedCredentialsMatcher);</span><br><span class="line">    <span class="keyword">return</span> userRealm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 哈希密码匹配器:比较用户登录时输入的密码,跟数据库密码配合盐值salt解密后是否一致</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2019-08-05 9:01 PM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>: org.apache.shiro.authc.credential.HashedCredentialsMatcher</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> HashedCredentialsMatcher <span class="title">hashedCredentialsMatcher</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    HashedCredentialsMatcher hashedCredentialsMatcher = <span class="keyword">new</span> HashedCredentialsMatcher();</span><br><span class="line">    hashedCredentialsMatcher.setHashAlgorithmName(<span class="string">"md5"</span>); <span class="comment">//散列算法</span></span><br><span class="line">    hashedCredentialsMatcher.setHashIterations(<span class="number">3</span>); <span class="comment">//散列的次数</span></span><br><span class="line">    hashedCredentialsMatcher.setStoredCredentialsHexEncoded(<span class="keyword">true</span>); <span class="comment">//默认是true:Hex编码.false:Base64编码</span></span><br><span class="line">    <span class="keyword">return</span> hashedCredentialsMatcher;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ······</span></span><br></pre></td></tr></table></figure></p><p><em>springboot-shiro/src/main/java/pers/huangyuhui/ss/utils/SecurityUtils.java : 密码加密逻辑如下</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span>: springboot-shiro</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 加密工具</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 黄宇辉</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 8/5/2019-9:09 PM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@website</span>: https://yubuntu0109.github.io/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//admin-pwd [source:demo+salt:admin+hashIterations:3] :  257e3b15d67a9127d230175e43118e40</span></span><br><span class="line">        <span class="comment">//tea-pwd [source:demo+salt:tea+hashIterations:3] : f97ccdcf125073d5f19bd3de0b67eb40</span></span><br><span class="line">        <span class="comment">//stu-pwd [source:demo+salt:stu+hashIterations:3] : e1a1c9a1340d179077086b5dbee621b4</span></span><br><span class="line">        String md5Pwd = <span class="keyword">new</span> SimpleHash(<span class="string">"md5"</span>, <span class="string">"demo"</span>, ByteSource.Util.bytes(<span class="string">"stu"</span>), <span class="number">3</span>).toHex();</span><br><span class="line">        System.out.println(md5Pwd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Thymeleaf整合Shiro标签"><a href="#Thymeleaf整合Shiro标签" class="headerlink" title="Thymeleaf整合Shiro标签"></a>Thymeleaf整合Shiro标签</h3><p><em>springboot-shiro/src/main/java/pers/huangyuhui/ss/shiro/ShiroConfig.java : Thymeleaf整合Shiro标签的配置如下</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 配置ShiroDialect, 用于thymeleaf和shiro标签配合使用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-05 6:37 PM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: at.pollux.thymeleaf.shiro.dialect.ShiroDialect</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroDialect <span class="title">shiroDialect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ShiroDialect();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Shiro集成EhCache缓存"><a href="#Shiro集成EhCache缓存" class="headerlink" title="Shiro集成EhCache缓存"></a>Shiro集成EhCache缓存</h3><p><em>springboot-shiro/src/main/java/pers/huangyuhui/ss/shiro/ShiroConfig.java : Shiro集成EhCache的配置信息如下</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 安全事务管理器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>: credentialsMatcher</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-05 7:53 AM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: org.apache.shiro.web.mgt.DefaultWebSecurityManager</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SecurityManager <span class="title">securityManager</span><span class="params">(UserRealm userRealm, EhCacheManager ehCacheManager)</span> </span>&#123;</span><br><span class="line">        DefaultWebSecurityManager defaultWebSecurityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">        <span class="comment">//关联自定义realm</span></span><br><span class="line">        defaultWebSecurityManager.setRealm(userRealm);</span><br><span class="line">        <span class="comment">//关联缓存管理</span></span><br><span class="line">        defaultWebSecurityManager.setCacheManager(ehCacheManager);</span><br><span class="line">        <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 设置缓存管理, 缓存用户及其权限信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-07 7:51 AM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: org.apache.shiro.cache.ehcache.EhCacheManager</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EhCacheManager <span class="title">ehCacheManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//注意:myEhcache对应ehcache-shiro.xml中的'&lt;ehcache name="myEhcache"&gt;'</span></span><br><span class="line">        CacheManager cacheManager = CacheManager.getCacheManager(<span class="string">"myEhcache"</span>);</span><br><span class="line">        <span class="keyword">if</span> (cacheManager == <span class="keyword">null</span>) &#123;</span><br><span class="line">            cacheManager = CacheManager.create();</span><br><span class="line">        &#125;</span><br><span class="line">        EhCacheManager ehCacheManager = <span class="keyword">new</span> EhCacheManager();</span><br><span class="line">        ehCacheManager.setCacheManager(cacheManager);</span><br><span class="line">        <span class="keyword">return</span> ehCacheManager;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ······</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="案例截屏解析"><a href="#案例截屏解析" class="headerlink" title="案例截屏解析"></a>案例截屏解析</h3><p><em>用户登录页,访问资源前必须先进行用户身份认证,详情参考资源拦截器中的配置信息哟</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/07/一个基础的SpringBoot整合Shiro案例/springboot-shiro-用户登录页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>若要访问教师 / 学生信息管理页,需要用户拥有<code>teaListView:view / stuListView:view</code>权限</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/07/一个基础的SpringBoot整合Shiro案例/springboot-shiro-用户主页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>管理员( admin )拥有访问资源的所有权限( </em> ),所以可以操控学生信息页面中的任何操作*<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/07/一个基础的SpringBoot整合Shiro案例/springboot-shiro-[admin]-学生信息管理页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>管理员( admin )拥有访问资源的所有权限( </em> ),所以可以操控教师信息页面中的任何操作*<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/07/一个基础的SpringBoot整合Shiro案例/springboot-shiro-[admin]-教师信息管理页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>教师( tea )拥有学生页面的<code>stuListView:view , stuListView:add , stuListView:edit</code>权限,所以删除信息操作为不可见</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/07/一个基础的SpringBoot整合Shiro案例/springboot-shiro-[tea]-学生信息管理页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>教师( tea )仅拥有教师信息管理页面的<code>teaListView:view</code>权限,所以增,删,改,操作为不可见状态</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/07/一个基础的SpringBoot整合Shiro案例/springboot-shiro-[tea]-教师信息管理页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>学生( stu )仅拥有学生信息管理页面的<code>stuListView:view</code>权限,所以增,删,改,操作为不可见状态</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/07/一个基础的SpringBoot整合Shiro案例/springboot-shiro-[stu]-学生信息管理页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>学生( stu )没有访问教师信息管理页面的权限,所以被资源拦截器所拦截继而进入指定的’unauthorized.html’页面</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/07/一个基础的SpringBoot整合Shiro案例/springboot-shiro-[stu]-教师信息管理页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>数据库设计参考了(非常感谢) : <a href="https://www.jianshu.com/p/7716951f4d7f" target="_blank" rel="noopener">https://www.jianshu.com/p/7716951f4d7f</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-一个基础的SpringBoot整合Shiro案例&quot;&gt;&lt;a href=&quot;#学习笔记-一个基础的SpringBoot整合Shiro案例&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : 一个基础的SpringBoot整合Shiro案例&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="Shiro" scheme="http://yoursite.com/tags/Shiro/"/>
    
      <category term="Thymeleaf" scheme="http://yoursite.com/tags/Thymeleaf/"/>
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="EhCache" scheme="http://yoursite.com/tags/EhCache/"/>
    
  </entry>
  
  <entry>
    <title>详解Shiro的缓存机制</title>
    <link href="http://yoursite.com/2019/08/07/%E8%AF%A6%E8%A7%A3Shiro%E7%9A%84%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/"/>
    <id>http://yoursite.com/2019/08/07/详解Shiro的缓存机制/</id>
    <published>2019-08-07T04:12:16.000Z</published>
    <updated>2019-08-08T03:31:13.837Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-详解Shiro的缓存机制"><a href="#学习笔记-详解Shiro的缓存机制" class="headerlink" title="学习笔记 : 详解Shiro的缓存机制"></a>学习笔记 : 详解Shiro的缓存机制</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><em>Shiro作为一个开源的权限框架,其组件化的设计思想使得开发者可以根据具体业务场景灵活地实现权限管理方案,权限粒度的控制非常方便,Shiro框架的架构图如下所示 :</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/07/详解Shiro的缓存机制/Shiro-framework-架构图.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p><em>从上图我们可以很清晰地看到,<code>CacheManager</code>也是Shiro架构中的主要组件之一,Shiro正是通过CacheManager组件实现权限数据缓存.<br><code>当权限信息存放在数据库中时,对于每次前端的访问请求都需要进行一次数据库查询</code>. 特别是在大量使用shiro的jsp标签的场景下,对应前端的一个页面访问请求会同时出现很多的权限查询操作,这对于权限信息变化不是很频繁的场景,每次前端页面访问都进行大量的权限数据库查询是非常不经济的! 因此非常有必要对权限数据使用缓存方案~</em></p><h3 id="Shiro权限数据的缓存方式"><a href="#Shiro权限数据的缓存方式" class="headerlink" title="Shiro权限数据的缓存方式"></a>Shiro权限数据的缓存方式</h3><p><em>关于shiro权限数据的缓存方式,可以分为以下两类 :</em> </p><ol><li><em>将权限数据缓存到集中式存储中间件中,比如redis或者memcached</em></li><li><em>将权限数据缓存到本地</em></li></ol><h3 id="如何在Shiro中使用缓存"><a href="#如何在Shiro中使用缓存" class="headerlink" title="如何在Shiro中使用缓存"></a>如何在Shiro中使用缓存</h3><p><em>根据Shiro官方的说法,虽然缓存在权限框架中非常重要,但是如果实现一套完整的缓存机制会使得Shiro偏离了核心的功能(认证和授权). 因此Shiro只提供了一个可以支持具体缓存实现(如 : <code>Hazelcast</code>, <code>Ehcache</code>, <code>OSCache</code>, <code>Terracotta</code>, <code>Coherence</code>, <code>GigaSpaces</code>, <code>JBossCache</code> 等)的抽象API接口,这样就允许Shiro用户根据自己的需求灵活地选择具体的CacheManager,当然,其实Shiro也自带了一个本地内存CacheManager(<code>org.apache.shiro.cache.MemoryConstrainedCacheManager</code>),Shiro的缓存组件类图如下所示 :</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/07/详解Shiro的缓存机制/Shiro-缓存组件类图.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p><em>从Shiro缓存组件类图可以看到,Shiro提供的缓存抽象API接口正是 : <code>org.apache.shiro.cache.CacheManager</code>,那么我们应该如何配置和使用CacheManager呢 ? 如下我们以使用Shiro提供的<code>MemoryConstrainedCacheManager</code>组件为例进行说明. 我们知道,SecurityManager是Shiro的核心控制器,我们来看一下其类图 :</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/07/详解Shiro的缓存机制/Shiro-SecurityManager类图.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p><em><code>org.apache.shiro.mgt.CachingSecurityManager</code>是Shiro中SecurityManager接口的基础抽象类,我们来看一下其源码结构(如下所示),<code>发现在CachingSecurityManager中存在一个CacheManager类型的成员变量</code></em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">CachingSecurityManager</span> <span class="keyword">implements</span> <span class="title">SecurityManager</span>, <span class="title">Destroyable</span>, <span class="title">CacheManagerAware</span>, <span class="title">EventBusAware</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The CacheManager to use to perform caching operations to enhance performance.  Can be null.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> CacheManager cacheManager;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The EventBus to use to use to publish and receive events of interest during Shiro's lifecycle.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 1.3</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> EventBus eventBus;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Default no-arg constructor that will automatically attempt to initialize a default cacheManager</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CachingSecurityManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//use a default event bus:</span></span><br><span class="line">        setEventBus(<span class="keyword">new</span> DefaultEventBus());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ······</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>另外,接口<code>org.apache.shiro.realm.Realm</code>定义了权限数据的存储方式,其类图如下所示 :</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/07/详解Shiro的缓存机制/Shiro-Realm类图.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p><em>显然,<code>org.apache.shiro.realm.CachingRealm</code>是Shiro中Realm接口的基础实现类,我们同样来看一下其源码结构(如下所示),<code>发现同样在CachingRealm也存在一个CacheManager类型的成员变量</code></em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">CachingRealm</span> <span class="keyword">implements</span> <span class="title">Realm</span>, <span class="title">Nameable</span>, <span class="title">CacheManagerAware</span>, <span class="title">LogoutAware</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(CachingRealm.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//TODO - complete JavaDoc</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> AtomicInteger INSTANCE_COUNT = <span class="keyword">new</span> AtomicInteger();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*--------------------------------------------</span></span><br><span class="line"><span class="comment">    |    I N S T A N C E   V A R I A B L E S    |</span></span><br><span class="line"><span class="comment">    ============================================*/</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> cachingEnabled;</span><br><span class="line">    <span class="keyword">private</span> CacheManager cacheManager;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Default no-argument constructor that defaults</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> #isCachingEnabled() cachingEnabled&#125; (for general caching) to &#123;<span class="doctag">@code</span> true&#125; and sets a</span></span><br><span class="line"><span class="comment">     * default &#123;<span class="doctag">@link</span> #getName() name&#125; based on the class name.</span></span><br><span class="line"><span class="comment">     * &lt;p/&gt;</span></span><br><span class="line"><span class="comment">     * Note that while in general, caching may be enabled by default, subclasses have control over</span></span><br><span class="line"><span class="comment">     * if specific caching is enabled.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CachingRealm</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cachingEnabled = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.name = getClass().getName() + <span class="string">"_"</span> + INSTANCE_COUNT.getAndIncrement();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ······</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><em>从以上分析我们知道Shiro支持在2个地方定义缓存管理器,既可以在SecurityManager中定义,也可以在Realm中定义,任选其一即可. 通常我们都会自定义Realm实现,例如将权限数据存放在数据库中,那么在Realm实现中定义缓存管理器再合适不过了</em></p><p><em>那么我们不禁要问了 :</em></p><ul><li>第一 : 为什么Shiro要设计成既可以在Realm,也可以在SecurityManager中设置缓存管理器呢 ?</li><li>第二 : 分别在Realm和SecurityManager定义的缓存管理器,他们有什么区别或联系吗 ?</li></ul><p><em>怀着种种疑问让我们追踪一下<code>org.apache.shiro.mgt.RealmSecurityManae</code>的源码实现,如下所示 :</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">RealmSecurityManager</span> <span class="keyword">extends</span> <span class="title">CachingSecurityManager</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Sets the internal &#123;<span class="doctag">@link</span> #getCacheManager CacheManager&#125; on any internal configured</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> #getRealms Realms&#125; that implement the &#123;<span class="doctag">@link</span> org.apache.shiro.cache.CacheManagerAware CacheManagerAware&#125; interface.</span></span><br><span class="line"><span class="comment">     * &lt;p/&gt;</span></span><br><span class="line"><span class="comment">     * This method is called after setting a cacheManager on this securityManager via the</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> #setCacheManager(org.apache.shiro.cache.CacheManager) setCacheManager&#125; method to allow it to be propagated</span></span><br><span class="line"><span class="comment">     * down to all the internal Realms that would need to use it.</span></span><br><span class="line"><span class="comment">     * &lt;p/&gt;</span></span><br><span class="line"><span class="comment">     * It is also called after setting one or more realms via the &#123;<span class="doctag">@link</span> #setRealm setRealm&#125; or</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> #setRealms setRealms&#125; methods to allow these newly available realms to be given the cache manager</span></span><br><span class="line"><span class="comment">     * already in use.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">applyCacheManagerToRealms</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CacheManager cacheManager = getCacheManager();</span><br><span class="line">        Collection&lt;Realm&gt; realms = getRealms();</span><br><span class="line">        <span class="keyword">if</span> (cacheManager != <span class="keyword">null</span> &amp;&amp; realms != <span class="keyword">null</span> &amp;&amp; !realms.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Realm realm : realms) &#123;</span><br><span class="line">                <span class="keyword">if</span> (realm <span class="keyword">instanceof</span> CacheManagerAware) &#123;</span><br><span class="line">                    ((CacheManagerAware) realm).setCacheManager(cacheManager);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ······</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>这下恍然大悟了吧 ! <code>从源码可以分析出其实在SecurityManager中设置的CacheManager都会给Realm使用,即真正使用CacheManager的组件是Realm</code></em></p><p><em>🙏摘自(获益匪浅,非常感谢) : <a href="https://www.cnblogs.com/nuccch/p/8044226.html" target="_blank" rel="noopener">https://www.cnblogs.com/nuccch/p/8044226.html</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-详解Shiro的缓存机制&quot;&gt;&lt;a href=&quot;#学习笔记-详解Shiro的缓存机制&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : 详解Shiro的缓存机制&quot;&gt;&lt;/a&gt;学习笔记 : 详解Shiro的缓存机制&lt;/h2&gt;&lt;h3 id=&quot;简
      
    
    </summary>
    
    
      <category term="Shiro" scheme="http://yoursite.com/tags/Shiro/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot中Shiro集成EhCache</title>
    <link href="http://yoursite.com/2019/08/07/SpringBoot%E4%B8%ADShiro%E9%9B%86%E6%88%90EhCache/"/>
    <id>http://yoursite.com/2019/08/07/SpringBoot中Shiro集成EhCache/</id>
    <published>2019-08-07T04:10:32.000Z</published>
    <updated>2019-08-08T06:16:06.176Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-SpringBoot项目中Shiro集成EhCache"><a href="#学习笔记-SpringBoot项目中Shiro集成EhCache" class="headerlink" title="学习笔记 : SpringBoot项目中Shiro集成EhCache"></a>学习笔记 : SpringBoot项目中Shiro集成EhCache</h2><p><em>示例程序摘自 : <a href="https://github.com/YUbuntu0109/Shiro-learning/tree/master/spring%20boot%20project%20with%20shiro" target="_blank" rel="noopener">一个简单的SpringBoot整合Shiro的权限管理案例</a></em></p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><p><em>Shiro-learning/spring boot project with shiro/springboot-shiro/pom.xml</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Shiro --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Ehcache --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="创建EhCache缓存配置文件"><a href="#创建EhCache缓存配置文件" class="headerlink" title="创建EhCache缓存配置文件"></a>创建EhCache缓存配置文件</h3><p><em>Shiro-learning/spring boot project with shiro/springboot-shiro/src/main/resources/ehcache-shiro.xml</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">"http://ehcache.org/ehcache.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">updateCheck</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">name</span>=<span class="string">"myEhcache"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">"java.io.tmpdir"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 授权信息缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"authorizationCache"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"2000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">statistics</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 身份信息缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"authenticationCache"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"2000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">statistics</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Session缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"activeSessionCache"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"2000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">statistics</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存半小时 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"halfHour"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsOnDisk</span>=<span class="string">"100000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存一小时 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"hour"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsOnDisk</span>=<span class="string">"100000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"3600"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"3600"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存一天 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"oneDay"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsOnDisk</span>=<span class="string">"100000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"86400"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"86400"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">         name: 缓存名称。</span></span><br><span class="line"><span class="comment">         maxElementsInMemory: 缓存最大个数</span></span><br><span class="line"><span class="comment">         eternal: 对象是否永久有效,一但设置了,timeout将不起作用</span></span><br><span class="line"><span class="comment">         timeToIdleSeconds: 设置对象在失效前的允许闲置时间(单位：秒). 仅当eternal=false对象不是永久有效时使用,可选属性,默认值是0,也就是可闲置时间无穷大</span></span><br><span class="line"><span class="comment">         timeToLiveSeconds: 设置对象在失效前允许存活时间(单位：秒). 最大时间介于创建时间和失效时间之间. 仅当eternal=false对象不是永久有效时使用,默认是0,也就是对象存活时间无穷大</span></span><br><span class="line"><span class="comment">         overflowToDisk: 当内存中对象数量达到maxElementsInMemory时,Ehcache将会对象写到磁盘中</span></span><br><span class="line"><span class="comment">         diskSpoolBufferSizeMB: 这个参数设置DiskStore(磁盘缓存)的缓存区大小,默认是30MB. 每个Cache都应该有自己的一个缓冲区</span></span><br><span class="line"><span class="comment">         maxElementsOnDisk: 硬盘最大缓存个数</span></span><br><span class="line"><span class="comment">         diskPersistent: 是否缓存虚拟机重启期数据 Whether the disk store persists between restarts of the Virtual Machine. The default value is false.</span></span><br><span class="line"><span class="comment">         diskExpiryThreadIntervalSeconds: 磁盘失效线程运行时间间隔,默认是120秒</span></span><br><span class="line"><span class="comment">         memoryStoreEvictionPolicy: 当达到maxElementsInMemory限制时,Ehcache将会根据指定的策略去清理内存. 默认策略是LRU(最近最少使用). 你可以设置为FIFO(先进先出)或是LFU(较少使用)</span></span><br><span class="line"><span class="comment">         clearOnFlush: 内存数量最大时是否清除</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defaultCache</span> <span class="attr">name</span>=<span class="string">"defaultCache"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">maxElementsInMemory</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">timeToIdleSeconds</span>=<span class="string">"600"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">timeToLiveSeconds</span>=<span class="string">"600"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">maxElementsOnDisk</span>=<span class="string">"100000"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">diskPersistent</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">diskExpiryThreadIntervalSeconds</span>=<span class="string">"120"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">defaultCache</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="配置Shiro缓存"><a href="#配置Shiro缓存" class="headerlink" title="配置Shiro缓存"></a>配置Shiro缓存</h3><p><em>Shiro-learning/spring boot project with shiro/springboot-shiro/src/main/java/pers/huangyuhui/ss/shiro/ShiroConfig.java</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span>: springboot-shiro</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Shiro配置信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 黄宇辉</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 8/5/2019-7:41 AM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@website</span>: https://yubuntu0109.github.io/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 安全事务管理器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>: credentialsMatcher</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-05 7:53 AM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: org.apache.shiro.web.mgt.DefaultWebSecurityManager</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SecurityManager <span class="title">securityManager</span><span class="params">(UserRealm userRealm, EhCacheManager ehCacheManager)</span> </span>&#123;</span><br><span class="line">        DefaultWebSecurityManager defaultWebSecurityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">        <span class="comment">//关联自定义realm</span></span><br><span class="line">        defaultWebSecurityManager.setRealm(userRealm);</span><br><span class="line">        <span class="comment">//关联缓存管理</span></span><br><span class="line">        defaultWebSecurityManager.setCacheManager(ehCacheManager);</span><br><span class="line">        <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 设置缓存管理器, 缓存用户及其权限信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-07 7:51 AM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: org.apache.shiro.cache.ehcache.EhCacheManager</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EhCacheManager <span class="title">ehCacheManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//注意:myEhcache对应ehcache-shiro.xml中的'&lt;ehcache name="myEhcache"&gt;'</span></span><br><span class="line">        CacheManager cacheManager = CacheManager.getCacheManager(<span class="string">"myEhcache"</span>);</span><br><span class="line">        <span class="keyword">if</span> (cacheManager == <span class="keyword">null</span>) &#123;</span><br><span class="line">            cacheManager = CacheManager.create();</span><br><span class="line">        &#125;</span><br><span class="line">        EhCacheManager ehCacheManager = <span class="keyword">new</span> EhCacheManager();</span><br><span class="line">        ehCacheManager.setCacheManager(cacheManager);</span><br><span class="line">        <span class="keyword">return</span> ehCacheManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ······</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p><em>如果使用的EhCache版本超过了2.5.0,那么<code>&lt;ehcache name=&quot;myEhcache&quot;&gt;</code>的配置就显得非常重要了,不然EhCache会自动加载默认的名字 : <code>_default_</code>,且EhCache2.5以后只允许创建单例的CacheManager(缓存管理器),所以应注意避免重复加载CacheManager哟 : 创建ehCacheManager的时先判断是否已存在cacheManager,没有的情况下再进行创建,判断的关键为<code>ehcache-shiro.xml</code>(缓存配置文件)中配置的<code>name</code>属性,可通过该属性来判断cacheManager是否加载了,示例代码如下 :</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CacheManager cacheManager = CacheManager.getCacheManager(<span class="string">"myEhcache"</span>);</span><br><span class="line">    <span class="keyword">if</span> (cacheManager == <span class="keyword">null</span>) &#123;</span><br><span class="line">        cacheManager = CacheManager.create();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><em>借鉴(非常感谢) : <a href="https://blog.csdn.net/Maslii/article/details/82380568" target="_blank" rel="noopener">https://blog.csdn.net/Maslii/article/details/82380568</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-SpringBoot项目中Shiro集成EhCache&quot;&gt;&lt;a href=&quot;#学习笔记-SpringBoot项目中Shiro集成EhCache&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : SpringBoot项目中Shiro集成E
      
    
    </summary>
    
    
      <category term="Shiro" scheme="http://yoursite.com/tags/Shiro/"/>
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="EhCache" scheme="http://yoursite.com/tags/EhCache/"/>
    
  </entry>
  
  <entry>
    <title>详解Intellij IDEA中的DEBUG功能</title>
    <link href="http://yoursite.com/2019/08/06/%E8%AF%A6%E8%A7%A3Intellij-IDEA%E4%B8%AD%E7%9A%84DEBUG%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2019/08/06/详解Intellij-IDEA中的DEBUG功能/</id>
    <published>2019-08-06T07:21:34.000Z</published>
    <updated>2019-08-06T13:36:55.769Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-详解Intellij-IDEA中的DEBUG功能"><a href="#学习笔记-详解Intellij-IDEA中的DEBUG功能" class="headerlink" title="学习笔记 : 详解Intellij IDEA中的DEBUG功能"></a>学习笔记 : 详解Intellij IDEA中的DEBUG功能</h2><p><em><code>Debug</code>用于追踪代码的执行流程,其主要用途如下 :</em></p><ol><li><em>若程序运行过程中出现异常,可通过启用Debug模式来分析程序运行过程中各个参数的变化,继而定位到异常发生的位置</em></li><li><em>通过启用Debug模式来跟踪代码的运行流程,继而去学习一些第三方框架的源码</em></li></ol><h3 id="基本用法-amp-快捷键"><a href="#基本用法-amp-快捷键" class="headerlink" title="基本用法&amp;快捷键"></a>基本用法&amp;快捷键</h3><p><em>IDEA版本 : Intellij IDEA 2019.1.3-UItimate Edition</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/06/详解Intellij-IDEA中的DEBUG功能/IDEA-debug-view-1.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure><p><em>如上debug视图,从上到下依次讲解 :</em></p><ol><li><em><code>Show Execution Point (Alt + F10)</code> : 如果你的光标在其它行或其它页面,点击这个按钮可跳转到当前代码执行的行</em></li><li><em><code>Step Over (F6)</code> : 步过,一行一行地往下走,如果这一行上有方法,并不会进入</em></li><li><em><code>Step Into (F5)</code> : 步入,如果当前行有方法,可以进入方法内部,一般用于进入自定义方法内,不会进入官方类库的方法</em></li><li><em><code>Force Step Into (Alt + Shift + F7)</code> : 强制步入,能进入任何方法,查看底层源码的时候可以用这个进入官方类库的方法</em></li><li><em><code>Step Out (F7)</code> : 步出,从步入的方法内退出到方法调用处,此时方法已执行完毕,只是还没有完成赋值</em></li><li><em><code>Drop Frame (默认无)</code> : 回退断点,后面章节详细说明</em></li><li><em><code>Run to Cursor (Ctrl + R)</code> : 运行到光标处,你可以将光标定位到你需要查看的那一行,然后使用这个功能,代码会运行至光标行,而不需要打断点哟</em></li><li><em><code>Evaluate Expression (Ctrl + U)</code> : 计算表达式,后面章节详细说明</em></li></ol><p><em>从左到右依次讲解 :</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/06/详解Intellij-IDEA中的DEBUG功能/IDEA-debug-view-2.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure><p><em>如上debug视图,从左到右依次讲解 :</em></p><ol><li><em><code>Rerun &#39;xxx&#39;(Ctrl + F11)</code> : 重新运行程序,会关闭服务后重新启动程序</em></li><li><em><code>Update &#39;xxx&#39; application (Ctrl + F10)</code> : 更新程序,一般在你的代码有改动后可执行这个功能. 而这个功能对应的操作则是在服务配置里,一般配合热部署插件会更好用,如JRebel,这样就不用每次更改代码后还要去重新启动服务啦</em></li><li><em><code>Resume Program (F8)</code> : 恢复程序,比如你在第20行和25行有两个断点,当前运行至第20行时按F9,则运行到下一个断点(即第25行),再按F9则运行完整个流程,因为后面已经没有断点咯</em></li><li><em><code>Pause Program</code> : 暂停程序,启用Debug</em></li><li><em><code>Stop &#39;xxx&#39; (Ctrl + F2)</code> : 连续按两下会关闭程序,有时候你会发现关闭服务再启动时,报端口被占用,这是因为没完全关闭服务的原因,这时就需要你查杀指定的JVM进程啦</em></li><li><em><code>View Breakpoints (Ctrl + Shift + F8)</code> : 查看所有断点,后面章节会涉及到</em></li><li><em><code>Mute Breakpoints</code> : 哑的断点,既选择这个后,所有断点变为灰色,断点失效,按F9则可以直接运行完程序. 再次点击,断点变为红色,有效. 如果只想使某一个断点失效,则可以在断点上右键,然后取消Enabled</em></li></ol><p><em>更多内容请参考(老版本哟,无碍啦~) : <a href="https://www.cnblogs.com/nihaorz/p/7613967.html" target="_blank" rel="noopener">https://www.cnblogs.com/nihaorz/p/7613967.html</a> .</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-详解Intellij-IDEA中的DEBUG功能&quot;&gt;&lt;a href=&quot;#学习笔记-详解Intellij-IDEA中的DEBUG功能&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : 详解Intellij IDEA中的DEBUG功能&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="IDEA" scheme="http://yoursite.com/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>Thymeleaf整合Shiro标签</title>
    <link href="http://yoursite.com/2019/08/06/Thymeleaf%E6%95%B4%E5%90%88Shiro%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2019/08/06/Thymeleaf整合Shiro标签/</id>
    <published>2019-08-06T07:16:26.000Z</published>
    <updated>2019-08-07T08:46:22.616Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-Thymeleaf整合Shiro标签"><a href="#学习笔记-Thymeleaf整合Shiro标签" class="headerlink" title="学习笔记 : Thymeleaf整合Shiro标签"></a>学习笔记 : Thymeleaf整合Shiro标签</h2><p><em>详情请参考 : <a href="https://github.com/YUbuntu0109/Shiro-learning/tree/master/spring%20boot%20project%20with%20shiro" target="_blank" rel="noopener">一个简单的SpringBoot整合Shiro的权限管理案例</a></em></p><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><p><em>添加Thymeleaf及其对Shiro扩展的依赖</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Thymeleaf --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Thymeleaf对shiro的扩展 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.theborakompanioni<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-shiro<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p><em>在Shiro的配置类中配置<code>ShiroDialect</code></em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 配置ShiroDialect, 用于thymeleaf和shiro标签配合使用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-05 6:37 PM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: at.pollux.thymeleaf.shiro.dialect.ShiroDialect</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroDialect <span class="title">shiroDialect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ShiroDialect();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="添加HTML命令空间"><a href="#添加HTML命令空间" class="headerlink" title="添加HTML命令空间"></a>添加HTML命令空间</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh_CN"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span> <span class="attr">xmlns:shiro</span>=<span class="string">"http://www.pollix.at/thymeleaf/shiro"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Thymealf-Shiro标签"><a href="#Thymealf-Shiro标签" class="headerlink" title="Thymealf+Shiro标签"></a>Thymealf+Shiro标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- guest标签:用户没有身份验证时显示相应信息,即游客访问信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:guest</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:guest</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- user标签:用户已经身份验证/记住我登录后显示相应的信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:user</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:user</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- authenticated标签:用户已经身份验证通过,即Subject.login登录成功,不是记住我登录的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:authenticated</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:authenticated</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- notAuthenticated标签:用户已经身份验证通过,即没有调用Subject.login进行登录,包括记住我,自动登录的也属于未进行身份验证 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:notAuthenticated</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:notAuthenticated</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- principal标签:相当于((User)Subject.getPrincipals()).getUsername()  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:</span> <span class="attr">principal</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:principal</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">　　</span><br><span class="line"><span class="comment">&lt;!-- lacksPermission标签:如果当前Subject没有权限将显示body体内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:lacksPermission</span> <span class="attr">name</span>=<span class="string">"org:create"</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:lacksPermission</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- hasRole标签:如果当前Subject有角色将显示body体内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">"admin"</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- hasAnyRoles标签:如果当前Subject有任意一个角色（或的关系）将显示body体内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:hasAnyRoles</span> <span class="attr">name</span>=<span class="string">"admin,user"</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasAnyRoles</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- lacksRole标签:如果当前Subject没有角色将显示body体内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:lacksRole</span> <span class="attr">name</span>=<span class="string">"abc"</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:lacksRole</span>&gt;</span>　</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- hasPermission标签:如果当前Subject有权限将显示body体内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">"user:create"</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>🙂参考(非常感谢) : <a href="https://www.jianshu.com/p/c8b53445cbb0" target="_blank" rel="noopener">https://www.jianshu.com/p/c8b53445cbb0</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-Thymeleaf整合Shiro标签&quot;&gt;&lt;a href=&quot;#学习笔记-Thymeleaf整合Shiro标签&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : Thymeleaf整合Shiro标签&quot;&gt;&lt;/a&gt;学习笔记 : Thymelea
      
    
    </summary>
    
    
      <category term="Shiro" scheme="http://yoursite.com/tags/Shiro/"/>
    
      <category term="Thymeleaf" scheme="http://yoursite.com/tags/Thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot集成Shiro的基本配置</title>
    <link href="http://yoursite.com/2019/08/06/SpringBoot%E9%9B%86%E6%88%90Shiro%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/08/06/SpringBoot集成Shiro的基本配置/</id>
    <published>2019-08-06T07:13:51.000Z</published>
    <updated>2019-08-11T02:18:00.121Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-SpringBoot集成Shiro的基本配置"><a href="#学习笔记-SpringBoot集成Shiro的基本配置" class="headerlink" title="学习笔记 : SpringBoot集成Shiro的基本配置"></a>学习笔记 : SpringBoot集成Shiro的基本配置</h2><p><em>Spring集成Shiro一般通过的 xml 配置,比较繁琐,而Spring Boot集成Shiro相对简单,只需要配置两个类 : ShiroConfiguration类及继承AuthorizingRealm的Realm类,如下所示 :</em></p><ol><li><em><code>ShiroConfig</code> : 顾名思义就是对Shiro的一些配置,相对于Spring中的xml配置. 包括 : 包括过滤器(ShiroFilter)、安全事务管理器(SecurityManager)、密码凭证匹配器(CredentialsMatcher)、缓冲管理器(EhCacheManager)、aop注解支持(authorizationAttributeSourceAdvisor)、等等</em></li><li><em><code>CustomRealm</code> : 自定义的CustomRealm继承自AuthorizingRealm,重写了父类中的doGetAuthorizationInfo(授权认证)、doGetAuthenticationInfo(登陆认证)这两个方法</em></li></ol><h3 id="基本的配置"><a href="#基本的配置" class="headerlink" title="基本的配置"></a>基本的配置</h3><p><em>以下示例代码摘自 : <a href="https://github.com/YUbuntu0109/Shiro-learning/tree/master/spring%20boot%20project%20with%20shiro" target="_blank" rel="noopener">一个简单的SpringBoot集成Shiro的权限管理案例</a></em></p><h4 id="Shiro的基本配置信息"><a href="#Shiro的基本配置信息" class="headerlink" title="Shiro的基本配置信息"></a>Shiro的基本配置信息</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.ss.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> at.pollux.thymeleaf.shiro.dialect.ShiroDialect;</span><br><span class="line"><span class="keyword">import</span> net.sf.ehcache.CacheManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.credential.HashedCredentialsMatcher;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.cache.ehcache.EhCacheManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span>: springboot-shiro</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Shiro配置信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 黄宇辉</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 8/5/2019-7:41 AM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@website</span>: https://yubuntu0109.github.io/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 配置过滤器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>: securityManager</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-05 7:59 AM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: org.apache.shiro.spring.web.ShiroFilterFactoryBean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">shiroFilterFactoryBean</span><span class="params">(SecurityManager securityManager)</span> </span>&#123;</span><br><span class="line">        ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">        <span class="comment">//设置安全管理器</span></span><br><span class="line">        shiroFilterFactoryBean.setSecurityManager(securityManager);</span><br><span class="line">        <span class="comment">//设置自定义过滤器</span></span><br><span class="line">        shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap());</span><br><span class="line">        <span class="comment">//设置用户登录页,默认: http://localhost:8080/login.jsp</span></span><br><span class="line">        shiroFilterFactoryBean.setLoginUrl(<span class="string">"/loginView"</span>);</span><br><span class="line">        <span class="comment">//设置用户未授权操作提示页</span></span><br><span class="line">        shiroFilterFactoryBean.setUnauthorizedUrl(<span class="string">"/unauthorizedView"</span>);</span><br><span class="line">        <span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 初始化自定义Realm</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>: credentialsMatcher</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-05 7:50 AM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: pers.huangyuhui.ss.shiro.UserRealm</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserRealm <span class="title">userRealm</span><span class="params">(HashedCredentialsMatcher hashedCredentialsMatcher)</span> </span>&#123;</span><br><span class="line">        UserRealm userRealm = <span class="keyword">new</span> UserRealm();</span><br><span class="line">        <span class="comment">//设置凭证匹配器</span></span><br><span class="line">        userRealm.setCredentialsMatcher(hashedCredentialsMatcher);</span><br><span class="line">        <span class="keyword">return</span> userRealm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 安全事务管理器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>: credentialsMatcher</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-05 7:53 AM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: org.apache.shiro.web.mgt.DefaultWebSecurityManager</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SecurityManager <span class="title">securityManager</span><span class="params">(UserRealm userRealm, EhCacheManager ehCacheManager)</span> </span>&#123;</span><br><span class="line">        DefaultWebSecurityManager defaultWebSecurityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">        <span class="comment">//关联自定义realm</span></span><br><span class="line">        defaultWebSecurityManager.setRealm(userRealm);</span><br><span class="line">        <span class="comment">//关联缓存管理</span></span><br><span class="line">        defaultWebSecurityManager.setCacheManager(ehCacheManager);</span><br><span class="line">        <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 哈希密码匹配器:比较用户登录时输入的密码,跟数据库密码配合盐值salt解密后是否一致</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-05 9:01 PM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: org.apache.shiro.authc.credential.HashedCredentialsMatcher</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HashedCredentialsMatcher <span class="title">hashedCredentialsMatcher</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        HashedCredentialsMatcher hashedCredentialsMatcher = <span class="keyword">new</span> HashedCredentialsMatcher();</span><br><span class="line">        hashedCredentialsMatcher.setHashAlgorithmName(<span class="string">"md5"</span>); <span class="comment">//散列算法</span></span><br><span class="line">        hashedCredentialsMatcher.setHashIterations(<span class="number">3</span>); <span class="comment">//散列的次数</span></span><br><span class="line">        hashedCredentialsMatcher.setStoredCredentialsHexEncoded(<span class="keyword">true</span>); <span class="comment">//默认是true:Hex编码.false:Base64编码</span></span><br><span class="line">        <span class="keyword">return</span> hashedCredentialsMatcher;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 设置缓存管理, 缓存用户及其权限信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-07 7:51 AM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: org.apache.shiro.cache.ehcache.EhCacheManager</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EhCacheManager <span class="title">ehCacheManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//注意:myEhcache对应ehcache-shiro.xml中的'&lt;ehcache name="myEhcache"&gt;'</span></span><br><span class="line">        CacheManager cacheManager = CacheManager.getCacheManager(<span class="string">"myEhcache"</span>);</span><br><span class="line">        <span class="keyword">if</span> (cacheManager == <span class="keyword">null</span>) &#123;</span><br><span class="line">            cacheManager = CacheManager.create();</span><br><span class="line">        &#125;</span><br><span class="line">        EhCacheManager ehCacheManager = <span class="keyword">new</span> EhCacheManager();</span><br><span class="line">        ehCacheManager.setCacheManager(cacheManager);</span><br><span class="line">        <span class="keyword">return</span> ehCacheManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 设置资源的权限控制</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-05 8:31 AM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: java.util.Map</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Map&lt;String, String&gt; <span class="title">filterChainDefinitionMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; filterMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//需身份认证</span></span><br><span class="line">        filterMap.put(<span class="string">"/stuListView"</span>, <span class="string">"authc"</span>);</span><br><span class="line">        filterMap.put(<span class="string">"/teaListView"</span>, <span class="string">"authc"</span>);</span><br><span class="line">        <span class="comment">//无需身份认证:防止验证用户登录信息操作被'filterMap.put("/**", "authc")'拦截</span></span><br><span class="line">        filterMap.put(<span class="string">"/login"</span>, <span class="string">"anon"</span>);</span><br><span class="line">        <span class="comment">//注销过滤器:其具体的注销逻辑代码Shiro已经替我们实现了哟</span></span><br><span class="line">        filterMap.put(<span class="string">"/logout"</span>, <span class="string">"logout"</span>);</span><br><span class="line">        <span class="comment">//角色过滤:需要用户拥有'admin'角色</span></span><br><span class="line">        filterMap.put(<span class="string">"/teaListView"</span>, <span class="string">"roles[admin]"</span>);</span><br><span class="line">        <span class="comment">//权限过滤:除身份认证外,还需要用户拥有对stuListView资源的view权限</span></span><br><span class="line">        filterMap.put(<span class="string">"/stuListView"</span>, <span class="string">"perms[stuListView:view]"</span>);</span><br><span class="line">        filterMap.put(<span class="string">"/teaListView"</span>, <span class="string">"perms[teaListView:view]"</span>);</span><br><span class="line">        <span class="comment">//拦截需要登录(用户认证)方可访问的资源(一般将/**放在最下边,不然会导致所有url都被拦截哟)</span></span><br><span class="line">        filterMap.put(<span class="string">"/**"</span>, <span class="string">"authc"</span>);</span><br><span class="line">        <span class="keyword">return</span> filterMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 配置ShiroDialect, 用于thymeleaf和shiro标签配合使用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-05 6:37 PM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: at.pollux.thymeleaf.shiro.dialect.ShiroDialect</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroDialect <span class="title">shiroDialect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ShiroDialect();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>ehcache-shiro.xml : EhCache缓存框架的配置文件</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">"http://ehcache.org/ehcache.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">updateCheck</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">name</span>=<span class="string">"myEhcache"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">"java.io.tmpdir"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 授权信息缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"authorizationCache"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"2000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">statistics</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 身份信息缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"authenticationCache"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"2000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">statistics</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Session缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"activeSessionCache"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"2000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">statistics</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存半小时 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"halfHour"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsOnDisk</span>=<span class="string">"100000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"1800"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存一小时 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"hour"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsOnDisk</span>=<span class="string">"100000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"3600"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"3600"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存一天 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"oneDay"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsOnDisk</span>=<span class="string">"100000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">"86400"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">"86400"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">         name: 缓存名称。</span></span><br><span class="line"><span class="comment">         maxElementsInMemory: 缓存最大个数</span></span><br><span class="line"><span class="comment">         eternal: 对象是否永久有效,一但设置了,timeout将不起作用</span></span><br><span class="line"><span class="comment">         timeToIdleSeconds: 设置对象在失效前的允许闲置时间(单位：秒). 仅当eternal=false对象不是永久有效时使用,可选属性,默认值是0,也就是可闲置时间无穷大</span></span><br><span class="line"><span class="comment">         timeToLiveSeconds: 设置对象在失效前允许存活时间(单位：秒). 最大时间介于创建时间和失效时间之间. 仅当eternal=false对象不是永久有效时使用,默认是0,也就是对象存活时间无穷大</span></span><br><span class="line"><span class="comment">         overflowToDisk: 当内存中对象数量达到maxElementsInMemory时,Ehcache将会对象写到磁盘中</span></span><br><span class="line"><span class="comment">         diskSpoolBufferSizeMB: 这个参数设置DiskStore(磁盘缓存)的缓存区大小,默认是30MB. 每个Cache都应该有自己的一个缓冲区</span></span><br><span class="line"><span class="comment">         maxElementsOnDisk: 硬盘最大缓存个数</span></span><br><span class="line"><span class="comment">         diskPersistent: 是否缓存虚拟机重启期数据 Whether the disk store persists between restarts of the Virtual Machine. The default value is false.</span></span><br><span class="line"><span class="comment">         diskExpiryThreadIntervalSeconds: 磁盘失效线程运行时间间隔,默认是120秒</span></span><br><span class="line"><span class="comment">         memoryStoreEvictionPolicy: 当达到maxElementsInMemory限制时,Ehcache将会根据指定的策略去清理内存. 默认策略是LRU(最近最少使用). 你可以设置为FIFO(先进先出)或是LFU(较少使用)</span></span><br><span class="line"><span class="comment">         clearOnFlush: 内存数量最大时是否清除</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defaultCache</span> <span class="attr">name</span>=<span class="string">"defaultCache"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">maxElementsInMemory</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">timeToIdleSeconds</span>=<span class="string">"600"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">timeToLiveSeconds</span>=<span class="string">"600"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">overflowToDisk</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">maxElementsOnDisk</span>=<span class="string">"100000"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">diskPersistent</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">diskExpiryThreadIntervalSeconds</span>=<span class="string">"120"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">defaultCache</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="自定义Realm"><a href="#自定义Realm" class="headerlink" title="自定义Realm"></a>自定义Realm</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.ss.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.SimpleAuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.ByteSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> pers.huangyuhui.ss.bean.Permission;</span><br><span class="line"><span class="keyword">import</span> pers.huangyuhui.ss.bean.Role;</span><br><span class="line"><span class="keyword">import</span> pers.huangyuhui.ss.bean.User;</span><br><span class="line"><span class="keyword">import</span> pers.huangyuhui.ss.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span>: springboot-shiro</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 配置自定义Realm</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 黄宇辉</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 8/5/2019-7:45 AM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@website</span>: https://yubuntu0109.github.io/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 授权认证:提供用户信息,返回权限信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>: principalCollection</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-06 6:02 PM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: org.apache.shiro.authz.AuthorizationInfo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class="line">        System.err.println(<span class="string">"------------&gt; 授权认证 ------------&gt;"</span>);</span><br><span class="line">        <span class="comment">//获取当前登录的用户信息</span></span><br><span class="line">        Subject currentUser = SecurityUtils.getSubject();</span><br><span class="line">        User u = (User) currentUser.getPrincipal();</span><br><span class="line">        <span class="comment">//从数据库中获取用户所拥有的角色及权限信息</span></span><br><span class="line">        User user = userService.findByName(u.getUsername());</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            SimpleAuthorizationInfo info = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">            <span class="comment">//用于存储用户的角色及权限信息</span></span><br><span class="line">            Collection&lt;String&gt; rolesCollection = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">            Collection&lt;String&gt; permissionsCollection = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">            Set&lt;Role&gt; roles = user.getRoles(); <span class="comment">//获取用户Role的Set集合</span></span><br><span class="line">            <span class="comment">//通过遍历用户所拥有的角色,来获取其对应的权限信息</span></span><br><span class="line">            <span class="keyword">for</span> (Role role : roles) &#123;</span><br><span class="line">                rolesCollection.add(role.getName()); <span class="comment">//将每一个role的name封装到集合中</span></span><br><span class="line">                Set&lt;Permission&gt; permissionSet = role.getPermissions(); <span class="comment">//获取每一个role所对应的permission的set集合</span></span><br><span class="line">                <span class="comment">//遍历用户所拥有的权限信息</span></span><br><span class="line">                <span class="keyword">for</span> (Permission permission : permissionSet) &#123;</span><br><span class="line">                    permissionsCollection.add(permission.getName()); <span class="comment">//将每一个permission的name封装到集合中</span></span><br><span class="line">                &#125;</span><br><span class="line">                info.addStringPermissions(permissionsCollection); <span class="comment">//为用户授权</span></span><br><span class="line">            &#125;</span><br><span class="line">            info.addRoles(rolesCollection); <span class="comment">//为用户授予角色</span></span><br><span class="line">            System.out.println(<span class="string">"[roles]------------&gt;"</span> + rolesCollection.toString());</span><br><span class="line">            System.out.println(<span class="string">"[permissions]------------&gt;"</span> + permissionsCollection.toString());</span><br><span class="line">            <span class="keyword">return</span> info;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>: 登录认证:提供帐户信息,返回认证信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>: authenticationToken</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2019-08-06 6:12 PM</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: org.apache.shiro.authc.AuthenticationInfo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        System.err.println(<span class="string">"------------&gt; 开始认证 ------------&gt;"</span>);</span><br><span class="line">        UsernamePasswordToken token = (UsernamePasswordToken) authenticationToken;</span><br><span class="line">        <span class="comment">//从数据库中获取用户信息</span></span><br><span class="line">        User user = userService.findByName(token.getUsername());</span><br><span class="line">        <span class="comment">//验证账户信息</span></span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>; <span class="comment">//it's will be throw a UnknownAccountException</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//验证密码信息</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SimpleAuthenticationInfo(user, user.getPassword(), ByteSource.Util.bytes(user.getUsername()), <span class="keyword">this</span>.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-SpringBoot集成Shiro的基本配置&quot;&gt;&lt;a href=&quot;#学习笔记-SpringBoot集成Shiro的基本配置&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : SpringBoot集成Shiro的基本配置&quot;&gt;&lt;/a&gt;学习笔
      
    
    </summary>
    
    
      <category term="Shiro" scheme="http://yoursite.com/tags/Shiro/"/>
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>一个基础的Web整合Shiro案例</title>
    <link href="http://yoursite.com/2019/08/04/%E4%B8%80%E4%B8%AA%E5%9F%BA%E7%A1%80%E7%9A%84Web%E6%95%B4%E5%90%88Shiro%E6%A1%88%E4%BE%8B/"/>
    <id>http://yoursite.com/2019/08/04/一个基础的Web整合Shiro案例/</id>
    <published>2019-08-04T05:15:15.000Z</published>
    <updated>2019-08-12T01:32:47.244Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-一个基础的Web整合Shiro案例"><a href="#学习笔记-一个基础的Web整合Shiro案例" class="headerlink" title="学习笔记 : 一个基础的Web整合Shiro案例"></a>学习笔记 : 一个基础的Web整合Shiro案例</h2><p><em>总结前面<code>Shiro</code>的基本学习笔记,继而尝试整合web,来写一个基础的Web整合Shiro案例( Java web ),用户权限划分如下,该案例的代码仓库 : <a href="https://github.com/YUbuntu0109/Shiro-learning/tree/master/basic%20web%20project%20with%20shiro" target="_blank" rel="noopener">https://github.com/YUbuntu0109/Shiro-learning/tree/master/basic%20web%20project%20with%20shiro</a></em></p><ul><li>管理员(admin) : 具有操控部门/员工信息管理页的所有权限</li><li>用户(yuhui) : 仅具有部门信息的<code>view</code>权限</li></ul><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><ol><li><p><em>baseWebShiro\pom.xml : Maven依赖</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>pers.huangyuhui<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>baseWebShiro<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>a simple web program for Shiro<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Serlvet --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Shiro core --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Shiro web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- logging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>baseWebShiro\src\main\resources\shiro.ini : 用户身份及权限信息</em></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[main]</span></span><br><span class="line"><span class="comment"># 默认登录页为:/login.jsp</span></span><br><span class="line"><span class="attr">authc.loginUrl</span> = /login</span><br><span class="line"><span class="comment"># 用户没有访问指定资源的角色时所跳转的页面</span></span><br><span class="line"><span class="attr">roles.unauthorizedUrl</span> = /nopermission.jsp</span><br><span class="line"><span class="comment"># 用户没有访问指定资源的权限时所跳转的页面</span></span><br><span class="line"><span class="attr">perms.unauthorizedUrl</span> = /nopermission.jsp</span><br><span class="line"><span class="comment"># 登出之后重定向的页面</span></span><br><span class="line"><span class="attr">logout.redirectUrl</span> = /login</span><br><span class="line"></span><br><span class="line"><span class="section">[users]</span></span><br><span class="line"><span class="attr">admin</span> = <span class="number">666</span>,admin</span><br><span class="line"><span class="attr">yuhui</span> = <span class="number">777</span>,deptManager</span><br><span class="line"></span><br><span class="line"><span class="section">[roles ]</span></span><br><span class="line"><span class="attr">admin</span> = employee:*,department:*</span><br><span class="line"><span class="attr">deptManager</span> = department:view</span><br><span class="line"></span><br><span class="line"><span class="section">[urls]</span></span><br><span class="line"><span class="comment"># 静态资源可以匿名访问</span></span><br><span class="line">/static/** = anon</span><br><span class="line"><span class="comment"># 访问员工列表需要身份认证及需要用户拥有'admin'角色</span></span><br><span class="line">/employee = authc,roles[admin]</span><br><span class="line"><span class="comment"># 访问部门列表需要身份认证及需要用户拥有'department:view'的权限</span></span><br><span class="line">/department = authc,perms["department:view"]</span><br><span class="line"><span class="comment"># 当请求loginOut时,会被logout捕获并清除session</span></span><br><span class="line">/logout = logout</span><br><span class="line"><span class="comment"># 所有的请求都需要身份认证</span></span><br><span class="line">/** = authc</span><br></pre></td></tr></table></figure></li><li><p><em>baseWebShiro\src\main\webapp\WEB-INF\web.xml</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">       Shiro 1.2引入了Environmnet/WebEnvironment的概念,既由它们接口提供相应的SecurityManager及其相应的依赖.</span></span><br><span class="line"><span class="comment">       ShiroFilter会自动找到Environment,然后获取相应的依赖.</span></span><br><span class="line"><span class="comment">       底层实现:返回反射创建shiroEnvironmentClass对象,调用其init方法,既通过shiroEnvironmnetClass中的init方法</span></span><br><span class="line"><span class="comment">       创建SecurityManager实例,并将其绑定到当前运行环境</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置ShiroFilter环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>shiroEnvironmentClass<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>org.apache.shiro.web.env.IniWebEnvironment<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>shiroCConfigLocations<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:shiro.ini<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Shiro监听器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.apache.shiro.web.env.EnvironmentLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Shiro拦截器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>shiroFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.shiro.web.servlet.ShiroFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>shiroFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="前端页面"><a href="#前端页面" class="headerlink" title="前端页面"></a>前端页面</h3><ol><li><p><em>baseWebShiro\src\main\webapp\static\js\jquery.js : 嘿嘿,代码量你懂得,自行下载吧~</em></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment"> * jQuery JavaScript Library v1.7.1</span></span><br><span class="line"><span class="comment"> * http://jquery.com/</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Copyright 2011, John Resig</span></span><br><span class="line"><span class="comment"> * Dual licensed under the MIT or GPL Version 2 licenses.</span></span><br><span class="line"><span class="comment"> * http://jquery.org/license</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Includes Sizzle.js</span></span><br><span class="line"><span class="comment"> * http://sizzlejs.com/</span></span><br><span class="line"><span class="comment"> * Copyright 2011, The Dojo Foundation</span></span><br><span class="line"><span class="comment"> * Released under the MIT, BSD, and GPL Licenses.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Date: Mon Nov 21 21:11:03 2011 -0500</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">window, undefined</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Use the correct document accordingly with window argument (sandbox)</span></span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">document</span> = <span class="built_in">window</span>.document,</span><br><span class="line">        navigator = <span class="built_in">window</span>.navigator,</span><br><span class="line">        location = <span class="built_in">window</span>.location;</span><br><span class="line">    <span class="keyword">var</span> jQuery = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ······</span></span><br></pre></td></tr></table></figure></li><li><p><em>baseWebShiro\src\main\webapp\static\js\main.js : 切换用户主页中的信息管理页面</em></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">".changePage"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">"#rightMain"</span>).prop(<span class="string">"src"</span>, $(<span class="keyword">this</span>).data(<span class="string">"url"</span>));</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p><em>baseWebShiro\src\main\webapp\static\style\main_css.css : 用户主页样式</em></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.top</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">99%</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">1px</span> black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.userinfo</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.center_left</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">1px</span> black;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.center_content</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">89%</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">1px</span> black;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">1px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>baseWebShiro\src\main\webapp\WEB-INF\views\login.jsp : 用户登录页</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        h3 &#123;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#main</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 600px;</span></span><br><span class="line"><span class="undefined">            margin-left: 480px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#main</span> <span class="selector-tag">tr</span> &#123;</span></span><br><span class="line"><span class="undefined">            height: 40px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#main</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 20px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#main</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        span &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 13px;</span></span><br><span class="line"><span class="undefined">            color: red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.buttom</span> &#123;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">            padding-top: 25px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.buttom</span> <span class="selector-class">.login</span> &#123;</span></span><br><span class="line"><span class="undefined">            margin-right: 40px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>用户登录页<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/login"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>账号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>$&#123;errorMsg&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buttom"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"login"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>baseWebShiro\src\main\webapp\WEB-INF\views\main.jsp : 用户主页</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> %&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入Shiro标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"shiro"</span> <span class="attr">uri</span>=<span class="string">"http://shiro.apache.org/tags"</span> %&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>main<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/static/style/main_css.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/static/js/jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/static/js/main.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span> <span class="attr">style</span>=<span class="string">"margin-left: 15px"</span>&gt;</span>Shiro整合基本web | 一个基础的Web整合Shiro案例<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"userinfo"</span>&gt;</span></span><br><span class="line">        当前登录用户 : <span class="tag">&lt;<span class="name">shiro:principal</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/logout"</span>&gt;</span>注销<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center_left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"changePage"</span> <span class="attr">data-url</span>=<span class="string">"/employee"</span>&gt;</span>员工管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"changePage"</span> <span class="attr">data-url</span>=<span class="string">"/department"</span>&gt;</span>部门管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center_content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">"right"</span> <span class="attr">id</span>=<span class="string">"rightMain"</span> <span class="attr">src</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/welcome.jsp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">scrolling</span>=<span class="string">"auto"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">allowtransparency</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>baseWebShiro\src\main\webapp\welcome.jsp : 用户欢迎页</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> %&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>用户首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>（づ￣3￣）づ╭❤～ 用户欢迎页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>baseWebShiro\src\main\webapp\WEB-INF\views\department\list.jsp : 部门信息管理页</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> %&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入Shiro标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"shiro"</span> <span class="attr">uri</span>=<span class="string">"http://shiro.apache.org/tags"</span> %&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>部门列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>部门列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 当用户具有department模块的‘add’权限时才显示此按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">"department:add"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/department?cmd=input"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>部门编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>部门名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>部门人数<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>创建时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>负责人<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>研发部<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2019-8-3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>yubuntu0109<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 当用户具有department模块的‘edit’权限时才显示此按钮 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">"department:edit"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/department?cmd=input&amp;id=1"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 当用户具有department模块的‘del’权限时才显示此按钮 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">"department:del"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/department?cmd=delete"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>baseWebShiro\src\main\webapp\WEB-INF\views\employee\list.jsp : 员工信息管理页</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> %&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/employee?cmd=input"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>yubuntu0109<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>3083968068@qq.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>21<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/employee?cmd=input&amp;id=1"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/employee?cmd=delete"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>baseWebShiro\src\main\webapp\nopermission.jsp : 无角色/权限提示页</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> %&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>无角色/权限提示界面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>(ಥ_ಥ) 抱歉,你无权限操作该模块 !<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="后端控制器"><a href="#后端控制器" class="headerlink" title="后端控制器"></a>后端控制器</h3><ol><li><p><em>baseWebShiro\src\main\java\pers\huangyuhui\shiro\web\LoginServlet.java : 用户登录控制器</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.shiro.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"loginServlet"</span>, urlPatterns = <span class="string">"/login"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//如果登录失败,则从request中获取认证异常信息,shiro异常类的全限定名为:shiroLoginFailure</span></span><br><span class="line">        String exceptionClassName = (String) req.getAttribute(<span class="string">"shiroLoginFailure"</span>);</span><br><span class="line">        <span class="comment">//根据Shiro返回的异常类,抛出指定的异常信息</span></span><br><span class="line">        <span class="keyword">if</span> (exceptionClassName != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (UnknownAccountException.class.getName().equals(exceptionClassName)) &#123;</span><br><span class="line">                req.setAttribute(<span class="string">"errorMsg"</span>, <span class="string">"账号不存在 !"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (IncorrectCredentialsException.class.getName().equals(exceptionClassName)) &#123;</span><br><span class="line">                req.setAttribute(<span class="string">"errorMsg"</span>, <span class="string">"账号/密码信息错误 !"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                req.setAttribute(<span class="string">"errorMsg"</span>, <span class="string">"其它异常信息 ..."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/WEB-INF/views/login.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>baseWebShiro\src\main\java\pers\huangyuhui\shiro\web\MainAction.java : 用户主页面控制器</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.shiro.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"mainServlet"</span>, urlPatterns = <span class="string">"/main"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainAction</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/WEB-INF/views/main.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>baseWebShiro\src\main\java\pers\huangyuhui\shiro\web\DepartmentServlet.java : 部门信息管理页控制器</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.shiro.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"departmentServlet"</span>, urlPatterns = <span class="string">"/department"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DepartmentServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String cmd = req.getParameter(<span class="string">"cmd"</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"input"</span>.equals(cmd)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (req.getParameter(<span class="string">"id"</span>) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                req.setAttribute(<span class="string">"name"</span>, <span class="string">"Shiro研发部"</span>);</span><br><span class="line">                req.setAttribute(<span class="string">"cmdType"</span>, <span class="string">"编辑"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                req.setAttribute(<span class="string">"cmdType"</span>, <span class="string">"新增"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/WEB-INF/views/department/input.jsp"</span>).forward(req, resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"savaOrUpdate"</span>.equals(cmd)) &#123;</span><br><span class="line">            <span class="comment">// ···</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"delete"</span>.equals(cmd)) &#123;</span><br><span class="line">            <span class="comment">// ···</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/WEB-INF/views/department/list.jsp"</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>baseWebShiro\src\main\java\pers\huangyuhui\shiro\web\EmployeeServlet.java : 员工信息管理页控制器</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.shiro.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(name = <span class="string">"employeeServlet"</span>, urlPatterns = <span class="string">"/employee"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String cmd = req.getParameter(<span class="string">"cmd"</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"input"</span>.equals(cmd)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (req.getParameter(<span class="string">"id"</span>) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                req.setAttribute(<span class="string">"name"</span>, <span class="string">"yubuntu0109"</span>);</span><br><span class="line">                req.setAttribute(<span class="string">"age"</span>, <span class="string">"21"</span>);</span><br><span class="line">                req.setAttribute(<span class="string">"email"</span>, <span class="string">"3083968068@qq.com"</span>);</span><br><span class="line">                req.setAttribute(<span class="string">"cmdType"</span>, <span class="string">"编辑"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                req.setAttribute(<span class="string">"cmdType"</span>, <span class="string">"新增"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/WEB-INF/views/employee/input.jsp"</span>).forward(req, resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"savaOrUpdate"</span>.equals(cmd)) &#123;</span><br><span class="line">            <span class="comment">// ······</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"delete"</span>.equals(cmd)) &#123;</span><br><span class="line">            <span class="comment">// ······</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/WEB-INF/views/employee/list.jsp"</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="案例截屏"><a href="#案例截屏" class="headerlink" title="案例截屏"></a>案例截屏</h3><p><em>用户登录页面 :</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/04/一个基础的Web整合Shiro案例/Shiro整合web-用户登录页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>用户主页面 :</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/04/一个基础的Web整合Shiro案例/Shiro整合web-用户主页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>管理员(<code>admin</code>)身份登录 : 部门信息管理页( 该用户拥有操控部门信息管理页的所有权限 )</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/04/一个基础的Web整合Shiro案例/Shiro整合web-admin-部门信息管理页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>管理员(<code>admin</code>)身份登录 : 员工信息管理页( 该用户拥有操控员工信息管理页的所有权限 )</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/04/一个基础的Web整合Shiro案例/Shiro整合web-admin-员工信息管理页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>普通用户(<code>yuhui</code>)身份登录 : 部门信息管理页( 该用户只具有部门信息管理页的<code>view</code>权限 )</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/04/一个基础的Web整合Shiro案例/Shiro整合web-yuhui-部门信息管理页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>普通用户(<code>yuhui</code>)身份登录 : 员工信息管理页( 该用户并没有操控员工信息管理页的权限 )</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/04/一个基础的Web整合Shiro案例/Shiro整合web-yuhui-员工信息管理页.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-一个基础的Web整合Shiro案例&quot;&gt;&lt;a href=&quot;#学习笔记-一个基础的Web整合Shiro案例&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : 一个基础的Web整合Shiro案例&quot;&gt;&lt;/a&gt;学习笔记 : 一个基础的Web整合S
      
    
    </summary>
    
    
      <category term="Java web" scheme="http://yoursite.com/tags/Java-web/"/>
    
      <category term="Shiro" scheme="http://yoursite.com/tags/Shiro/"/>
    
  </entry>
  
  <entry>
    <title>Hi Layui ~</title>
    <link href="http://yoursite.com/2019/08/04/Hi-Layui/"/>
    <id>http://yoursite.com/2019/08/04/Hi-Layui/</id>
    <published>2019-08-04T02:16:22.000Z</published>
    <updated>2019-08-04T03:40:57.889Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-拥抱前端框架Layui"><a href="#学习笔记-拥抱前端框架Layui" class="headerlink" title="学习笔记 : 拥抱前端框架Layui"></a>学习笔记 : 拥抱前端框架Layui</h2><p><em>layui 的出发点很简单 : <code>满足服务端程序员的需求</code>,因此可以毫不保留地说,layui 并非面向于前端开发者,所以在组织形式上毅然采用了几年前的以浏览器为宿主的类 AMD 模块管理方式. 对比EasyUI,Layui的作者<code>贤心</code>写出了如下评语,一直用EasyUI写小项目前端的我看后内心波涛汹涌,特么太生动了趴ヾ(=･ω･=)o</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Layui : 一个是邻家女孩，尚处芳龄，简而纯</span><br><span class="line">EasyUI : 一个是彪悍妇女，昨日黄花，强而丑</span><br></pre></td></tr></table></figure></p><h3 id="官方简介"><a href="#官方简介" class="headerlink" title="官方简介"></a>官方简介</h3><p><em>官方简介 : layui(谐音:类UI)是一款采用自身模块规范编写的前端 UI 框架,遵循原生 HTML/CSS/JS 的书写与组织形式,门槛极低,拿来即用. 其外在极简,却又不失饱满的内在,体积轻盈,组件丰盈,从核心代码到 API 的每一处细节都经过精心雕琢,非常适合界面的快速开发. layui 首个版本发布于2016年金秋,她区别于那些基于 MVVM 底层的 UI 框架,却并非逆道而行,而是信奉返璞归真之道. 准确地说,她更多是为服务端程序员量身定做,你无需涉足各种前端工具的复杂配置,只需面对浏览器本身,让一切你所需要的元素与交互,从这里信手拈来~</em></p><h3 id="兼容性和面向场景"><a href="#兼容性和面向场景" class="headerlink" title="兼容性和面向场景"></a>兼容性和面向场景</h3><p><em>layui 兼容人类正在使用的全部浏览器(IE6/7除外),可作为 PC 端后台系统与前台界面的速成开发方案</em></p><h3 id="主要模块"><a href="#主要模块" class="headerlink" title="主要模块"></a>主要模块</h3><p><em>layui 提供了丰富的内置模块,他们皆可通过模块化的方式按需加载,其中包括 : layer、layDate、layPage、laytpl、table、form、upload、element、tree、layeditor、rate、carousel、flow、util、code等..</em></p><h3 id="第一个Layui页面"><a href="#第一个Layui页面" class="headerlink" title="第一个Layui页面"></a>第一个Layui页面</h3><p><em>接下来通过Layui的表单模块,来快速写地一个简洁的用户登录页面 !ヾ(◍°∇°◍)ﾉﾞ</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../resources/layui/layui-v2.5.4/layui/layui.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../resources/layui/layui-v2.5.4/layui/css/layui.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>layui表单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">style</span>=<span class="string">"margin-left: 400px;padding-top: 100px;"</span> <span class="attr">class</span>=<span class="string">"layui-form"</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-form-item"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"layui-form-label"</span>&gt;</span>输入框<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-input-inline"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span> <span class="attr">style</span>=<span class="string">"width: 300px;"</span> <span class="attr">required</span> <span class="attr">lay-verify</span>=<span class="string">"required"</span> <span class="attr">placeholder</span>=<span class="string">"请输入账号"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">class</span>=<span class="string">"layui-input"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-form-item"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"layui-form-label"</span>&gt;</span>密码框<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-input-inline"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">style</span>=<span class="string">"width: 300px;"</span> <span class="attr">required</span> <span class="attr">lay-verify</span>=<span class="string">"required"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">class</span>=<span class="string">"layui-input"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-form-item"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"layui-form-label"</span>&gt;</span>复选框<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-input-block"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"like[student]"</span> <span class="attr">title</span>=<span class="string">"学生"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"like[teacher]"</span> <span class="attr">title</span>=<span class="string">"教师"</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-form-item"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"layui-input-block"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"layui-btn"</span> <span class="attr">lay-submit</span> <span class="attr">lay-filter</span>=<span class="string">"formDemo"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">class</span>=<span class="string">"layui-btn layui-btn-primary"</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">//Demo</span></span><br><span class="line"><span class="undefined">layui.use('form', function() &#123;</span></span><br><span class="line"><span class="undefined">var form = layui.form;</span></span><br><span class="line"><span class="undefined">//监听提交</span></span><br><span class="line"><span class="undefined">form.on('submit(formDemo)', function(data) &#123;</span></span><br><span class="line"><span class="undefined">layer.msg(JSON.stringify(data.field));</span></span><br><span class="line"><span class="undefined">return false;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>程序运行结果如下所示,是不是感觉瞬间爱上Layui了呢 !</em><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/04/Hi-Layui/Layui-form.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><em>✨ Layui官方使用文档 : <a href="https://www.layui.com/doc/" target="_blank" rel="noopener">https://www.layui.com/doc/</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-拥抱前端框架Layui&quot;&gt;&lt;a href=&quot;#学习笔记-拥抱前端框架Layui&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : 拥抱前端框架Layui&quot;&gt;&lt;/a&gt;学习笔记 : 拥抱前端框架Layui&lt;/h2&gt;&lt;p&gt;&lt;em&gt;layui 
      
    
    </summary>
    
    
      <category term="Layui" scheme="http://yoursite.com/tags/Layui/"/>
    
  </entry>
  
  <entry>
    <title>Shiro的拦截器机制</title>
    <link href="http://yoursite.com/2019/08/03/Shiro%E7%9A%84%E6%8B%A6%E6%88%AA%E5%99%A8%E6%9C%BA%E5%88%B6/"/>
    <id>http://yoursite.com/2019/08/03/Shiro的拦截器机制/</id>
    <published>2019-08-03T00:01:57.000Z</published>
    <updated>2019-08-03T11:57:19.995Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-Shiro的拦截机制"><a href="#学习笔记-Shiro的拦截机制" class="headerlink" title="学习笔记 : Shiro的拦截机制"></a>学习笔记 : Shiro的拦截机制</h2><h3 id="默认拦截器"><a href="#默认拦截器" class="headerlink" title="默认拦截器"></a>默认拦截器</h3><p><em>Shiro内置了很多默认的拦截器,比如身份验证、授权等相关的.更多默认拦截器可以参考 <code>org.apache.shiro.web.filter.mgt.DefaultFilter</code>中的枚举拦截器,如下所示 :</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Enum representing all of the default Shiro Filter instances available to web applications.  </span></span><br><span class="line"><span class="comment"> * Each filter instance is typically accessible </span></span><br><span class="line"><span class="comment"> * in configuration the &#123;<span class="doctag">@link</span> #name() name&#125; of the enum constant.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> DefaultFilter &#123;</span><br><span class="line"></span><br><span class="line">    anon(AnonymousFilter.class),</span><br><span class="line">    authc(FormAuthenticationFilter.class),</span><br><span class="line">    authcBasic(BasicHttpAuthenticationFilter.class),</span><br><span class="line">    logout(LogoutFilter.class),</span><br><span class="line">    noSessionCreation(NoSessionCreationFilter.class),</span><br><span class="line">    perms(PermissionsAuthorizationFilter.class),</span><br><span class="line">    port(PortFilter.class),</span><br><span class="line">    rest(HttpMethodPermissionFilter.class),</span><br><span class="line">    roles(RolesAuthorizationFilter.class),</span><br><span class="line">    ssl(SslFilter.class),</span><br><span class="line">    user(UserFilter.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Class&lt;? extends Filter&gt; filterClass;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">DefaultFilter</span><span class="params">(Class&lt;? extends Filter&gt; filterClass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.filterClass = filterClass;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Filter <span class="title">newInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (Filter) ClassUtils.newInstance(<span class="keyword">this</span>.filterClass);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Class&lt;? extends Filter&gt; getFilterClass() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.filterClass;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Filter&gt; <span class="title">createInstanceMap</span><span class="params">(FilterConfig config)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Filter&gt; filters = <span class="keyword">new</span> LinkedHashMap&lt;String, Filter&gt;(values().length);</span><br><span class="line">        <span class="keyword">for</span> (DefaultFilter defaultFilter : values()) &#123;</span><br><span class="line">            Filter filter = defaultFilter.newInstance();</span><br><span class="line">            <span class="keyword">if</span> (config != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    filter.init(config);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (ServletException e) &#123;</span><br><span class="line">                    String msg = <span class="string">"Unable to correctly init default filter instance of type "</span> +</span><br><span class="line">                            filter.getClass().getName();</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(msg, e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            filters.put(defaultFilter.name(), filter);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> filters;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/03/Shiro的拦截器机制/Shiro-ShiroFilter.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><table><thead><tr><th style="text-align:center">过滤器简称</th><th style="text-align:center">对应的java类</th></tr></thead><tbody><tr><td style="text-align:center">anon</td><td style="text-align:center">org.apache.shiro.web.filter.authc.AnonymousFilter</td></tr><tr><td style="text-align:center">authc</td><td style="text-align:center">org.apache.shiro.web.filter.authc.FormAuthenticationFilter</td></tr><tr><td style="text-align:center">authcBasic</td><td style="text-align:center">org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter</td></tr><tr><td style="text-align:center">roles</td><td style="text-align:center">org.apache.shiro.web.filter.authz.RolesAuthorizationFilter</td></tr><tr><td style="text-align:center">perms</td><td style="text-align:center">org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter</td></tr><tr><td style="text-align:center">user</td><td style="text-align:center">org.apache.shiro.web.filter.authc.UserFilter</td></tr><tr><td style="text-align:center">logout</td><td style="text-align:center">org.apache.shiro.web.filter.authc.LogoutFilter</td></tr><tr><td style="text-align:center">port</td><td style="text-align:center">org.apache.shiro.web.filter.authz.PortFilter</td></tr><tr><td style="text-align:center">rest</td><td style="text-align:center">org.apache.shiro.web.filter.authz.HttpMethodPermissionFilter</td></tr><tr><td style="text-align:center">ssl</td><td style="text-align:center">org.apache.shiro.web.filter.authz.SslFilter</td></tr></tbody></table><ol><li><code>anon</code> : 匿名拦截器,即不需要登录即可访问. 一般用于静态资源过滤,示例”/static/**=anon”</li><li><code>authc</code> : 表示需要认证(登录)才能使用,示例”/**=authc”,主要属性有 : <ul><li>usernameParam : 表单提交的用户名参数名(username)</li><li>passwordParam : 表单提交的密码参数名(password)</li><li>rememberMeParam : 表单提交的密码参数名(rememberMe)</li><li>loginUrl : 登录请求地址(/login.jsp)</li><li>successUrl : 登录成功后的默认重定向地址</li><li>failureKeyAttribute : 登录失败后错误信息存储key(shiroLoginFailure)</li></ul></li><li><code>authcBasic</code> : Basic HTTP身份验证拦截器,主要属性 : applicationName:弹出登录框显示的信息(application)</li><li><code>roles</code> : 角色授权拦截器,验证用户是否拥有资源角色. 示例”/admin/**=roles[admin]”</li><li><code>perms</code> : 权限授权拦截器,验证用户是否拥有资源权限. 示例”/user/create=perms[“user:create”]”</li><li><code>user</code> : 用户拦截器,用户已经身份验证/记住我的登录. 示例”/index=user”</li><li><code>logout</code> : 退出拦截器,主要属性 : redirectUrl:退出成功后重定向的地址(/). 示例”/logout=logout”</li><li><code>port</code> : 端口拦截器,主要属性 : port(80):可以通过的端口. 示例”/test= port[80]”,如果用户访问该页面是非80,将自动将请求端口改为80并重定向到该80端口,其他路径/参数等相同</li><li><code>rest</code> : rest风格拦截器,自动根据请求方法构建权限字符串(GET=read,POST=create,PUT=update,DELETE=delete,HEAD=read,TRACE=read,OPTIONS=read, MKCOL=create)构建权限字符串. 示例”/users=rest[user]”,会自动拼出”user:read,user:create,user:update,user:delete”权限字符串进行权限匹配(所有都得匹配:isPermittedAll)</li><li><code>ssl</code> : SSL拦截器,只有请求协议是https才能通过. 否则自动跳转会https端口(443). 其他和port拦截器一样</li></ol><ul><li>注 : anon,authcBasic,auchc,user是认证过滤器. perms,roles,ssl,rest,port是授权过滤器</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-Shiro的拦截机制&quot;&gt;&lt;a href=&quot;#学习笔记-Shiro的拦截机制&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : Shiro的拦截机制&quot;&gt;&lt;/a&gt;学习笔记 : Shiro的拦截机制&lt;/h2&gt;&lt;h3 id=&quot;默认拦截器&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="Shiro" scheme="http://yoursite.com/tags/Shiro/"/>
    
  </entry>
  
  <entry>
    <title>Shiro之用户授权</title>
    <link href="http://yoursite.com/2019/08/02/Shiro%E4%B9%8B%E7%94%A8%E6%88%B7%E6%8E%88%E6%9D%83/"/>
    <id>http://yoursite.com/2019/08/02/Shiro之用户授权/</id>
    <published>2019-08-02T00:28:58.000Z</published>
    <updated>2019-08-03T09:07:53.088Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-详解Shiro的用户授权"><a href="#学习笔记-详解Shiro的用户授权" class="headerlink" title="学习笔记 : 详解Shiro的用户授权"></a>学习笔记 : 详解Shiro的用户授权</h2><p><em>简介 : 授权,也叫访问控制,即在应用中控制谁能访问哪些资源(如访问页面/编辑数据/页面操作等). 在授权中需了解的几个关键对象 : 主体(Subject)、资源(Resource)、权限(Permission)、角色(Role),其解析如下所示 :</em></p><ol><li><code>主体</code> : <em>主体,即访问应用的用户,在Shiro中使用Subject代表该用户. 用户只有授权后才允许访问相应的资源</em></li><li><code>资源</code> : <em>在应用中用户可以访问的任何资源,比如访问JSP页面、查看/编辑某些数据、访问某个业务方法、打印文本等等..用户需要授权后方可访问</em></li><li><code>权限</code> : <em>安全策略中的原子授权单位,可用权限控制用户在应用中是否能访问某个资源,如访问用户列表页面,查看/新增/修改/删除用户数据(基本为CRUD式权限控制)..</em></li><li><p><code>角色</code> : <em>角色代表了操作集合,可以理解为权限的集合,一般情况下我们会赋予用户角色而不是权限,即这样用户可以拥有一组权限,不同的角色拥有一组不同的权限</em></p><ul><li><code>隐式角色</code> : <em>即直接通过角色来验证用户有没有操作权限,即粒度是以角色为单位进行访问控制的,粒度较粗. 若进行变更可能需要多处代码的修改</em></li><li><code>显示角色</code> : <em>在程序中通过权限控制谁能访问某个资源,角色聚合一组权限集合. 这样若需要哪个角色不能访问某个资源,只需要从角色代表的权限集合中移除指定的访问权限即可,无须修改多处代码</em></li></ul></li></ol><h3 id="授权方式"><a href="#授权方式" class="headerlink" title="授权方式"></a>授权方式</h3><p><em>Shiro 支持三种方式的授权,如下所示 :</em></p><ol><li><p><em><code>编程式</code> : 通过写if/else授权代码块完成</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Subject subject = SecurityUtils.getSubject();</span><br><span class="line"><span class="keyword">if</span>(subject.hasRole(<span class="string">"admin"</span>)) &#123;</span><br><span class="line">    <span class="comment">//有权限</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//无权限</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em><code>注解式</code> : 通过在执行的Java方法上放置相应的注解完成</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequiresRoles</span>(<span class="string">"admin"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//有权限</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em><code>JSP/GSP 标签</code> : 在JSP/GSP页面通过相应的标签完成</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">"admin"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">!—</span> 有权限 —&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="授权流程"><a href="#授权流程" class="headerlink" title="授权流程"></a>授权流程</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/02/Shiro之用户授权/Shiro-授权流程.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ol><li><em>首先调用`Subject.isPermitted</em>/hasRole<em>`接口,其会委托给SecurityManager,而SecurityManager接着会委托给Authorizer</em></li><li><em>Authorizer是真正的授权者,如果我们调用如isPermitted(“user:create”),其首先会通过PermissionResolver把字符串转换成相应的Permission实例</em></li><li><em>在进行授权之前,其会调用相应的Realm获取Subject相应的角色/权限用于匹配传入的角色/权限</em></li><li><em>Authorizer会判断Realm的角色/权限是否和传入的匹配,如果有多个Realm,则会委托给ModularRealmAuthorizer进行循环判断,如果匹配如`isPermitted</em>/hasRole<em>`会返回true,否则返回false以表示授权失败</em></li></ol><h3 id="ini方式检查用户拥有的角色"><a href="#ini方式检查用户拥有的角色" class="headerlink" title="ini方式检查用户拥有的角色"></a>ini方式检查用户拥有的角色</h3><p><em>通过加载<code>ini</code>配置文件的方式,来实现一个用于检查用户是否拥有指定角色的程序~</em></p><ol><li><p><em>pom.xml : Maven依赖</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Shiro核心包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- slf4j的接口实现 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>per-shiro.ini : 用户身份及权限配置信息</em></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#权限表达式的定义:首先根据用户名查找角色,再根据角色查找权限,角色是权限的集合</span></span><br><span class="line"></span><br><span class="line"><span class="section">[users]</span></span><br><span class="line"><span class="comment">#用户hunagyuhui的密码为loveyourself,且具有student和programmer两个角色</span></span><br><span class="line"><span class="attr">huangyuhui</span> = loveyourself,student,programmer</span><br><span class="line"></span><br><span class="line"><span class="section">[roles]</span></span><br><span class="line"><span class="comment">#角色student对资源'user'拥有create,update权限</span></span><br><span class="line"><span class="attr">student</span> = user:create,user:update</span><br><span class="line"><span class="comment">#角色programmer对资源'user'具有insert,delete权限</span></span><br><span class="line"><span class="attr">programmer</span> = user:read,user:delete</span><br></pre></td></tr></table></figure></li><li><p><em>RolesTest.java : 验证用户角色信息</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.permission;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.UnauthorizedException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.config.IniSecurityManagerFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.Factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RolesTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1:加载配置文件,创建SecurityManager工厂对象</span></span><br><span class="line">        Factory&lt;SecurityManager&gt; factory = <span class="keyword">new</span> IniSecurityManagerFactory(<span class="string">"classpath:per-shiro.ini"</span>);</span><br><span class="line">        <span class="comment">//2:获得securityManager实例对象</span></span><br><span class="line">        SecurityManager securityManager = factory.getInstance();</span><br><span class="line">        <span class="comment">//3:将securityManger实例绑定到当前运行环境中,便于访问</span></span><br><span class="line">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line">        <span class="comment">//4:创建当前登录的主体</span></span><br><span class="line">        Subject currentUser = SecurityUtils.getSubject();</span><br><span class="line">        <span class="comment">//5:绑定主体登录的身份/凭证,既账户及密码</span></span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"huangyuhui"</span>, <span class="string">"loveyourself"</span>);</span><br><span class="line">        <span class="comment">//6:主体登录</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            currentUser.login(token);</span><br><span class="line">            System.out.println(<span class="string">"用户身份是否验证成功 :"</span> + currentUser.isAuthenticated());</span><br><span class="line">            <span class="comment">//7:进行用户角色判断</span></span><br><span class="line">            System.out.println(<span class="string">"判断当前登录用户是否拥有'student'角色 : "</span> + currentUser.hasRole(<span class="string">"student"</span>));</span><br><span class="line">            System.out.println(<span class="string">"判断当前登录用户是否同时拥有'student'与'programmer'角色 : "</span> + currentUser.hasAllRoles(List.of(<span class="string">"student"</span>, <span class="string">"programmer"</span>)));</span><br><span class="line">            System.out.println(<span class="string">"判断当前登录用户是否拥有'student','programmer','singer'角色 : "</span> + Arrays.toString(currentUser.hasRoles(List.of(<span class="string">"student"</span>, <span class="string">"programmer"</span>, <span class="string">"singer"</span>))));</span><br><span class="line">            <span class="comment">//判断当前用户是否拥有某个角色,若拥有该角色则不做任何操作(无返回值),反之则抛出:UnauthorizedException</span></span><br><span class="line">            currentUser.checkRole(<span class="string">"singer"</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownAccountException e) &#123;</span><br><span class="line">            System.err.println(<span class="string">"用户账户错误 !"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IncorrectCredentialsException e) &#123;</span><br><span class="line">            System.err.println(<span class="string">"用户密码错误 !"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnauthorizedException e) &#123;</span><br><span class="line">            System.err.println(<span class="string">"用户并不拥有'singer'角色 !"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//8:注销登录</span></span><br><span class="line">        currentUser.logout();</span><br><span class="line">        System.out.println(<span class="string">"用户信息是否注销成功 :"</span> + !currentUser.isAuthenticated());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果如下所示 :</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ······</span></span><br><span class="line">用户身份是否验证成功 :<span class="keyword">true</span></span><br><span class="line"><span class="comment">// ······</span></span><br><span class="line">判断当前登录用户是否拥有<span class="string">'student'</span>角色 : <span class="keyword">true</span></span><br><span class="line"><span class="comment">// ······</span></span><br><span class="line">判断当前登录用户是否同时拥有<span class="string">'student'</span>与<span class="string">'programmer'</span>角色 : <span class="keyword">true</span></span><br><span class="line"><span class="comment">// ······</span></span><br><span class="line">判断当前登录用户是否拥有<span class="string">'student'</span>,<span class="string">'programmer'</span>,<span class="string">'singer'</span>角色 : [<span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">false</span>]</span><br><span class="line"><span class="comment">// ······</span></span><br><span class="line">用户并不拥有<span class="string">'singer'</span>角色 !</span><br><span class="line"><span class="comment">// ······</span></span><br><span class="line">用户信息是否注销成功 :<span class="keyword">true</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="ini方式检查用户拥有的权限"><a href="#ini方式检查用户拥有的权限" class="headerlink" title="ini方式检查用户拥有的权限"></a>ini方式检查用户拥有的权限</h3><p><em>通过加载<code>ini</code>配置文件的方式,来实现一个用于检查用户是否拥有指定权限的程序~</em></p><ol><li><p><em>pom.xml : Maven依赖(同上)</em></p></li><li><p><em>per-shiro.ini : 用户身份及权限配置信息(同上)</em></p></li><li><p><em>PermissionTest.java : 验证用户权限信息</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.permission;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.UnauthorizedException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.config.IniSecurityManagerFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.Factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissionsTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1:加载配置文件,创建SecurityManager工厂对象</span></span><br><span class="line">        Factory&lt;SecurityManager&gt; factory = <span class="keyword">new</span> IniSecurityManagerFactory(<span class="string">"classpath:per-shiro.ini"</span>);</span><br><span class="line">        <span class="comment">//2:获得securityManager实例对象</span></span><br><span class="line">        SecurityManager securityManager = factory.getInstance();</span><br><span class="line">        <span class="comment">//3:将securityManger实例绑定到当前运行环境中,便于访问</span></span><br><span class="line">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line">        <span class="comment">//4:创建当前登录的主体</span></span><br><span class="line">        Subject currentUser = SecurityUtils.getSubject();</span><br><span class="line">        <span class="comment">//5:绑定主体登录的身份/凭证,既账户及密码</span></span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"huangyuhui"</span>, <span class="string">"loveyourself"</span>);</span><br><span class="line">        <span class="comment">//6:主体登录</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            currentUser.login(token);</span><br><span class="line">            System.out.println(<span class="string">"用户身份是否验证成功 :"</span> + currentUser.isAuthenticated());</span><br><span class="line">            <span class="comment">//7:进行用户权限判断</span></span><br><span class="line">            System.out.println(<span class="string">"当前用户是否拥有对资源'user'的'create'与'read'权限 : "</span> + Arrays.toString(currentUser.isPermitted(<span class="string">"user:create"</span>, <span class="string">"user:read"</span>)));</span><br><span class="line">            System.out.println(<span class="string">"当前用户是否拥有对资源'user'的'update'与'delete'权限 : "</span> + Arrays.toString(currentUser.isPermitted(<span class="string">"user:update"</span>, <span class="string">"user:delete"</span>)));</span><br><span class="line">            System.out.println(<span class="string">"当前用户是否拥有对资源'user'的'import'与'export'权限 : "</span> + Arrays.toString(currentUser.isPermitted(<span class="string">"user:import"</span>, <span class="string">"user:export"</span>)));</span><br><span class="line">            <span class="comment">//判断当前用户是否拥有某个权限,若有则不做任何操作(无返回值),反之抛出:UnauthorizedException</span></span><br><span class="line">            currentUser.checkPermission(<span class="string">"user:getUserList"</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownAccountException e) &#123;</span><br><span class="line">            System.err.println(<span class="string">"用户账户错误 !"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IncorrectCredentialsException e) &#123;</span><br><span class="line">            System.err.println(<span class="string">"用户密码错误 !"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnauthorizedException e) &#123;</span><br><span class="line">            System.err.println(<span class="string">"当前用户并未拥有对资源'user'的'getUserList'权限 !"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//8:注销登录</span></span><br><span class="line">        currentUser.logout();</span><br><span class="line">        System.out.println(<span class="string">"用户信息是否注销成功 :"</span> + !currentUser.isAuthenticated());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果如下所示 :</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ······</span></span><br><span class="line">用户身份是否验证成功 :<span class="keyword">true</span></span><br><span class="line"><span class="comment">// ······</span></span><br><span class="line">当前用户是否拥有对资源<span class="string">'user'</span>的<span class="string">'create'</span>与<span class="string">'read'</span>权限 : [<span class="keyword">true</span>, <span class="keyword">true</span>]</span><br><span class="line"><span class="comment">// ······</span></span><br><span class="line">当前用户是否拥有对资源<span class="string">'user'</span>的<span class="string">'update'</span>与<span class="string">'delete'</span>权限 : [<span class="keyword">true</span>, <span class="keyword">true</span>]</span><br><span class="line"><span class="comment">// ······</span></span><br><span class="line">当前用户是否拥有对资源<span class="string">'user'</span>的<span class="string">'import'</span>与<span class="string">'export'</span>权限 : [<span class="keyword">false</span>, <span class="keyword">false</span>]</span><br><span class="line"><span class="comment">// ······</span></span><br><span class="line">当前用户并未拥有对资源<span class="string">'user'</span>的<span class="string">'getUserList'</span>权限 !</span><br><span class="line"><span class="comment">// ······</span></span><br><span class="line">用户信息是否注销成功 :<span class="keyword">true</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="自定义Realm检查用户拥有的权限"><a href="#自定义Realm检查用户拥有的权限" class="headerlink" title="自定义Realm检查用户拥有的权限"></a>自定义Realm检查用户拥有的权限</h3><p><em>通过配置自定义<code>Realm</code>的方式,来实现一个用于验证用于角色及权限的程序~</em></p><ol><li><p><em>pom.xml : Maven依赖(同上)</em></p></li><li><p><em>per-my-shiro.ini : 配置自定义Realm</em></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定自定义realm</span></span><br><span class="line"><span class="attr">myRealm</span> = pers.huangyuhui.permission.realm.PermissRealm</span><br><span class="line"><span class="comment">#指定SecurityManager的realms实现</span></span><br><span class="line"><span class="attr">securityManager.realm</span> = <span class="variable">$myRealm</span></span><br></pre></td></tr></table></figure></li><li><p><em>PermissionRealm.java : 自定义Realm,并配置用户角色及权限信息</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.permission.realm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.SimpleAuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span>: shiro-learning</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 自定义Realm, 配置用户角色及权限信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: 黄宇辉</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 8/2/2019-10:52 AM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@website</span>: https://yubuntu0109.github.io/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"permissRealm"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//授权:其principals存储着用户认证的凭证信息</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principals)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取当前登录的用户名信息,既用户凭证</span></span><br><span class="line">        <span class="comment">//Object username = principals.getPrimaryPrincipal();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//模拟查询数据库操作:查询用户所拥有的的角色及权限信息</span></span><br><span class="line">        List&lt;String&gt; roles = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;String&gt; permiss = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//假设该用户拥有'student'与'programmer'角色</span></span><br><span class="line">        roles.add(<span class="string">"student"</span>);</span><br><span class="line">        roles.add(<span class="string">"programmer"</span>);</span><br><span class="line">        <span class="comment">//假设该用户拥有对资源'user'的'read'与'update'权限</span></span><br><span class="line">        permiss.add(<span class="string">"user:create"</span>);</span><br><span class="line">        permiss.add(<span class="string">"user:update"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//封装用户的角色与权限信息并返回</span></span><br><span class="line">        SimpleAuthorizationInfo info = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">        info.addRoles(roles);</span><br><span class="line">        info.addStringPermissions(permiss);</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//认证:其token存储着传入的用户身份信息(usernamePasswordToken)</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        <span class="comment">//获取用户的账户信息并验证</span></span><br><span class="line">        String username = (String) token.getPrincipal();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">"github"</span>.equals(username)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//模拟用户密码信息</span></span><br><span class="line">        String password = <span class="string">"yubuntu0109"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//SimpleAuthenticationInfo(Object principal, Object credentials, String realmName)</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SimpleAuthenticationInfo(username, password, getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>PermissTest.java : 验证用户角色及权限信息</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.permission.realm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.UnauthorizedException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.config.IniSecurityManagerFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.Factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1:加载配置文件,创建SecurityManager工厂对象</span></span><br><span class="line">        Factory&lt;SecurityManager&gt; factory = <span class="keyword">new</span> IniSecurityManagerFactory(<span class="string">"classpath:my-per-shiro.ini"</span>);</span><br><span class="line">        <span class="comment">//2:获得securityManager实例对象</span></span><br><span class="line">        SecurityManager securityManager = factory.getInstance();</span><br><span class="line">        <span class="comment">//3:将securityManger实例绑定到当前运行环境中,便于访问</span></span><br><span class="line">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line">        <span class="comment">//4:创建当前登录的主体</span></span><br><span class="line">        Subject currentUser = SecurityUtils.getSubject();</span><br><span class="line">        <span class="comment">//5:绑定主体登录的身份/凭证,既账户及密码</span></span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"github"</span>, <span class="string">"yubuntu0109"</span>);</span><br><span class="line">        <span class="comment">//6:主体登录</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            currentUser.login(token);</span><br><span class="line">            System.out.println(<span class="string">"用户身份是否验证成功 :"</span> + currentUser.isAuthenticated());</span><br><span class="line">            <span class="comment">//7:验证用户角色</span></span><br><span class="line">            System.out.println(<span class="string">"判断当前登录用户是否拥有'student','programmer','singer'角色 : "</span></span><br><span class="line">                    + Arrays.toString(currentUser.hasRoles(List.of(<span class="string">"student"</span>, <span class="string">"programmer"</span>, <span class="string">"singer"</span>))));</span><br><span class="line">            <span class="comment">//8:验证用户权限</span></span><br><span class="line">            System.out.println(<span class="string">"当前用户是否拥有对'user'资源的'create','update','read','delete'权限 : "</span></span><br><span class="line">                    + Arrays.toString(currentUser.isPermitted(<span class="string">"user:create"</span>, <span class="string">"user:update"</span>, <span class="string">"user:read"</span>, <span class="string">"user:delete"</span>)));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownAccountException e) &#123;</span><br><span class="line">            System.err.println(<span class="string">"用户账户错误 !"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IncorrectCredentialsException e) &#123;</span><br><span class="line">            System.err.println(<span class="string">"用户密码错误 !"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//8:注销登录</span></span><br><span class="line">        currentUser.logout();</span><br><span class="line">        System.out.println(<span class="string">"用户信息是否注销成功 :"</span> + !currentUser.isAuthenticated());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果如下所示 :</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ······</span></span><br><span class="line">用户身份是否验证成功 :<span class="keyword">true</span></span><br><span class="line"><span class="comment">// ······</span></span><br><span class="line">判断当前登录用户是否拥有<span class="string">'student'</span>,<span class="string">'programmer'</span>,<span class="string">'singer'</span>角色 : [<span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">false</span>]</span><br><span class="line"><span class="comment">// ······</span></span><br><span class="line">当前用户是否拥有对<span class="string">'user'</span>资源的<span class="string">'create'</span>,<span class="string">'update'</span>,<span class="string">'read'</span>,<span class="string">'delete'</span>权限 : [<span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">false</span>]</span><br><span class="line"><span class="comment">// ······</span></span><br><span class="line">用户信息是否注销成功 :<span class="keyword">true</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-详解Shiro的用户授权&quot;&gt;&lt;a href=&quot;#学习笔记-详解Shiro的用户授权&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : 详解Shiro的用户授权&quot;&gt;&lt;/a&gt;学习笔记 : 详解Shiro的用户授权&lt;/h2&gt;&lt;p&gt;&lt;em&gt;简介
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="Shiro" scheme="http://yoursite.com/tags/Shiro/"/>
    
  </entry>
  
</feed>
