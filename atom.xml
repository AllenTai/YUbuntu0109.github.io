<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>欢迎参观小灰灰的网站哟 ヾ(◍°∇°◍)ﾉﾞ ~</title>
  
  <subtitle>My Personal blog website —— be founded on March 9, 2019</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-06T04:38:16.746Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>黄宇辉</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java web:JSP Model</title>
    <link href="http://yoursite.com/2019/05/05/Java-web-JSP-Model/"/>
    <id>http://yoursite.com/2019/05/05/Java-web-JSP-Model/</id>
    <published>2019-05-05T14:11:44.000Z</published>
    <updated>2019-05-06T04:38:16.746Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-Java-web之JSP-开发模型"><a href="#学习笔记-Java-web之JSP-开发模型" class="headerlink" title="学习笔记 : Java web之JSP 开发模型"></a>学习笔记 : Java web之JSP 开发模型</h2><h3 id="JSP-Model1"><a href="#JSP-Model1" class="headerlink" title="JSP Model1"></a>JSP Model1</h3><p><em>简介 : <code>JSP Model1</code>采用JSP+JavaBean的技术,将页面显示和业务逻辑分开.其中,JSP实现流程控制和页面显示,JavaBean对象封装数据和业务逻辑.这种设计实现了数据,业务逻辑和页面显示的分离,在一定程度上实现了程序开发的模块化,降低了程序修改和维护的难度.</em></p><h4 id="JSP-Model1-案例"><a href="#JSP-Model1-案例" class="headerlink" title="JSP Model1 案例"></a>JSP Model1 案例</h4><p><em>案例描述 : 通过一个简单的网络计算器程序来深化对JSP Model1模型的理解.</em></p><ol><li><p><em>Calculator.java : 封装计算器中的数据,处理业务逻辑.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.jspmodel.model1.calculator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: Calculator</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 封装计算器中的数据及处理业务逻辑</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 5, 2019 10:10:43 AM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Calculator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">char</span> operator;</span><br><span class="line"><span class="keyword">private</span> String firstNumber;</span><br><span class="line"><span class="keyword">private</span> String secondNumber;</span><br><span class="line"><span class="keyword">private</span> Map&lt;String, String&gt; errors = <span class="keyword">new</span> HashMap&lt;String, String&gt;();<span class="comment">// 封装错误信息</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getFirstNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> firstNumber;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirstNumber</span><span class="params">(String firstNumber)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.firstNumber = firstNumber;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSecondNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> secondNumber;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSecondNumber</span><span class="params">(String secondNumber)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.secondNumber = secondNumber;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">getOperator</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> operator;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOperator</span><span class="params">(<span class="keyword">char</span> operator)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.operator = operator;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getErrors</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> errors;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrors</span><span class="params">(Map&lt;String, String&gt; errors)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.errors = errors;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运算操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">caculate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">BigDecimal result = <span class="keyword">null</span>;</span><br><span class="line">BigDecimal firstNum = <span class="keyword">new</span> BigDecimal(firstNumber);</span><br><span class="line">BigDecimal secondNum = <span class="keyword">new</span> BigDecimal(secondNumber);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (operator) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line">result = firstNum.add(secondNum);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'-'</span>:</span><br><span class="line">result = firstNum.subtract(secondNum);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line">result = firstNum.multiply(secondNum);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line"><span class="keyword">if</span> (<span class="string">"0"</span>.equals(secondNumber)) &#123;</span><br><span class="line"><span class="comment">// throw new RuntimeException("除数不能为 0 !");</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">result = firstNum.divide(secondNum);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证表单传入的数据是否合法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">validate</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">Pattern pattern = Pattern.compile(<span class="string">"\\d+"</span>);<span class="comment">// 匹配数字</span></span><br><span class="line"><span class="keyword">if</span> (firstNumber == <span class="keyword">null</span> || <span class="string">""</span>.equals(firstNumber)) &#123;</span><br><span class="line">errors.put(<span class="string">"firstNumberErrorInfo"</span>, <span class="string">"第一个运算数不能为空 !"</span>);</span><br><span class="line">flag = <span class="keyword">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!pattern.matcher(firstNumber).matches()) &#123;</span><br><span class="line">errors.put(<span class="string">"firstNumberErrorInfo"</span>, <span class="string">"第一个运算数必须为数字 !"</span>);</span><br><span class="line">flag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (secondNumber == <span class="keyword">null</span> || <span class="string">""</span>.equals(secondNumber)) &#123;</span><br><span class="line">errors.put(<span class="string">"secondNumberErrorInfo"</span>, <span class="string">"第二个运算数不能为空 !"</span>);</span><br><span class="line">flag = <span class="keyword">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!pattern.matcher(secondNumber).matches()) &#123;</span><br><span class="line">errors.put(<span class="string">"secondNumberErrorInfo"</span>, <span class="string">"第二个运算数必须为数字 !"</span>);</span><br><span class="line">flag = <span class="keyword">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"0"</span>.equals(secondNumber)) &#123;</span><br><span class="line">errors.put(<span class="string">"secondNumberErrorInfo"</span>, <span class="string">"被除数不能为 0 !"</span>);</span><br><span class="line">flag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>calculator.jsp : 显示网络计算机的页面.</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> <span class="attr">import</span>=<span class="string">"java.util.Map"</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:useBean</span> <span class="attr">id</span>=<span class="string">"calculator"</span> <span class="attr">class</span>=<span class="string">"pers.huangyuhui.jspmodel.model1.calculator.Calculator"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:setProperty</span> <span class="attr">property</span>=<span class="string">"*"</span> <span class="attr">name</span>=<span class="string">"calculator"</span>/&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>JSP Model 1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">span&#123;</span></span><br><span class="line"><span class="undefined">font-size:13px;</span></span><br><span class="line"><span class="undefined">color:red;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#main&#123;</span></span><br><span class="line"><span class="undefined">width:600px;</span></span><br><span class="line"><span class="undefined">margin-left: 425px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#main tr&#123;</span></span><br><span class="line"><span class="undefined">height:40px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#main tr td&#123;</span></span><br><span class="line"><span class="undefined">width: 50px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#main tr td input&#123;</span></span><br><span class="line"><span class="undefined">width: 200px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">.buttom &#123;</span></span><br><span class="line"><span class="undefined">text-align: center;</span></span><br><span class="line"><span class="undefined">padding-top: 25px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">.buttom .calculate&#123;</span></span><br><span class="line"><span class="undefined">margin-right: 65px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>JSP Mode 1 : 计算器<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>第一个运算数<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"firstNumber"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>$&#123;errors.firstNumberErrorInfo &#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>运算符<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"operator"</span> <span class="attr">style</span>=<span class="string">"margin-left:65px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"+"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"-"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"*"</span>&gt;</span>*<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"/"</span>&gt;</span>/<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>第二个运算符<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"secondNumber"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>$&#123;errors.secondNumberErrorInfo &#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>运算结果: <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line">Map&lt;String,String&gt; errorInfo = calculator.getErrors();</span><br><span class="line">if(calculator.validate())&#123;</span><br><span class="line">pageContext.getSession().removeAttribute("errors");</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"green"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:getProperty</span> <span class="attr">property</span>=<span class="string">"firstNumber"</span> <span class="attr">name</span>=<span class="string">"calculator"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:getProperty</span> <span class="attr">property</span>=<span class="string">"operator"</span> <span class="attr">name</span>=<span class="string">"calculator"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:getProperty</span> <span class="attr">property</span>=<span class="string">"secondNumber"</span> <span class="attr">name</span>=<span class="string">"calculator"</span>/&gt;</span></span><br><span class="line">= <span class="tag">&lt;<span class="name">%=calculator.caculate()</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">&#125;<span class="attr">else</span>&#123;</span></span><br><span class="line"><span class="tag"><span class="attr">pageContext.getSession</span>()<span class="attr">.setAttribute</span>("<span class="attr">errors</span>",<span class="attr">errorInfo</span>);</span></span><br><span class="line"><span class="tag">&#125;</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buttom"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"calculate"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"计算"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>程序运行效果示例图.</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/05/05/Java-web-JSP-Model/JSPModel1案例-计算器页面.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol><h3 id="JSP-Model2"><a href="#JSP-Model2" class="headerlink" title="JSP Model2"></a>JSP Model2</h3><p><em>简介 : <code>JSP Model2</code>架构模型采用JSP+Servlet+JavaBean技术,其将<code>JSP Model1</code>中JSP页面里的流程控制代码提取出来.封装到Servlet中,从而实现了整个程序页面显示,流程控制和业务逻辑的分离.实际上JSP Model2就是<code>MVC</code>设计模式,其中控制器(<code>Colltroller</code>)的角色由Servlet实现,视图(<code>View</code>)的角色由JSP实现,模型(<code>Model</code>)的角色由JavaBean实现.</em></p><h4 id="JSP-Model2-案例"><a href="#JSP-Model2-案例" class="headerlink" title="JSP Model2 案例"></a>JSP Model2 案例</h4><p><em>案例描述 : 按照<code>JSP Model2</code>的模型思想编写一个用户注册的简单示例程序.</em></p><ol><li><p><em>UserBean.java : 封装用户的注册信息.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.jspmodel.model2.register;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: UserBean</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 封装用户注册信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 5, 2019 4:35:21 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"><span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UserBean</span><span class="params">(String name, String password, String email)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line"><span class="keyword">this</span>.email = email;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> email;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.email = email;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>RegisterFormBean.java : 封装并效验注册表单信息的JavaBean.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.jspmodel.model2.register;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: RegisterFormBean</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 效验注册表单信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 5, 2019 4:37:33 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegisterFormBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"><span class="keyword">private</span> String password2;</span><br><span class="line"><span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储验证表单时发生的错误信息</span></span><br><span class="line"><span class="keyword">private</span> Map&lt;String, String&gt; errors = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">RegisterFormBean</span><span class="params">(String name, String password, String password2, String email)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line"><span class="keyword">this</span>.password2 = password2;</span><br><span class="line"><span class="keyword">this</span>.email = email;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword2</span><span class="params">(String password2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password2 = password2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> email;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.email = email;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取注册信息效验时发生的错误信息</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getErrors</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> errors;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加注册信息效验时发生的错误信息</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrorsMsg</span><span class="params">(String error, String errorMsg)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> ((error) != <span class="keyword">null</span> &amp;&amp; (errorMsg != <span class="keyword">null</span>)) &#123;</span><br><span class="line">errors.put(error, errorMsg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 校验用户注册信息</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">validate</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (name == <span class="keyword">null</span> || name.trim().equals(<span class="string">""</span>)) &#123;</span><br><span class="line">errors.put(<span class="string">"nameErrorInfo"</span>, <span class="string">"请输入用户名 !"</span>);</span><br><span class="line">flag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (password == <span class="keyword">null</span> || password.trim().equals(<span class="string">""</span>)) &#123;</span><br><span class="line">errors.put(<span class="string">"passwordErrorInfo"</span>, <span class="string">"请输入密码 !"</span>);</span><br><span class="line">flag = <span class="keyword">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (password.length() &gt; <span class="number">16</span> || password.length() &lt; <span class="number">6</span>) &#123;</span><br><span class="line">errors.put(<span class="string">"passwordErrorInfo"</span>, <span class="string">"请输入6-12位的密码 !"</span>);</span><br><span class="line">flag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (password != <span class="keyword">null</span> &amp;&amp; !password.equals(password2)) &#123;</span><br><span class="line">errors.put(<span class="string">"password2ErrorInfo"</span>, <span class="string">"两次输入的密码不相同 !"</span>);</span><br><span class="line">flag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (email == <span class="keyword">null</span> || email.trim().equals(<span class="string">""</span>)) &#123;</span><br><span class="line">errors.put(<span class="string">"emailErrorInfo"</span>, <span class="string">"请输入邮箱地址 !"</span>);</span><br><span class="line">flag = <span class="keyword">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!email.matches(<span class="string">"[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+"</span>)) &#123;</span><br><span class="line">errors.put(<span class="string">"emailErrorInfo"</span>, <span class="string">"邮箱地址格式错误 !"</span>);</span><br><span class="line">flag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>DBUtil.java : 访问数据库的辅助类,充当DAO.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.jspmodel.model2.register;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: DBUtil</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 模拟数据库,充当DAO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 5, 2019 4:50:10 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DBUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DBUtil instance = <span class="keyword">new</span> DBUtil();</span><br><span class="line"><span class="keyword">private</span> HashMap&lt;String, UserBean&gt; users = <span class="keyword">new</span> HashMap&lt;String, UserBean&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">DBUtil</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 向数据库中添加一条用户数据</span></span><br><span class="line">UserBean firstUser = <span class="keyword">new</span> UserBean(<span class="string">"YUbuntu0109"</span>, <span class="string">"myPassword"</span>, <span class="string">"Gentleman_0109@outlook.com"</span>);</span><br><span class="line">users.put(<span class="string">"YUbuntu0109"</span>, firstUser);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DBUtil <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取数据库中指定用户名的数据</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> UserBean <span class="title">getUser</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">UserBean user = users.get(userName);</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向数据库中添加新的用户数据</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">insertUser</span><span class="params">(UserBean user)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">String userName = user.getName();</span><br><span class="line"><span class="keyword">if</span> (users.get(userName) != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">users.put(userName, user);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>ControllerServlet.java : 控制器,负责处理用户注册的请求.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.jspmodel.model2.register;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: ColltrollerServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 处理用户注册请求</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 5, 2019 5:01:46 PM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ControllerServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ControllerServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ControllerServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">String name = request.getParameter(<span class="string">"userName"</span>);</span><br><span class="line">String password = request.getParameter(<span class="string">"userPassword"</span>);</span><br><span class="line">String password2 = request.getParameter(<span class="string">"userPassword2"</span>);</span><br><span class="line">String email = request.getParameter(<span class="string">"userEmail"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 效验用户提交的注册表单信息</span></span><br><span class="line">RegisterFormBean registerFormBean = <span class="keyword">new</span> RegisterFormBean(name, password, password2, email);</span><br><span class="line"><span class="keyword">if</span> (!registerFormBean.validate()) &#123;</span><br><span class="line">request.setAttribute(<span class="string">"registerFromBean"</span>, registerFormBean);</span><br><span class="line">request.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(request, response);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储用户注册信息</span></span><br><span class="line">UserBean userBean = <span class="keyword">new</span> UserBean(name, password2, email);</span><br><span class="line"><span class="keyword">if</span> (!DBUtil.getInstance().insertUser(userBean)) &#123;</span><br><span class="line">request.setAttribute(<span class="string">"BDUtilErrorInfo"</span>, <span class="string">"抱歉! 你注册的用户名已存在啦 !"</span>);</span><br><span class="line">request.setAttribute(<span class="string">"registerFromBean"</span>, registerFormBean);</span><br><span class="line">request.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(request, response);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">request.getSession().setAttribute(<span class="string">"userBean"</span>, userBean);</span><br><span class="line">response.getWriter().print(<span class="string">"注册成功啦 ! 三秒后将自动跳转到用户注册信息的页面  !"</span>);</span><br><span class="line">response.setHeader(<span class="string">"refresh"</span>, <span class="string">"3;url=registerInfo.jsp"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>register.jsp : 用户注册页面.</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>JSP Model 2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">h3&#123;</span></span><br><span class="line"><span class="undefined">text-align:center;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#main&#123;</span></span><br><span class="line"><span class="undefined">width:600px;</span></span><br><span class="line"><span class="undefined">margin-left: 450px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#main tr&#123;</span></span><br><span class="line"><span class="undefined">height:40px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#main tr td&#123;</span></span><br><span class="line"><span class="undefined">width: 50px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#main tr td input&#123;</span></span><br><span class="line"><span class="undefined">width: 200px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">span&#123;</span></span><br><span class="line"><span class="undefined">font-size:13px;</span></span><br><span class="line"><span class="undefined">color:red;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">.buttom &#123;</span></span><br><span class="line"><span class="undefined">text-align: center;</span></span><br><span class="line"><span class="undefined">padding-top: 25px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">.buttom .register&#123;</span></span><br><span class="line"><span class="undefined">margin-right: 70px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>用户注册页面<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"ControllerServlet"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userName"</span> <span class="attr">value</span>=<span class="string">"$&#123;registerFromBean.name &#125;"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"> $&#123;registerFromBean.errors.nameErrorInfo &#125;</span><br><span class="line"> $&#123;BDUtilErrorInfo &#125;</span><br><span class="line"> <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"userPassword"</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">$&#123;registerFromBean.errors.passwordErrorInfo &#125;</span><br><span class="line"> <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"userPassword2"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"> $&#123;registerFromBean.errors.password2ErrorInfo &#125;</span><br><span class="line"> <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userEmail"</span> <span class="attr">value</span>=<span class="string">"$&#123;registerFromBean.email &#125;"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"> $&#123;registerFromBean.errors.emailErrorInfo &#125;</span><br><span class="line"> <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buttom"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"register"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>registerInfo.jsp : 用户注册成功页面.</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@taglib</span> <span class="attr">prefix</span>=<span class="string">"c"</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>JSP Model 2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>JSP Mode2 : 用户注册信息<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$&#123;sessionScope.userBean == null  &#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath &#125;/register.jsp"</span>&gt;</span>你还未注册! 请注册哟ヾ(●´∀｀●) ~<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:otherwise</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>你的姓名: $&#123;sessionScope.userBean.name &#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>你的邮箱: $&#123;sessionScope.userBean.email &#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:otherwise</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>程序运行效果示例图.</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/05/05/Java-web-JSP-Model/JSPModel2案例-用户注册页面.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/05/05/Java-web-JSP-Model/JSPModel2案例-用户注册信息页面.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-Java-web之JSP-开发模型&quot;&gt;&lt;a href=&quot;#学习笔记-Java-web之JSP-开发模型&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : Java web之JSP 开发模型&quot;&gt;&lt;/a&gt;学习笔记 : Java web之JS
      
    
    </summary>
    
    
      <category term="Java web" scheme="http://yoursite.com/tags/Java-web/"/>
    
  </entry>
  
  <entry>
    <title>VOA:Critics Praise New and Last Avengers Series Film</title>
    <link href="http://yoursite.com/2019/05/02/VOA-Critics-Praise-New-and-Last-Avengers-Series-Film/"/>
    <id>http://yoursite.com/2019/05/02/VOA-Critics-Praise-New-and-Last-Avengers-Series-Film/</id>
    <published>2019-05-02T14:13:07.000Z</published>
    <updated>2019-05-06T00:23:29.078Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Critics-Praise-New-and-Last-Avengers-Series-Film"><a href="#Critics-Praise-New-and-Last-Avengers-Series-Film" class="headerlink" title="Critics Praise New and Last Avengers Series Film"></a>Critics Praise New and Last Avengers Series Film</h2><p><em>Many movie critics are giving high praise to Avengers: <code>Endgame</code>,the final film in the superhero series from Walt Disney’s Marvel Studios.</em></p><ul><li><em>许多影评人对《复仇者联盟:终局》都给予了高度评价,该电影是华特迪士尼漫威工作室超级英雄系列电影的最后一部.</em></li></ul><p><em>As of Tuesday,all but one of 56 Endgame <code>critiques</code> on the <code>Rotten</code> Tomatoes website <code>were rated as</code> positive.</em></p><ul><li><em>截止到周二,烂番茄网站上出现的56篇有关《终局》的评论中,除了一篇之外 其余都是正面评论.</em></li></ul><p><em>USA Today’s Brain Truitt called the three-hour film “<code>glorious</code>“. He especially praised the time-travel part of the story. He said the movie includes returns to past happenings,which will please fans of superheroes like Iron Man and Thor.</em></p><ul><li><em>《今日美国》的布莱恩·特鲁伊特称这部三个小时的电影”极其壮观”.他特别赞扬了故事中穿越时空的部分.他说,这部电影中出现的对过去发生的事情的回顾,可以取悦像钢铁侠和雷神这样的超级英雄的粉丝.</em></li></ul><p><em>But “it’s also a <code>singular</code> story”,Truitt said.</em></p><ul><li><em>但是,”它也是一个奇艺非凡的故事,”特鲁伊说.</em></li></ul><p><em>The final film begins where last year’s Avengers: <code>Infinity</code> War ended,when several <code>beloved</code> heroes appeared to turn to dust.</em></p><ul><li><em>最后一部电影以去年的《复仇者联盟3:无限战争》结束的地方为开端,当时几位深爱观众喜爱的英雄人物几乎都化为了灰烬.</em></li></ul><p><em>CNN’s Brain Lowry said Endgame is a winning finish.</em></p><ul><li><em>美国广播电视公司的布莱恩·洛瑞表示,《复仇者联盟:终局》是胜利的结束.</em></li></ul><p><em>“The <code>filmmakers</code> have sought to reward <code>movie-goers</code> with a <code>spectacle</code> that’s <code>epic</code> in every way,” Lowry said.</em></p><ul><li><em>“电影制作人试图用史诗般的场面回报电影观众.” 洛瑞说.</em></li></ul><p><em>He alse wrote that there are <code>several</code> real surprises in the movie.and a lot of humor and <code>emotional</code> moments,as well.</em></p><ul><li><em>他还写到,电影中还有一些惊喜,以及很多幽默和令人感动的时刻.</em></li></ul><p><em>A.O.Scott of The New York Times said the movie provides a “sense of an ending,” even though many characters are expected to return in future films.</em></p><ul><li><em>《纽约时报》的斯科特说,这部电影让人们得到一种”结局感”,尽管很多角色都有望在未来的电影中回归.</em></li></ul><p><em>Scott wrote,”We’ve lived with these character and actors playing them for more than 10 years.” He added: “For the most part,it’s nice to see them again,and a little sad to say goodbye.”</em></p><ul><li><em>斯科特写道: “我们和这些角色以及扮演他们的演员生活在一起已经有10多年.” 他补充道: “在很大程度上,在此见到他们很高兴,但说再见时有点伤感.”</em></li></ul><p><em>Esther Zuckerman of Thrillist agrees. “Endgame <code>reinforces</code> that there’s still a beating heart <code>beneath</code> all the machinery,” she wrote.</em></p><ul><li><em>推尔名单网站的埃斯特·祖克曼对此表示赞同.”《终局》强化了一个概念,既所有机器下面仍有一颗跳动的心,” 她写到.</em></li></ul><p><em>Not everyone is pleased with the new film,Barry Herhz of Canada’s Globe and Mail newspaper calls Avengers: Endgame “<code>shockingly</code> boring.”</em></p><ul><li><em>然而,并不是每个人都对这部电影感到满意.加拿大《环球邮报》的巴里·赫兹称《复仇者联盟:终局》”无聊至极.”</em></li></ul><p><em>Movie experts say the film may break records for opening weekend ticket sales in the United States and Canada. That record now stands at $257.7 million,set by Avengers: Infinity War.</em></p><ul><li><em>电影专家表示,这部电影可能会打破美国和加拿大首映周末票房的记录.目前记录是由《复仇者联盟3:无限战争》创下的2.577亿美元.</em></li></ul><p><em>I’m Ashley Thompson.</em></p><h3 id="重点词汇"><a href="#重点词汇" class="headerlink" title="重点词汇"></a>重点词汇</h3><ol><li>critic       <code>(n)</code>       批评家,评论家.</li><li>avenger      <code>(n)</code>       复仇者.</li><li>series       <code>(n)</code>       系列,连续.</li><li>disney       <code>(n)</code>       迪斯尼.</li><li>studio       <code>(n)</code>       工作室.</li><li>endgame      <code>(n)</code>       最后阶段,尾声.</li><li>infinity     <code>(n)</code>       无穷,无限大.</li><li>filmmaker    <code>(n)</code>       电影制作人.</li><li>spectacle    <code>(n)</code>       景象,场面.</li><li>critique    <code>(n)</code>       批评,评论文章.</li><li>rotten      <code>(a)</code>       腐烂的,堕落的.</li><li>glorious    <code>(a)</code>       光荣的,辉煌的.</li><li>singular    <code>(a)</code>       非凡的,单一的.</li><li>beloved     <code>(a)</code>       心爱的,挚爱的.</li><li>epic        <code>(a)</code>       史诗的,叙事诗的.</li><li>emotional   <code>(a)</code>       情绪的,感动人的.</li><li>several     <code>(a)</code>       几个的,各自的.   </li><li>reinforce   <code>(v)</code>       加强,补充.</li><li>beneath     <code>(ad)</code>      在下方.</li><li>shockingly  <code>(ad)</code>      非常地.</li></ol><h3 id="重点短语"><a href="#重点短语" class="headerlink" title="重点短语"></a>重点短语</h3><ol><li>were rated as : 被看做,被评为.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Critics-Praise-New-and-Last-Avengers-Series-Film&quot;&gt;&lt;a href=&quot;#Critics-Praise-New-and-Last-Avengers-Series-Film&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
      <category term="VOA" scheme="http://yoursite.com/tags/VOA/"/>
    
  </entry>
  
  <entry>
    <title>Java web:Cookie and Session</title>
    <link href="http://yoursite.com/2019/05/02/Java-web-Cookie-and-Session/"/>
    <id>http://yoursite.com/2019/05/02/Java-web-Cookie-and-Session/</id>
    <published>2019-05-02T01:33:30.000Z</published>
    <updated>2019-05-02T14:05:57.558Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-Java-web之会话及其会话技术"><a href="#学习笔记-Java-web之会话及其会话技术" class="headerlink" title="学习笔记 : Java web之会话及其会话技术"></a>学习笔记 : Java web之会话及其会话技术</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><em>在Web开发中,服务器跟踪用户信息的技术成为会话技术,它指的是一个客户端(浏览器)与Web服务器之间连续发生的一系列请求和响应的过程.为了保存会话过程中产生的数据,在Servlet技术中,提供了两个用于保存会话数据的对象,分别是<code>Cookie</code>和<code>Session</code>.</em></p><h3 id="Cookie-object"><a href="#Cookie-object" class="headerlink" title="Cookie object"></a>Cookie object</h3><p><em><code>Cooke</code>是一种会话技术,它用于将会话过程中的数据保存到用户的浏览器中,从而使浏览器和服务器可以更好地进行数据交互.Cookie在浏览器和服务器之间的传输过程示例图如下 :</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/05/02/Java-web-Cookie-and-Session/Cookie在浏览器和服务器之间的传输过程.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="Cookie-application"><a href="#Cookie-application" class="headerlink" title="Cookie application"></a>Cookie application</h3><h4 id="显示用户上次访问时间"><a href="#显示用户上次访问时间" class="headerlink" title="显示用户上次访问时间"></a>显示用户上次访问时间</h4><p><em>案例描述 : 当用户请求LastAccessServlet时,服务器会调用<code>HttpServletResponse</code>接口的<code>addCookie(Cookie cookie)</code>方法,该方法会在发送给浏览器的HTTP响应消息中增加一个<code>Set-Cookie</code>头字段,将创建的Cookie对象作为Set-Cookie头字段的值传递给浏览器.示例程序如下 :</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LastAccessServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LastAccessServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LastAccessServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">String lastAccessTime = <span class="keyword">null</span>;<span class="comment">// 最后一次登录的时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取所有cookie,并将其存放到数组中</span></span><br><span class="line">Cookie[] cookies = request.getCookies();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; cookies != <span class="keyword">null</span> &amp;&amp; i &lt; cookies.length; i++) &#123;</span><br><span class="line"><span class="comment">// 如果cookie的名称为lastAccess,则获取其对应的cookie值</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">"lastAccess"</span>.equals(cookies[i].getName())) &#123;</span><br><span class="line">lastAccessTime = cookies[i].getValue();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否存在名称为lastAccess的cookie</span></span><br><span class="line"><span class="keyword">if</span> (lastAccessTime == <span class="keyword">null</span>) &#123;</span><br><span class="line">response.getWriter().println(<span class="string">"the first to visit this page !"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">response.getWriter().println(<span class="string">"the time of last visited : "</span> + lastAccessTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建cookie,并将当前时间作为名为lastAccess的cookie的值</span></span><br><span class="line">String currentTime = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"YYYY-MM-dd—&gt;hh:mm:ss"</span>).format(<span class="keyword">new</span> Date());</span><br><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"lastAccess"</span>, currentTime);</span><br><span class="line"><span class="comment">// 设置Cookie对象在客户端的存活时长,默认值为 -1</span></span><br><span class="line">cookie.setMaxAge(<span class="number">60</span>);</span><br><span class="line"><span class="comment">// 设置该Cookie项的有效目录路径</span></span><br><span class="line">cookie.setPath(<span class="string">"/Cookie-Session_basic"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送cookie到客户端</span></span><br><span class="line">response.addCookie(cookie);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Session-object"><a href="#Session-object" class="headerlink" title="Session object"></a>Session object</h3><p><em><code>Cookie</code>技术可以将用户的信息保存在各自的浏览器中,并且可以在多次请求下实现数据的共享.但是,如果传递的信息比较多,使用Cookie技术显然会增加服务器端程序处理的难度.这时,可以使用<code>Session</code>实现,Session是一种将会话数据保存到服务器端的技术.当浏览器访问Web服务器时,<code>Servlet容器</code>就会创建一个<code>Session对象</code>和<code>ID属性</code>,当客户端后续访问服务器时,只要将标识号传递给服务器,服务器就能判断出该请求是哪个客户端发送的,从而选择与之对应的Session对象为其服务.需要注意的是 : 由于客端户需要接收,记录,回送Session对象的ID,因此,通常情况下,<code>Session是借助Cookie技术来传递ID属性的 !</code></em></p><h4 id="HttpSession-API"><a href="#HttpSession-API" class="headerlink" title="HttpSession API"></a>HttpSession API</h4><p><em>Session是与每个请求消息紧密相关的,HttpServletRequest接口中定义了用于获取Session对象的getSession()方法,该方法有两种重载形式.</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据传递的参数来判断是否创建新的HttpSession对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> HttpSession <span class="title">getSession</span><span class="params">(<span class="keyword">boolean</span> create)</span></span>;</span><br><span class="line"><span class="comment">// 在相关的HttpSession对象不存在时总是创建新的HttpSession对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> HttpSession <span class="title">getSession</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></p><h4 id="Session超时管理"><a href="#Session超时管理" class="headerlink" title="Session超时管理"></a>Session超时管理</h4><p><em>为了解决不再使用的<code>HttpSession</code>对象会在Web服务器中因积累过多从而导致Web服务器内存耗尽的问题,Web服务器采用了<code>超时限制</code>的办法来判断客户端是否还在继续访问.在会话过程中,会话的有效时间可以在<code>web.xml</code>文件中设置,其默认值由Servlet容器定义.如果想使站点内的所有Web应用程序都起作用,可以配置<code>&lt;Tomcat directory&gt;\conf\web.xml</code>文件,如下所示 :</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ==================== Default Session Configuration ================= --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- You can set the default session timeout (in minutes) for all newly --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- created sessions by modifying the value below.                     --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>30<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="Session-application"><a href="#Session-application" class="headerlink" title="Session application"></a>Session application</h3><h4 id="实现购物车"><a href="#实现购物车" class="headerlink" title="实现购物车"></a>实现购物车</h4><p><em>案例描述 : 购物车的的实现流程如下图所示,当用户使用浏览器访问某个网站的图书列表页面时,如果购买某一本书,那么首先会判断书籍是否存在,如果存在就加入购物车,跳转到购物车中所购买图书的列表页,否则,返回图书列表页面.</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/05/02/Java-web-Cookie-and-Session/Session案例-购物车的实现流程图.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ol><li><p><em>Book.java : 用于封装图书的信息.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.session.example.shoppingtrolley;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: Book</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 封装图书的信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 29, 2019 4:52:20 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">(String book_id, String book_name)</span> </span>&#123;</span><br><span class="line">id = book_id;</span><br><span class="line">name = book_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>BookDB.java : 用于模拟保存所有图书的数据库.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.session.example.shoppingtrolley;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: BookDB</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 模拟保存所有图书的数据库</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 29, 2019 4:56:02 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookDB</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, Book&gt; books = <span class="keyword">new</span> LinkedHashMap&lt;String, Book&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line"></span><br><span class="line">books.put(<span class="string">"1"</span>, <span class="keyword">new</span> Book(<span class="string">"1"</span>, <span class="string">"《Java web 入门》"</span>));</span><br><span class="line">books.put(<span class="string">"2"</span>, <span class="keyword">new</span> Book(<span class="string">"2"</span>, <span class="string">"《Java web 进阶》"</span>));</span><br><span class="line">books.put(<span class="string">"3"</span>, <span class="keyword">new</span> Book(<span class="string">"3"</span>, <span class="string">"《Spring》"</span>));</span><br><span class="line">books.put(<span class="string">"4"</span>, <span class="keyword">new</span> Book(<span class="string">"4"</span>, <span class="string">"《Spring MVC》"</span>));</span><br><span class="line">books.put(<span class="string">"5"</span>, <span class="keyword">new</span> Book(<span class="string">"5"</span>, <span class="string">"《MyBatis》"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取所有的图书</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Collection&lt;Book&gt; <span class="title">getall</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> books.values();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据指定的id获取图书</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Book <span class="title">getBook</span><span class="params">(String book_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> books.get(book_id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>ListBookServlet.java : 用于显示所有可购买图书的列表.通过点击”click to buy”链接,便可将指定的图书添加到购物车中.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.session.example.shoppingtrolley;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: ListBookServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 显示所有可购买图书的列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 29, 2019 5:05:12 PM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ListBookServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListBookServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ListBookServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">PrintWriter printWriter = response.getWriter();</span><br><span class="line">Collection&lt;Book&gt; bookInfo = BookDB.getall();</span><br><span class="line"></span><br><span class="line">printWriter.println(<span class="string">"&lt;h3 align='center'&gt;All of book be shown as followed&lt;/h3&gt;&lt;hr/&gt;"</span>);</span><br><span class="line"><span class="keyword">for</span> (Book book : bookInfo) &#123;</span><br><span class="line">String url = <span class="string">"/Cookie-Session_basic/PurchaseServlet?id="</span> + book.getId();</span><br><span class="line">printWriter.println(book.getName() + <span class="string">"&lt;a href=' "</span> + url + <span class="string">" '&gt;click to buy ..&lt;/a&gt;&lt;br&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>PurchaseServlet.java : 功能一: 将用户购买的图书信息保存到Session对象中. 功能二: 在用户购买图书结束后,将页面重定向到用户已经购买的图书列表.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.session.example.shoppingtrolley;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: PurchaseServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 购买图书</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 2, 2019 5:17:54 PM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/PurchaseServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PurchaseServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">PurchaseServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获得用户购买的商品</span></span><br><span class="line">String book_id = request.getParameter(<span class="string">"id"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果book_id为空,重定向到ListBookServlet页面</span></span><br><span class="line"><span class="keyword">if</span> (book_id == <span class="keyword">null</span>) &#123;</span><br><span class="line">response.sendRedirect(<span class="string">"/ListBookServlet"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">Book book = BookDB.getBook(book_id);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建/获取用户的Session对象</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从Session对象中获得用户的购物车</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">List&lt;Book&gt; cart = (List&lt;Book&gt;) session.getAttribute(<span class="string">"cart"</span>);</span><br><span class="line"><span class="keyword">if</span> (cart == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// 首次购买,为用户创建一个购物车( 用List集合模拟购物车 )</span></span><br><span class="line">cart = <span class="keyword">new</span> ArrayList&lt;Book&gt;();</span><br><span class="line"><span class="comment">// 将购物车存入到Session对象中</span></span><br><span class="line">session.setAttribute(<span class="string">"cart"</span>, cart);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将商品放入购物车</span></span><br><span class="line">cart.add(book);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建Cookie存放Session的标识号( 体现了Session是借助Cookie技术来传递ID属性的 )</span></span><br><span class="line">        <span class="comment">// JSeesionID: Tomcat容器对SessionID的称呼</span></span><br><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"JSessionID"</span>, session.getId());</span><br><span class="line">cookie.setMaxAge(<span class="number">60</span> * <span class="number">30</span>);</span><br><span class="line">cookie.setPath(<span class="string">"/Cookie-Session_basic"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重定向到购物车页面</span></span><br><span class="line">response.sendRedirect(<span class="string">"/Cookie-Session_basic/CartServlet"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>CartServlet.java : 展示用户已经购买的图书列表.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.session.example.shoppingtrolley;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: CartServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 展示用户已购买的图书列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 29, 2019 5:30:42 PM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CartServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CartServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CartServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">PrintWriter printWriter = response.getWriter();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引用用户的购物车</span></span><br><span class="line">List&lt;Book&gt; cart = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 标记用户是否买过商品</span></span><br><span class="line"><span class="keyword">boolean</span> purFlag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获得用户的session</span></span><br><span class="line">HttpSession session = request.getSession(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">if</span> (session == <span class="keyword">null</span>) &#123;</span><br><span class="line">purFlag = <span class="keyword">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 获得用户购物车</span></span><br><span class="line">cart = (List&lt;Book&gt;) session.getAttribute(<span class="string">"cart"</span>);</span><br><span class="line"><span class="comment">// 如果用户的购物车为空</span></span><br><span class="line"><span class="keyword">if</span> (cart == <span class="keyword">null</span>) &#123;</span><br><span class="line">purFlag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!purFlag) &#123;</span><br><span class="line">printWriter.println(<span class="string">"Sorry,you don't buy any books ..."</span>);</span><br><span class="line">response.sendRedirect(<span class="string">"/ListServlet"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 显示用户所购买图书的信息</span></span><br><span class="line">printWriter.println(<span class="string">"&lt;h3 align='center'&gt;the book be shown as followed which you had bought&lt;/h3&gt;&lt;hr/&gt;"</span>);</span><br><span class="line"><span class="keyword">for</span> (Book book : cart) &#123;</span><br><span class="line">printWriter.println(book.getName() + <span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="实现用户登录"><a href="#实现用户登录" class="headerlink" title="实现用户登录"></a>实现用户登录</h4><p><em>案例描述 : 当用户进入网站首页时,如果还未登录,则可以通过单击”登录”按钮进入登录界面.在用户登录时,如果用户名及密码正确则登录成功,否则登录失败.登录成功后还可以单击”退出”按钮,回到首页,显示未登录时的界面.用户登录流程图如下所示 :</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/05/02/Java-web-Cookie-and-Session/Session案例-用户登录流程图.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ol><li><p><em>Login.html : 用户登录页面.</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>User login interface<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>Login in<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"LoginServlet"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>User name<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"userpassword"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>  <span class="attr">value</span>=<span class="string">"submit"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>User.java : 封装用户信息.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.session.example.login;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: User</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 封装用户的信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 29, 2019 9:21:28 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String username;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String name, String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.username = name;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.username = username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p><em>IndexServlet.java : 用于显示网站的首界面,如果用户没有登录,那么首界面需要提示用户登录,否则,显示用户已经登录的信息.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/IndexServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">IndexServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建/获取保存用户信息的Session对象</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line"></span><br><span class="line">User user = (User) session.getAttribute(<span class="string">"user"</span>);</span><br><span class="line"><span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">response.getWriter().println(<span class="string">"你还没有登录 ! 请&lt;a href='Login.jsp'&gt;登录&lt;/a&gt;"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">response.getWriter().println(<span class="string">"你已经登录 ! 欢迎你 : "</span> + user.getUsername() + <span class="string">" !"</span>);</span><br><span class="line">String url = <span class="string">"LogoutServlet2"</span>;</span><br><span class="line">response.getWriter().println(<span class="string">"&lt;a href=' "</span> + url + <span class="string">" '&gt;退出&lt;/a&gt;"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建Cookie用于存放Session标识号</span></span><br><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"JSessionID"</span>, session.getId());</span><br><span class="line">cookie.setMaxAge(<span class="number">60</span> * <span class="number">30</span>);</span><br><span class="line">cookie.setPath(<span class="string">"/Cookie-Session_basic"</span>);</span><br><span class="line"></span><br><span class="line">response.addCookie(cookie);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>LoginServlet.java : 用于显示用户登录成功后的界面.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LoginServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">PrintWriter printWriter = response.getWriter();</span><br><span class="line"></span><br><span class="line">String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">String password = request.getParameter(<span class="string">"userpassword"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="string">"YUbuntu0109"</span>.equals(username) &amp;&amp; <span class="string">"demo"</span>.equals(password)) &#123;</span><br><span class="line"><span class="comment">// 传递用户登录信息</span></span><br><span class="line">User user = <span class="keyword">new</span> User(username, password);</span><br><span class="line">request.getSession().setAttribute(<span class="string">"user"</span>, user);</span><br><span class="line">response.sendRedirect(<span class="string">"/Cookie-Session_basic/IndexServlet"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">printWriter.println(<span class="string">"登录失败 ! 用户名或密码错误 ! &lt;a href='Login.html'&gt;重新登录&lt;/a&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>LogoutServlet.java : 用于完成用户注销功能.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LogoutServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LogoutServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将Session对象中的User对象移除</span></span><br><span class="line">request.getSession().removeAttribute(<span class="string">"user"</span>);</span><br><span class="line">response.getWriter().println(<span class="string">"你的账户已成功注销 ! &lt;a href='Login.html'&gt;返回登录页面&lt;/a&gt;"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="利用Session实现一次性验证码"><a href="#利用Session实现一次性验证码" class="headerlink" title="利用Session实现一次性验证码"></a>利用Session实现一次性验证码</h4><p><em>案例描述 : 在实际开发中,为了保证用户信息的安全,都会在网站登录的界面中添加一次性验证码,从而限制不法分子使用软件暴力猜测密码.一次性验证码的功能同样可以使用<code>Session</code>来实现.该案例代码基于上个案例(实现用户登录)进行改写.</em></p><ol><li><p><em>Login.jsp : 用户登录页面.</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Login in<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>User login interface<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"LoginServlet2"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>User name<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userName"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"userPassword"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>verification code<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"verificationCode"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"CheckServlet"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>  <span class="attr">value</span>=<span class="string">"submit"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>CheckServlet.java : 用于生成验证码图片.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.session.example.verifcode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CheckServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckServlet2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> WIDTH = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> HEIGHT = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// set specifying the MIME type of the content</span></span><br><span class="line">response.setContentType(<span class="string">"image/jpeg"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置浏览器勿缓冲此图片</span></span><br><span class="line">response.setHeader(<span class="string">"Pragma"</span>, <span class="string">"No-cache"</span>);</span><br><span class="line">response.setHeader(<span class="string">"Cache-Control"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line">response.setDateHeader(<span class="string">"Expiress"</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取/创建Session对象</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建内存图像并获得其图像上下文</span></span><br><span class="line">BufferedImage bufferedImage = <span class="keyword">new</span> BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_BGR);</span><br><span class="line"><span class="comment">// 绘制图像</span></span><br><span class="line">Graphics graphics = bufferedImage.getGraphics();</span><br><span class="line"><span class="comment">// 产生随机的认证码</span></span><br><span class="line"><span class="keyword">char</span>[] rands = generateCheckCode();</span><br><span class="line"><span class="comment">// 产生图像</span></span><br><span class="line">drawBackground(graphics);</span><br><span class="line">drawRands(graphics, rands);</span><br><span class="line"><span class="comment">// 结束图形的绘制过程</span></span><br><span class="line">graphics.dispose();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将图像输出到客户端</span></span><br><span class="line">ByteArrayOutputStream byteArrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line"><span class="comment">// writes an image using an arbitrary ImageWriterthat supports the given format</span></span><br><span class="line"><span class="comment">// to an OutputStream.</span></span><br><span class="line">ImageIO.write(bufferedImage, <span class="string">"JPEG"</span>, byteArrayOutputStream);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Sets the length of the content body in the response In HTTP servlets,</span></span><br><span class="line"><span class="comment">// this method sets the HTTP Content-Length header.</span></span><br><span class="line"><span class="keyword">byte</span>[] buff = byteArrayOutputStream.toByteArray();</span><br><span class="line">response.setContentLength(buff.length);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将图片写入到Servlet输出流</span></span><br><span class="line">ServletOutputStream servletOutputStream = response.getOutputStream();</span><br><span class="line">byteArrayOutputStream.writeTo(servletOutputStream);</span><br><span class="line">byteArrayOutputStream.close();</span><br><span class="line">servletOutputStream.close();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将当前验证码存放到Session中</span></span><br><span class="line">session.setAttribute(<span class="string">"check_code"</span>, <span class="keyword">new</span> String(rands));</span><br><span class="line"><span class="comment">// 直接使用下述代码将有问题! 因为Session对象必须在提交响应前获得</span></span><br><span class="line"><span class="comment">// request.getSession().setAttribute("check_code", new String(rands));</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成验证码</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">char</span>[] generateCheckCode() &#123;</span><br><span class="line">String chars = <span class="string">"0123456789abcdefghijklmnopqrstuvwxyz"</span></span><br><span class="line">+ <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line"><span class="keyword">char</span>[] rands = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">4</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> rand = (<span class="keyword">int</span>) (Math.random() * (<span class="number">10</span> + <span class="number">26</span> * <span class="number">2</span>));</span><br><span class="line">rands[i] = chars.charAt(rand);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> rands;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制验证码</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawRands</span><span class="params">(Graphics g, <span class="keyword">char</span>[] rands)</span> </span>&#123;</span><br><span class="line">g.setColor(Color.RED);</span><br><span class="line">g.setFont(<span class="keyword">new</span> Font(<span class="string">"Console"</span>, Font.BOLD, <span class="number">25</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在不同的坐标上输出每个字符</span></span><br><span class="line">g.drawString(<span class="string">""</span> + rands[<span class="number">0</span>], <span class="number">10</span>, <span class="number">22</span>);</span><br><span class="line">g.drawString(<span class="string">""</span> + rands[<span class="number">1</span>], <span class="number">30</span>, <span class="number">22</span>);</span><br><span class="line">g.drawString(<span class="string">""</span> + rands[<span class="number">2</span>], <span class="number">50</span>, <span class="number">22</span>);</span><br><span class="line">g.drawString(<span class="string">""</span> + rands[<span class="number">3</span>], <span class="number">70</span>, <span class="number">22</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制图片背景</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawBackground</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 画背景</span></span><br><span class="line">g.setColor(Color.LIGHT_GRAY);</span><br><span class="line">g.fillRect(<span class="number">0</span>, <span class="number">0</span>, WIDTH, HEIGHT);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 随机产生200个干扰点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">200</span>; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> x = (<span class="keyword">int</span>) (Math.random() * WIDTH);</span><br><span class="line"><span class="keyword">int</span> y = (<span class="keyword">int</span>) (Math.random() * HEIGHT);</span><br><span class="line"><span class="keyword">int</span> red = (<span class="keyword">int</span>) (Math.random() * <span class="number">255</span>);</span><br><span class="line"><span class="keyword">int</span> green = (<span class="keyword">int</span>) (Math.random() * <span class="number">255</span>);</span><br><span class="line"><span class="keyword">int</span> blue = (<span class="keyword">int</span>) (Math.random() * <span class="number">255</span>);</span><br><span class="line"></span><br><span class="line">g.setColor(<span class="keyword">new</span> Color(red, green, blue));</span><br><span class="line">g.drawOval(x, y, <span class="number">2</span>, <span class="number">2</span>);<span class="comment">// draws the outline of an oval</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>LoginServlet.java : 对LoginServlet进行修改,增加对验证码的判断.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.session.example.verifcode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LoginServlet2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">PrintWriter printWriter = response.getWriter();</span><br><span class="line"></span><br><span class="line">String name = request.getParameter(<span class="string">"userName"</span>);</span><br><span class="line">String password = request.getParameter(<span class="string">"userPassword"</span>);</span><br><span class="line">String checkCode = request.getParameter(<span class="string">"verificationCode"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 获取Session中的验证码信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String saveCheckCode = (String) request.getSession().getAttribute(<span class="string">"check_code"</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="string">"YUbuntu0109"</span>.equals(name) &amp;&amp; <span class="string">"demo"</span>.equals(password) &amp;&amp; checkCode.equals(saveCheckCode)) &#123;</span><br><span class="line">User user = <span class="keyword">new</span> User(name, password);</span><br><span class="line">request.getSession().setAttribute(<span class="string">"user"</span>, user);</span><br><span class="line">response.sendRedirect(<span class="string">"/Cookie-Session_basic/IndexServlet"</span>);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (checkCode.equals(saveCheckCode)) &#123;</span><br><span class="line">printWriter.println(<span class="string">"登录失败! 用户名或密码 !"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">printWriter.println(<span class="string">"验证码错误 !"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果 : 用户登录页面.</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/05/02/Java-web-Cookie-and-Session/Session案例-实现一次性验证码-用户登录页面.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-Java-web之会话及其会话技术&quot;&gt;&lt;a href=&quot;#学习笔记-Java-web之会话及其会话技术&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : Java web之会话及其会话技术&quot;&gt;&lt;/a&gt;学习笔记 : Java web之会话
      
    
    </summary>
    
    
      <category term="Java web" scheme="http://yoursite.com/tags/Java-web/"/>
    
  </entry>
  
  <entry>
    <title>Java web:Servlet listener</title>
    <link href="http://yoursite.com/2019/05/02/Java-web-Servlet-listener/"/>
    <id>http://yoursite.com/2019/05/02/Java-web-Servlet-listener/</id>
    <published>2019-05-02T01:31:43.000Z</published>
    <updated>2019-05-04T14:31:27.464Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-Java-web之Servlet事件监听器"><a href="#学习笔记-Java-web之Servlet事件监听器" class="headerlink" title="学习笔记 : Java web之Servlet事件监听器"></a>学习笔记 : Java web之Servlet事件监听器</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><em><code>Servlet</code>事件监听器可以监听<code>ServletContext</code>,<code>HttpSession</code>,<code>ServletRequest</code>等域对象的创建和销毁过程,监听这些域对象属性的修改以及感知绑定到HttpSession域中某个对象的状态.根据监听事件的不同可以将其分为三类,具体如下 :</em></p><ol><li><em>用于监听域对象创建和销毁的事件监听器 : ServletContextListener,HttpSessionListener,ServletRequestListener interface</em></li><li><em>用于监听域对象属性增加和删除的事件监听器 : ServletContextAttributeListener,HttpSessionAttributeListener,ServletRequestAttributeListener interface</em></li><li><em>用于监听绑定到HttpSession域中某个对象状态的事件监听器 : HttpSessionBindingListener,HttpSessionActivationListener interface</em></li></ol><h3 id="监听域对象的生命周期"><a href="#监听域对象的生命周期" class="headerlink" title="监听域对象的生命周期"></a>监听域对象的生命周期</h3><p><em>简介 : 在Web应用程序的运行期间,Web容器会创建和销毁三个比较的重要的对象: <code>ServletContext</code>,<code>HttpSession</code>,<code>ServletRequest</code>,这些对象被称为域对象,为了监听这些域对象的生命周期,Servlet API中提供了三个对应的接口: ServletContextListener,HttpSessionListener,ServletRequestListener.</em></p><h4 id="案例-监听域对象的生命周期"><a href="#案例-监听域对象的生命周期" class="headerlink" title="案例-监听域对象的生命周期"></a>案例-监听域对象的生命周期</h4><p><em>示例代码如下所示</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: MyServletListener</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 监听域对象的生命周期</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 3, 2019 3:17:56 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebListener</span>(value=<span class="string">"/MyServletListener"</span>)<span class="comment">//Servlet 3.0</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyServletListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span>, <span class="title">ServletRequestListener</span>, <span class="title">HttpSessionListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent sce)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"ServletContext object be initialized !"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent sce)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"ServletContext object be destroyed !"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">requestInitialized</span><span class="params">(ServletRequestEvent sre)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"ServletRequest object be initialized !"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">requestDestroyed</span><span class="params">(ServletRequestEvent sre)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"ServletRequest object be destroyed !"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionCreated</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"HttpSession object be initialized !"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionDestroyed</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"HttpSession object be destroyed !"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>为了查看HttpSessionListener和ServletRequestListener监听器的运行效果,可以新建一个index.jsp页面,当运行Tomcat服务器第一次访问index.jsp时,Web容器除了为这次请求创建了<code>ServletRequest</code>对象外,还创建了与这个浏览器对应的<code>HttpSession</code>对象,当这两个对象在被创建时,Web容器会调用监听器MyServeltListener中相应的方法,当Web服务器完成这次请求后,<code>ServletRequest对象会随之销毁.</code>需要注意的是: 如果刷新index.jsp页面,会再次触发<code>ServletRequestListener</code>监听器接口中的方法,继而创建新的ServletRequest对象,但不会创建新的HttpSession对象,这是因为<code>Web容器会为每次访问请求创建一个新的ServletRequest对象,而对于同一个浏览器在会话期间的后续访问是不会再创建新的HttpSession对象的.</code></em></p><h4 id="案例-统计当前在线人数"><a href="#案例-统计当前在线人数" class="headerlink" title="案例-统计当前在线人数"></a>案例-统计当前在线人数</h4><p><em>案例描述 : 通常情况下,当一个用户在进入某个网站时服务器就会为其创建一个HttpSessionListener对象,当用户离开网站时HttpSessionListener对象就会别销毁.因此,可以使用实现了<code>HttpSessionListener</code>接口的监听器来统计网站的在线人数.</em></p><ol><li><p><em>login.jsp : 用于显示当前在线人数.</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>HttpSessionListener案例: 统计当前在线人数<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>当前在线人数为: <span class="tag">&lt;<span class="name">%=application.getAttribute("count")%</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%=response.encodeURL("</span><span class="attr">logout.jsp</span>")%&gt;</span>"&gt;退出登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>CountListener.java : 用于统计当前在线人数.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: CountListener</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 统计在线人数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 3, 2019 3:40:59 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebListener</span>(value = <span class="string">"/CountListener"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CountListener</span> <span class="keyword">implements</span> <span class="title">HttpSessionListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> count = <span class="number">0</span>;<span class="comment">// 在线人数</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="comment">// Session对象创建时count++</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionCreated</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class="line">count++;</span><br><span class="line">ServletContext servletContext = se.getSession().getServletContext();</span><br><span class="line">servletContext.setAttribute(<span class="string">"count"</span>, Integer.valueOf(count));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="comment">// Session对象销毁时count--</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionDestroyed</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class="line">count--;</span><br><span class="line">ServletContext servletContext = se.getSession().getServletContext();</span><br><span class="line">servletContext.setAttribute(<span class="string">"count"</span>, Integer.valueOf(count));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>logout.jsp : 用于注销用户登录.</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>HttpSessionListener案例: 统计当前在线人数<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">session.invalidate</span>();// 使当前的<span class="attr">Session</span>失效</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>你已退出本系统<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="监听域对象中的属性变更"><a href="#监听域对象中的属性变更" class="headerlink" title="监听域对象中的属性变更"></a>监听域对象中的属性变更</h3><p><em>简介 : Servlet API 中提供了三个用于监听某个域对象属性变更的接口: <code>ServletContextAttributelistener</code>,<code>HttpSessionAttributerListener</code>和<code>ServletRequestAttributeListener</code>.这三个接口都定义了相同名称的方法,分别用于处理被监听对象属性的增加,删除和替换.</em></p><h4 id="案例-监听域对象的属性变更"><a href="#案例-监听域对象的属性变更" class="headerlink" title="案例-监听域对象的属性变更"></a>案例-监听域对象的属性变更</h4><ol><li><em>attribute.jsp : 设置各个域对象的属性.</em><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>案例:监听域对象的属性变更<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>测试域对象属性信息监听器的页面<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">getServletContext</span>()<span class="attr">.setAttribute</span>("<span class="attr">name</span>", "<span class="attr">YUbuntu0109</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">getServletContext</span>()<span class="attr">.setAttribute</span>("<span class="attr">name</span>", "<span class="attr">https:</span>//<span class="attr">YUbuntu0109.github.io</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">getServletContext</span>()<span class="attr">.removeAttribute</span>("<span class="attr">name</span>");</span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag"><span class="attr">session.setAttribute</span>("<span class="attr">name</span>", "<span class="attr">YUbuntu0109</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">session.setAttribute</span>("<span class="attr">name</span>","<span class="attr">https:</span>//<span class="attr">YUbuntu0109.github.io</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">session.removeAttribute</span>("<span class="attr">name</span>");</span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag"><span class="attr">request.setAttribute</span>("<span class="attr">name</span>", "<span class="attr">YUbuntu0109</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">request.setAttribute</span>("<span class="attr">name</span>", "<span class="attr">https:</span>//<span class="attr">YUbuntu0109.github.io</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">request.removeAttribute</span>("<span class="attr">name</span>");</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol><li><p><em>MyAttributeListener.java : 用于监听各个域对象属性的变更.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: MyAttributeListener</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 监听域对象的属性变更</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 3, 2019 4:18:40 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebListener</span>(<span class="string">"/MyAttributeListener"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAttributeListener</span></span></span><br><span class="line"><span class="class"><span class="keyword">implements</span> <span class="title">ServletContextAttributeListener</span>, <span class="title">HttpSessionAttributeListener</span>, <span class="title">ServletRequestAttributeListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeAdded</span><span class="params">(ServletContextAttributeEvent event)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"ServletContext 添加属性: name="</span> + event.getServletContext().getAttribute(event.getName()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeReplaced</span><span class="params">(ServletContextAttributeEvent event)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"ServletContext 替换属性: name="</span> + event.getServletContext().getAttribute(event.getName()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeRemoved</span><span class="params">(ServletContextAttributeEvent event)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"ServletContext 移除属性: "</span> + event.getName());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeAdded</span><span class="params">(ServletRequestAttributeEvent srae)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"HttpRequest 添加属性: name="</span> + srae.getServletRequest().getAttribute(srae.getName()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeReplaced</span><span class="params">(ServletRequestAttributeEvent srae)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"HttpRequest 替换属性: name="</span> + srae.getServletRequest().getAttribute(srae.getName()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeRemoved</span><span class="params">(ServletRequestAttributeEvent srae)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"HttpRequest 移除属性: "</span> + srae.getName());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeAdded</span><span class="params">(HttpSessionBindingEvent event)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"HttpSession 添加属性: name="</span> + event.getSession().getAttribute(event.getName()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeReplaced</span><span class="params">(HttpSessionBindingEvent event)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"HttpSession 替换属性: name="</span> + event.getSession().getAttribute(event.getName()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeRemoved</span><span class="params">(HttpSessionBindingEvent event)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"HttpSession 移除属性: "</span> + event.getName());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果如下所示.</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ServletContext 添加属性: name=YUbuntu0109</span><br><span class="line">ServletContext 替换属性: name=https://YUbuntu0109.github.io</span><br><span class="line">ServletContext 移除属性: name</span><br><span class="line">HttpSession 添加属性: name=YUbuntu0109</span><br><span class="line">HttpSession 替换属性: name=https://YUbuntu0109.github.io</span><br><span class="line">HttpSession 移除属性: name</span><br><span class="line">HttpRequest 添加属性: name=YUbuntu0109</span><br><span class="line">HttpRequest 替换属性: name=https://YUbuntu0109.github.io</span><br><span class="line">HttpRequest 移除属性: name</span><br></pre></td></tr></table></figure></li></ol><h4 id="案例-统计当前在线人数名单"><a href="#案例-统计当前在线人数名单" class="headerlink" title="案例-统计当前在线人数名单"></a>案例-统计当前在线人数名单</h4><p><em>案例描述 : 在上述<code>统计当前在线人数</code>的案例中,实际上统计的是Web应用当前的所有会话的数目.它无法统计所有所有在线用户的具体名单! 下面我们通过使用<code>HttpSessionBindingListener</code>接口不仅可以统计在线用户的数量,还可以统计在线用户的名单.</em></p><ol><li><p><em>login.jsp : 用户登录页面.</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>案例:统计登录用户的在线名单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>用户登录页面<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"LoginServlet"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"280px"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span> <span class="attr">height</span>=<span class="string">"30"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userName"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span> <span class="attr">height</span>=<span class="string">"30"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>密&amp;nbsp;码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"userPassword"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span> <span class="attr">height</span>=<span class="string">"50"</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>/&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"font-size:13px;color:red"</span>&gt;</span>$&#123;errorMsg &#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>User.java : 封装用户信息.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.servletlistener.example.onlinenumber2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSessionBindingEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSessionBindingListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: User</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 封装用户信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 4, 2019 9:10:47 AM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">HttpSessionBindingListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String id;</span><br><span class="line"><span class="keyword">private</span> String username;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String id, String name, String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line"><span class="keyword">this</span>.username = name;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.username = username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">valueBound</span><span class="params">(HttpSessionBindingEvent event)</span> </span>&#123;</span><br><span class="line"><span class="comment">// System.out.println("将新用户添加到在线名单 : " + event.getName() + "=" + event.getValue());</span></span><br><span class="line">OnlineUser.getInstance().addUser(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">valueUnbound</span><span class="params">(HttpSessionBindingEvent event)</span> </span>&#123;</span><br><span class="line"><span class="comment">// System.out.println("从在线名单中移除该用户 : " + event.getName() + "=" + event.getValue());</span></span><br><span class="line">OnlineUser.getInstance().removeUser(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>OnlineUser.java : 用于存储和获取在线用户列表.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.servletlistener.example.onlinenumber2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: OnlineUser</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 存储及获取在线用户列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 4, 2019 9:14:09 AM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OnlineUser</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">OnlineUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> OnlineUser instance = <span class="keyword">new</span> OnlineUser();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> OnlineUser <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Map&lt;String, String&gt; userMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将用户添加至在线列表</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">userMap.put(user.getId(), user.getUsername());</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将用户从在线列表中移除</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">userMap.remove(user.getId());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回在线的用户列表</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getOnlineUsers</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> userMap;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>LoginServlet.java : 处理用户登录请求.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.servletlistener.example.onlinenumber2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: LoginServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 处理用户登录请求</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 4, 2019 9:30:23 AM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LoginServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">String username = request.getParameter(<span class="string">"userName"</span>);</span><br><span class="line">String password = request.getParameter(<span class="string">"userPassword"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (username != <span class="keyword">null</span> &amp;&amp; !username.trim().equals(<span class="string">""</span>)) &#123;</span><br><span class="line">User user = <span class="keyword">new</span> User(UUID.randomUUID().toString(), username, password);</span><br><span class="line">request.getSession().setAttribute(<span class="string">"user"</span>, user);</span><br><span class="line"></span><br><span class="line">Map&lt;String, String&gt; onlineUsers = OnlineUser.getInstance().getOnlineUsers();</span><br><span class="line">request.setAttribute(<span class="string">"onlineUsers"</span>, onlineUsers);</span><br><span class="line"></span><br><span class="line">request.getRequestDispatcher(<span class="string">"/showOnlineUsers.jsp"</span>).forward(request, response);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">request.setAttribute(<span class="string">"errorMsg"</span>, <span class="string">"用户名不能为空 !"</span>);</span><br><span class="line">request.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>LogoutServlet.java : 注销用户登录信息.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.servletlistener.example.onlinenumber2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: LogoutServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 注销用户登录信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 4, 2019 9:54:27 AM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LogoutServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LogoutServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">request.getSession().removeAttribute(<span class="string">"user"</span>);</span><br><span class="line"></span><br><span class="line">Map&lt;String, String&gt; onlineUsers = OnlineUser.getInstance().getOnlineUsers();</span><br><span class="line">request.setAttribute(<span class="string">"onlineUsers"</span>, onlineUsers);</span><br><span class="line">request.getRequestDispatcher(<span class="string">"/showOnlineUsers.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>showOnlineUsers.jsp : 显示所有用户的登录信息以及当前登录的用户.</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@taglib</span> <span class="attr">prefix</span>=<span class="string">"c"</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>应用案例:统计登录用户的在线名单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>用户在线名单如下所示<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$&#123;sessionScope.user == null &#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath &#125;/login.jsp"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:otherwise</span>&gt;</span></span><br><span class="line">你已成功登录! 欢迎你: $&#123;sessionScope.user.username &#125;</span><br><span class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath &#125;/LogoutServlet"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:otherwise</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">"user"</span> <span class="attr">items</span>=<span class="string">"$&#123;requestScope.onlineUsers &#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">'center'</span>&gt;</span>用户名: $&#123;user.value&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>程序运行效果示例图.</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/05/02/Java-web-Servlet-listener/Servlet事件监听器案例-统计当前在线人数名单.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol><h3 id="感知被HttpSession绑定的事件监听器"><a href="#感知被HttpSession绑定的事件监听器" class="headerlink" title="感知被HttpSession绑定的事件监听器"></a>感知被HttpSession绑定的事件监听器</h3><p><em>暂略写 ..</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-Java-web之Servlet事件监听器&quot;&gt;&lt;a href=&quot;#学习笔记-Java-web之Servlet事件监听器&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : Java web之Servlet事件监听器&quot;&gt;&lt;/a&gt;学习笔记 :
      
    
    </summary>
    
    
      <category term="Java web" scheme="http://yoursite.com/tags/Java-web/"/>
    
  </entry>
  
  <entry>
    <title>Java web:Filter</title>
    <link href="http://yoursite.com/2019/05/02/Java-web-Filter/"/>
    <id>http://yoursite.com/2019/05/02/Java-web-Filter/</id>
    <published>2019-05-02T01:29:12.000Z</published>
    <updated>2019-05-03T04:08:39.473Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-Java-web之过滤器"><a href="#学习笔记-Java-web之过滤器" class="headerlink" title="学习笔记 : Java web之过滤器"></a>学习笔记 : Java web之过滤器</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><em><code>Filter</code>被称作过滤器或者拦截器,作为Servlet 2.3中新增的技术,可以实现用户在访问某个目标资源之前,对访问的请求和响应进行相应处理.其基本功能就是对Servlet容器调用<code>Servlet</code>的过程进行拦截,从而在Servlet响应处理前后实现一些特殊功能. Filter过滤器实现了<code>javax.servlet.Filter</code>接口.在Filter接口中定义了三个方法,其代表Filter的生命周期,如下所示 :</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用于初始化过滤器</span></span><br><span class="line">init(FilterConfig filterConfig);</span><br><span class="line"><span class="comment">// 客户端请求时被调用(Filter所有的工作都集中在此方法中)</span></span><br><span class="line">doFilter(ServletRequest request,ServletResponse response,FilterChain chain);</span><br><span class="line"><span class="comment">// 在Web应用程序卸载时被调用</span></span><br><span class="line">destory();</span><br></pre></td></tr></table></figure></p><h3 id="Filter-annotation"><a href="#Filter-annotation" class="headerlink" title="Filter annotation"></a>Filter annotation</h3><p><em>简介 : <code>Servlet3.0</code>提供<code>@WebFilter注解</code>将一个实现了<code>javax.servlet.Filter</code>接口的类定义为过滤器,继而当我们在Web应用中使用过滤器时无需在web.xml文件中配置Filter映射 !</em></p><h4 id="注解示例-拦截用户的所有请求"><a href="#注解示例-拦截用户的所有请求" class="headerlink" title="注解示例-拦截用户的所有请求"></a>注解示例-拦截用户的所有请求</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(filterName=<span class="string">"/MyFilter"</span> , urlPatterns= <span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    ···</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注解示例-拦截不同方式的访问请求"><a href="#注解示例-拦截不同方式的访问请求" class="headerlink" title="注解示例-拦截不同方式的访问请求"></a>注解示例-拦截不同方式的访问请求</h4><p><em>描述 : 根据被Servlet容器调用的方式来拦截指定的资源.其调用方式如下所示 :</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javax.servlet;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Enumeration of filter dispatcher types.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Servlet 3.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> DispatcherType &#123;</span><br><span class="line">    FORWARD,</span><br><span class="line">    INCLUDE,</span><br><span class="line">    REQUEST,</span><br><span class="line">    ASYNC,</span><br><span class="line">    ERROR</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>下面以<code>FORWARD</code>(如果目标资源是通过<code>RequestDispatcher</code>的<code>forward()</code>方法访问时,该过滤器将会被调用)为例,演示Filter对转发请求的过滤效果.</em></p><ol><li><p><em>ServletTest : 将请求转发给index.jsp页面.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ServletTest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletTest</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ServletTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">request.getRequestDispatcher(<span class="string">"/index.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>FilterTest.java : 拦截index.jsp页面.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Servlet 3.0</span></span><br><span class="line"><span class="meta">@WebFilter</span>(filterName = <span class="string">"/FilterTest"</span>, urlPatterns = <span class="string">"/index.jsp"</span>, dispatcherTypes = &#123; DispatcherType.FORWARD &#125;) </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FilterTest</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">FilterTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">response.getWriter().println(<span class="string">"This is Filter !"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig fConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="FilterConfig-interface"><a href="#FilterConfig-interface" class="headerlink" title="FilterConfig interface"></a>FilterConfig interface</h3><p><em>简介 : 为了获取Filter程序在<code>web.xml</code>中的配置信息,Servlet API提供了一个FilterConfig接口,该接口封装了Filter程序在web.xml中的所有注册信息.并提供了一系列获取这些配置信息的方法.(同时适用于注解的哟 ~)</em></p><h4 id="getInitParameter-String-name"><a href="#getInitParameter-String-name" class="headerlink" title="getInitParameter(String name)"></a>getInitParameter(String name)</h4><p><em>描述 : 下面以接口FilterConfig接口中的<code>getInitParameter(String name)</code>方法为例,演示FilterConfig接口的作用.</em></p><ol><li><p><em>FilterConfigTest.java : 获取注解中指定名称的初始化参数值.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用注解为该Filter设置初始化参数: initParams= &#123;@WebInitParam(name="encoding",value="utf-8")&#125;</span></span><br><span class="line"><span class="meta">@WebFilter</span>(filterName = <span class="string">"/FilterConfigTest"</span>, urlPatterns = <span class="string">"/MyServlet"</span>, initParams = &#123;</span><br><span class="line"><span class="meta">@WebInitParam</span>(name = <span class="string">"encoding"</span>, value = <span class="string">"utf-8"</span>) &#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FilterConfigTest</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">FilterConfig filterConfig;</span><br><span class="line">String characterEncoding = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">FilterConfigTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">characterEncoding = filterConfig.getInitParameter(<span class="string">"encoding"</span>);</span><br><span class="line">response.getWriter().println(<span class="string">"encoding的初始化参数的值为: "</span> + characterEncoding);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig fConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.filterConfig = fConfig;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>FilterConfigTest.java : 获取web.xml中指定名称的初始化参数值(代码同FilterConfigTest.java),web.xml中的配置信息如下 :</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Filter_basic<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>FilterConfigTest<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>pers.huangyuhui.filter.filterconfig.FilterConfigTest<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>gbk2312<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>FilterConfigTest<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/MyServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="Filter-application"><a href="#Filter-application" class="headerlink" title="Filter application"></a>Filter application</h3><h4 id="Filter-实现用户自动登录"><a href="#Filter-实现用户自动登录" class="headerlink" title="Filter 实现用户自动登录"></a>Filter 实现用户自动登录</h4><p><em>案例描述 : 使用Cookie实现用户自动登录后,当客户端访问服务器的Servlet时,所有的Servelt都需要对用户的Cookie信息进行校验,这样势必会导致在Servlet程序中书写大量重复的代码.为了解决这个问题,可以在Filter程序中实现Cookie的校验.由于Filter可以对服务器的所有请求进行拦截,因此,一旦请求通过Filter程序,就相当于用户信息校验通过,然后Servelt程序就可以根据获取到的用户信息实现自动登录功能了.</em></p><ol><li><p><em>User.java : 封装用户的信息.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.filter.example.autologin;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: User</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 封装用户的信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 1, 2019 7:24:26 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String username;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line"><span class="keyword">this</span>.username = username;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.username = username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>login.jsp : 用户登录页面.</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>应用案例 : Filter实现用户自动登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>用户登录页面<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"LoginServlet"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"380px"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span> <span class="attr">height</span>=<span class="string">"30"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userName"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span> <span class="attr">height</span>=<span class="string">"30"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>密&amp;nbsp;码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"userPassword"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span> <span class="attr">height</span>=<span class="string">"40"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>自动登录时间<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"autologin"</span> <span class="attr">value</span>=<span class="string">"$&#123;60*60 &#125;"</span>/&gt;</span>一小时</span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"autologin"</span> <span class="attr">value</span>=<span class="string">"$&#123;60*60*24 &#125;"</span>/&gt;</span>一天</span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"autologin"</span> <span class="attr">value</span>=<span class="string">"$&#123;60*60*24*7 &#125;"</span>/&gt;</span>一周</span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"autologin"</span> <span class="attr">value</span>=<span class="string">"$&#123;60*60*24*31 &#125;"</span>/&gt;</span>一个月</span><br><span class="line"> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span> <span class="attr">height</span>=<span class="string">"50"</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>/&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"font-size:13px;color:red"</span>&gt;</span>$&#123;errorMsg &#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>LoginServlet.java : 处理用户的登录请求.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.filter.example.autologin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: LoginServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 处理用户的登录请求</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 1, 2019 9:38:38 PM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LoginServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">String name = request.getParameter(<span class="string">"userName"</span>);</span><br><span class="line">String password = request.getParameter(<span class="string">"userPassword"</span>);</span><br><span class="line">String autoLogin = request.getParameter(<span class="string">"autologin"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查用户登录信息</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">"YUbuntu0109"</span>.equals(name) &amp;&amp; <span class="string">"demo"</span>.equals(password)) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将用户对象存入session域</span></span><br><span class="line">User user = <span class="keyword">new</span> User(name, password);</span><br><span class="line">request.getSession().setAttribute(<span class="string">"user"</span>, user);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (autoLogin != <span class="keyword">null</span>) &#123;</span><br><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"autologin"</span>, name + <span class="string">"-"</span> + password);<span class="comment">// 加密</span></span><br><span class="line">cookie.setMaxAge(Integer.parseInt(autoLogin));</span><br><span class="line">cookie.setPath(request.getContextPath());</span><br><span class="line">response.addCookie(cookie);<span class="comment">// 发送自动登录的cookie</span></span><br><span class="line">&#125;</span><br><span class="line">response.sendRedirect(<span class="string">"index.jsp"</span>); <span class="comment">// 跳转到首页</span></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">request.setAttribute(<span class="string">"errorMsg"</span>, <span class="string">"提示: 用户名或密码错误 !"</span>);</span><br><span class="line">request.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>LoginServlet.java : 注销用户的登录信息.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.filter.example.autologin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: LogoutServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 注销用户登录的信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 1, 2019 9:47:49 PM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LogoutServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LogoutServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将Session会话中保存的User对象删除</span></span><br><span class="line">request.getSession().removeAttribute(<span class="string">"user"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将自动登录的Cookie删除</span></span><br><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"autologin"</span>, <span class="string">"msg"</span>);</span><br><span class="line">cookie.setPath(request.getContextPath());</span><br><span class="line">cookie.setMaxAge(<span class="number">0</span>);</span><br><span class="line">response.addCookie(cookie);</span><br><span class="line">response.sendRedirect(request.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>AutoLoginFilter.java : 拦截用户登录的访问请求.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.filter.example.autologin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: AutoLoginFilter</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 拦截用户登录的访问请求</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: May 1, 2019 9:51:23 PM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebFilter</span>(filterName = <span class="string">"/AutoLoginFilter"</span>, urlPatterns = <span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AutoLoginFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">AutoLoginFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">HttpServletRequest request2 = (HttpServletRequest) request;</span><br><span class="line">Cookie[] cookies = request2.getCookies();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取一个名为`autologin`的cookie</span></span><br><span class="line">String autoLogin = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; cookies != <span class="keyword">null</span> &amp;&amp; i &lt; cookies.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">"autologin"</span>.equals(cookies[i].getName())) &#123;</span><br><span class="line">autoLogin = cookies[i].getValue();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 验证用户登录信息</span></span><br><span class="line"><span class="keyword">if</span> (autoLogin != <span class="keyword">null</span>) &#123;</span><br><span class="line">String[] parts = autoLogin.split(<span class="string">"-"</span>);</span><br><span class="line">String name = parts[<span class="number">0</span>];</span><br><span class="line">String password = parts[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="string">"YUbuntu0109"</span>.equals(name) &amp;&amp; <span class="string">"demo"</span>.equals(password)) &#123;</span><br><span class="line">                <span class="comment">// 将用户的登录信息封装到User对象并存入Sesssion域中,既而完成自动登录</span></span><br><span class="line">User user = <span class="keyword">new</span> User(name, password);</span><br><span class="line">request2.getSession().setAttribute(<span class="string">"user"</span>, user);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chain.doFilter(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig fConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-Java-web之过滤器&quot;&gt;&lt;a href=&quot;#学习笔记-Java-web之过滤器&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : Java web之过滤器&quot;&gt;&lt;/a&gt;学习笔记 : Java web之过滤器&lt;/h2&gt;&lt;h3 id=&quot;简
      
    
    </summary>
    
    
      <category term="Java web" scheme="http://yoursite.com/tags/Java-web/"/>
    
  </entry>
  
  <entry>
    <title>Java web:请求与响应</title>
    <link href="http://yoursite.com/2019/05/02/Java-web-%E8%AF%B7%E6%B1%82%E4%B8%8E%E5%93%8D%E5%BA%94/"/>
    <id>http://yoursite.com/2019/05/02/Java-web-请求与响应/</id>
    <published>2019-05-02T01:28:42.000Z</published>
    <updated>2019-05-02T04:35:14.130Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-Java-web之请求与响应"><a href="#学习笔记-Java-web之请求与响应" class="headerlink" title="学习笔记 : Java web之请求与响应"></a>学习笔记 : Java web之请求与响应</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><em><code>Servlet</code>最主要的作用就是处理客户端请求,并向客户端做出响应.为此,针对Servlet的每次请求,Web服务器在调用<code>service()</code>之前,都会创建两个对象,分别是: <code>HttpServletRequest</code>和<code>HttpServletResponse</code>.其中HttpServletRequest用于封装HTTP请求消息,简称<code>request</code>对象.HttpServletResponse用于封装HTTP响应消息,简称<code>response</code>对象.下面通过示例图来展示浏览器访问Servlet的交互过程.</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/05/02/Java-web-请求与响应/浏览器访问Servlet的交互过程.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="HttpServletResponse"><a href="#HttpServletResponse" class="headerlink" title="HttpServletResponse"></a>HttpServletResponse</h3><p><em>HttpServletResponse接口继承自<code>ServletResponse</code>,用于封装HTTP响应消息.由于HTTP响应消息分为 : <code>状态行</code>,<code>响应消息头</code>,<code>消息体</code>三部分,因此,在HttpServletResponse接口中定义了向客户端发送响应状态码,响应消息头,响应消息体的方法.</em></p><h3 id="HttpServletResponse-application"><a href="#HttpServletResponse-application" class="headerlink" title="HttpServletResponse application"></a>HttpServletResponse application</h3><h4 id="中文输出乱码问题"><a href="#中文输出乱码问题" class="headerlink" title="中文输出乱码问题"></a>中文输出乱码问题</h4><p><em>由于计算机中的数据都是以二进制形式存储的,因此,当传输文本时,就会发生字符和字节之间的转换.字符与字节之间是通过查码表完成的,将字符转换为字节的过程称为<code>编码</code>,相反称为<code>解码</code>.如果两者使用的码表不一致就会导致乱码问题.可通过以下示例程序中的方法解决此问题.</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/SetCharsetServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SetCharsetServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SetCharsetServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一种解决乱码的方式</span></span><br><span class="line"><span class="comment">// response.setCharacterEncoding("utf-8");</span></span><br><span class="line"><span class="comment">// response.setHeader("Content-Type", "text/html;charset=utf-8");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二种解决乱码的方式</span></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">PrintWriter printWriter = response.getWriter();</span><br><span class="line">printWriter.write(<span class="string">"中文"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="网页定时刷新并跳转"><a href="#网页定时刷新并跳转" class="headerlink" title="网页定时刷新并跳转"></a>网页定时刷新并跳转</h4><p><em>在HTTP中定义了一个<code>Refresh</code>头字段,他可以通知浏览器在指定的时间自动刷新并跳转到其它页面.示例程序如下.</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/SetHeaderServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SetHeaderServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SetHeaderServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现网页的定时刷新并跳转</span></span><br><span class="line">response.setHeader(<span class="string">"Refresh"</span>,<span class="string">"5;URL=https://yubuntu0109.github.io"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="请求重定向"><a href="#请求重定向" class="headerlink" title="请求重定向"></a>请求重定向</h4><p><em>在某些情况下,针对客户端的请求,一个<code>Servlet</code>类可能无法完成全部工作.这时,可以使用请求重定向来完成.所谓的请求重定向,指的是Web服务器接受到客户端的请求后,可能由于某些条件限制,不能访问当前请求URL所指的Web资源,而是指定了一个新的资源路径,让客端户重新发送请求.</em></p><ol><li><p><em>用户登录界面</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>login in<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>User login interface<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"SendRedirectTest"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>User name<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"userpassword"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"login in"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>登录成功页面</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>success<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span> &gt;</span>weclome<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>success to login in !<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>编写处理用户登录请求的Servlet程序</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/SendRedirectServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendRedirectServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SendRedirectServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置编码</span></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用HttpServletRequest对象的getParameter()方法获取用户名及密码</span></span><br><span class="line">String name = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">String password = request.getParameter(<span class="string">"userpassword"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="string">"YUbuntu0109"</span>.equals(name) &amp;&amp; <span class="string">"demo"</span>.equals(password)) &#123;</span><br><span class="line">response.sendRedirect(<span class="string">"Redirection/welcome.jsp"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">response.sendRedirect(<span class="string">"login.jsp"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="HttpServletRequest"><a href="#HttpServletRequest" class="headerlink" title="HttpServletRequest"></a>HttpServletRequest</h3><p><em>HttpServletRequest接口继承自<code>ServletRequest</code>,用于封装HTTP请求消息.由于HTTP请求消息分为 : <code>请求行</code>,<code>请求消息头</code>,<code>请求消息体</code>三部分,因此,在HttpServletRequest接口中定义了获取请求行,请求头,请求消息体的相关方法.</em></p><h3 id="HttpServletRequest-application"><a href="#HttpServletRequest-application" class="headerlink" title="HttpServletRequest application"></a>HttpServletRequest application</h3><h4 id="利用Referer请求头防止盗链"><a href="#利用Referer请求头防止盗链" class="headerlink" title="利用Referer请求头防止盗链"></a>利用Referer请求头防止盗链</h4><p><em>编写一个Servlet类,其负责提供下载内容,但它要求下载请求的链接必须是通过本网站进入的,否则,会将请求转发给下载说明的HTML页面.</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: DownManagerServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 利用`Referer`请求头防止盗链</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 29, 2019 9:41:11 AM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/DownManagerServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownManagerServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DownManagerServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">PrintWriter printWriter = response.getWriter();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取referer头的值: http://localhost:8080/Request-Response_basic/DownManagerServlet</span></span><br><span class="line">String referer = request.getHeader(<span class="string">"referer"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取访问地址</span></span><br><span class="line"><span class="comment">// 由于第一次请求DownManagerServlet时,请求消息中并不包含referer请求头,</span></span><br><span class="line"><span class="comment">// 所以DownManagerServlet会将下载请求转发给了downlaod.html页面</span></span><br><span class="line">String sitePart = <span class="string">"http://"</span> + request.getServerName();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (referer != <span class="keyword">null</span> &amp;&amp; referer.startsWith(sitePart)) &#123;</span><br><span class="line">printWriter.println(<span class="string">"dealing download ..."</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 非法下载请求将跳转到download.html页面</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"HttpServletRequest/download.html"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="请求参数的中文乱码问题"><a href="#请求参数的中文乱码问题" class="headerlink" title="请求参数的中文乱码问题"></a>请求参数的中文乱码问题</h4><p><em>HttpServletRequest接口中,提供了一个<code>setCharacterEncoding()</code>方法,该方法用于设置request对象的解码方式.但该方法只对<code>POST</code>提交方式有效(<code>错误结论</code>),为了解决<code>GET</code>方式提交表单的中文乱码问题,可以首先使用<code>ISO 8859-1</code>将用户名重新编码,然后使用码表GBK进行解码.示例程序略..</em></p><h3 id="RequestDispatcher"><a href="#RequestDispatcher" class="headerlink" title="RequestDispatcher"></a>RequestDispatcher</h3><p><em>当一个Web资源收到客户端的请求后,如果希望服务器通知另外一个资源去处理请求,这时,除了使用<code>sendRedirect()</code>方法实现请求重定向外,还可以通过<code>RequestDispatcher</code>接口的实例对象来实现.在<code>ServletRequest</code>接口中定义了一个获取RequestDispatcher对象的方法.</em></p><ol><li><p><em>获取RequestDispatcher对象的方法</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回封装了某个路径所指资源的RequestDispather对象.其中,参数path必须</span></span><br><span class="line"><span class="comment">// 以'/'开头,用于表示当前Web应用的根目录</span></span><br><span class="line">getRequestDispatcher(String path);</span><br></pre></td></tr></table></figure></li><li><p><em>获取RequestDispatcher对象后,最重要的工作是通知其他Web资源处理当前的Servlet请求,为此,在RequestDispather接口中,定义了两个相关的方法</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 该方法用于将请求从一个Servlet传递给另外的一个Web资源(请求转发)</span></span><br><span class="line"><span class="comment">// 注意: 该方法必须在响应提交给客户端之前被调用,否则抛出IllegalStateException</span></span><br><span class="line">forward(ServletRequests request,ServletResponse response);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法用于将其他的资源作为当前响应内容包含进来</span></span><br><span class="line">include(ServletRequest request,ServletResponse response);</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">### RequestDispatcher applicatoin</span><br><span class="line"></span><br><span class="line">#### forward()实现请求转发</span><br><span class="line">*通过使用`forward()`方法,将当前RequestForwardServlet的请求转发到ResultServlet页面*</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>. *RequestForwardServlet示例程序*</span><br><span class="line">```java</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: RequestForwardServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 请求转发:forword()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 29, 2019 11:07:03 AM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestForwardServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestForwardServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">RequestForwardServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">request.setAttribute(<span class="string">"websiteURL"</span>, <span class="string">"https://yubuntu0109.github.io"</span>);</span><br><span class="line"><span class="comment">// request.getRequestDispatcher("/ResultServlet").forward(request, response);</span></span><br><span class="line">RequestDispatcher requestDispatcher = request.getRequestDispatcher(<span class="string">"/ResultServlet"</span>);</span><br><span class="line">requestDispatcher.forward(request, response);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>ResultServlet示例程序</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: ResultServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 请求转发:forword()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 29, 2019 11:12:47 AM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ResultServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResultServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ResultServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">response.getWriter().println(<span class="string">"&lt;p align='center'&gt;"</span> + <span class="string">"my personal blog website address : "</span></span><br><span class="line">+ request.getAttribute(<span class="string">"websiteURL"</span>) + <span class="string">"&lt;/p&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>页面显示结果</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my personal blog website address : https://yubuntu0109.github.io</span><br></pre></td></tr></table></figure></li></ol><p><em>由结果可知,<code>forward()</code>方法不仅可以实现请求转发,还可以使转发页面和转发到的页面共享数据.需要注意的是: <code>存储在request对象中的数据只对当前请求有效,而对其他请求无效.</code></em></p><h4 id="include-实现请求包含"><a href="#include-实现请求包含" class="headerlink" title="include()实现请求包含"></a>include()实现请求包含</h4><p><em>请求包含指的是使用<code>include</code>方法将Servlet请求转发给其他Web资源进行处理,与请求转发不同的是,在请求包含返回的响应消息中,既包含当前Servlet的响应消息也包含其他Web资源所做出的响应消息.</em></p><ol><li><p><em>编写IncludingServlet程序,其中调用<code>include()</code>方法请求包含IncludedServlet程序.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: IncludingServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 请求包含:include() </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 29, 2019 11:28:25 AM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/IncludingServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IncludingServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">IncludingServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 因为请求IncludingServelt时,用于封装响应消息的HttpServletResponse对象已经创建,该对象在编码时采用的是默认的: ISO 8859-1</span></span><br><span class="line"><span class="comment">// 所以当客户端对接收到的数据进行解码时,Web服务器会继续保持调用HttpServeltResponse对象中的信息,从而使IncludedServlet中</span></span><br><span class="line"><span class="comment">// 的输出内容发生乱码.为解决此问题需在IncludingServlet中提前设置如下编码方式 .</span></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">RequestDispatcher resDispatcher = request.getRequestDispatcher(<span class="string">"/IncludedServelt?name=YUbuntu0109"</span>);</span><br><span class="line">resDispatcher.include(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>IncludedServlet程序</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: IncludedServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 请求包含:include()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 29, 2019 11:33:42 AM</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/IncludedServelt"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IncludedServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">IncludedServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">PrintWriter printWriter = response.getWriter();</span><br><span class="line">printWriter.println(<span class="string">"中文&lt;br&gt;"</span>);</span><br><span class="line">printWriter.println(<span class="string">"user name : "</span> + request.getParameter(<span class="string">"name"</span>) + <span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">printWriter.println(<span class="string">"request.getRequestURI() : "</span> + request.getRequestURI());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>页面显示结果</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">中文</span><br><span class="line">user name : YUbuntu0109</span><br><span class="line">request.getRequestURI() : /Request-Response_basic/IncludingServlet</span><br></pre></td></tr></table></figure></li></ol><p><em>注意: 使用<code>forward()</code>实现请求转发或使用<code>include()</code>方法实现请求包含后,浏览器显示的<code>URL</code>地址是不会变化的 !</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-Java-web之请求与响应&quot;&gt;&lt;a href=&quot;#学习笔记-Java-web之请求与响应&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : Java web之请求与响应&quot;&gt;&lt;/a&gt;学习笔记 : Java web之请求与响应&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="Java web" scheme="http://yoursite.com/tags/Java-web/"/>
    
  </entry>
  
  <entry>
    <title>VOA:Americans`Favorite Thing To Do</title>
    <link href="http://yoursite.com/2019/04/28/VOA-Americans-Favorite-Ting-To-Do/"/>
    <id>http://yoursite.com/2019/04/28/VOA-Americans-Favorite-Ting-To-Do/</id>
    <published>2019-04-28T07:49:03.000Z</published>
    <updated>2019-04-28T13:59:11.331Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Americans’Favorite-Thing-To-Do"><a href="#Americans’Favorite-Thing-To-Do" class="headerlink" title="Americans’Favorite Thing To Do"></a>Americans’Favorite Thing To Do</h2><p><em>Americans’s favorite activity has long been said to be baseball. But a new study by the U.S. government suggests that is not true. The <code>Bureau</code> of <code>Labor</code> <code>Statistics</code> says Americans seem to enjoy watching television more than anything else.</em></p><ul><li><em>美国人最喜欢的运行据说是棒球,但美国政府的一项新研究表明,事实并非如此.美国劳工统计局说,美国人似乎最喜欢看电视.</em></li></ul><p><em>Researchers <code>examined</code> how Americans age 15 and older spent their free time during the years 2013 to 2017. They learned that Americans spend almost three hours every day watching TV.</em></p><ul><li><em>研究人员调查了15岁及以上的美国人在2013年至2017年期间是如何度过空闲时间的.他们了解到美国人每天几乎花三个小时看电视.</em></li></ul><p><em>The activity includes watching movies,recorded program.and live broadcasts.</em></p><ul><li><em>观看的电视内容包括电影,录制节目和现场直播.</em></li></ul><p><em>So who watches television the most? People over the age of 65,researchers found.Older people clock in at more than four and a half hours of television every day.</em></p><ul><li><em>那么哪个群体看电视最多呢? 研究人员发现,是年龄超过65岁的老人,老年人每天去看电视的时间超过四个半小时.</em></li></ul><p><em>Parents with small children spent the least amount of time in front of the tube,as TV is sometimes called.</em></p><ul><li><em>有小孩的父母花在电视机前的时间最少(电视有时也被称为”TV”)</em></li></ul><p><em>Researchers discovered something else,too : Men watch about 30 minutes more television than women each day.</em></p><ul><li><em>研究人员还发现另一件事: 男性平均每天看电视的时间比女性多30分钟.</em></li></ul><p><em>I’m Kelly Jean Kelly.</em></p><h3 id="重点词汇"><a href="#重点词汇" class="headerlink" title="重点词汇"></a>重点词汇</h3><ol><li>bureau       <code>(n)</code>        局,处.</li><li>labor        <code>(n)</code>        劳动,工作.</li><li>statistics   <code>(n)</code>        统计,统计学.</li><li>examine      <code>(v)</code>        检查,调查.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Americans’Favorite-Thing-To-Do&quot;&gt;&lt;a href=&quot;#Americans’Favorite-Thing-To-Do&quot; class=&quot;headerlink&quot; title=&quot;Americans’Favorite Thing To Do&quot;&gt;
      
    
    </summary>
    
    
      <category term="VOA" scheme="http://yoursite.com/tags/VOA/"/>
    
  </entry>
  
  <entry>
    <title>VOA:A Lifetime of Exercise Slows Aging Process</title>
    <link href="http://yoursite.com/2019/04/27/VOA-A-Lifetime-of-Exercise-Slows-Aging-Process/"/>
    <id>http://yoursite.com/2019/04/27/VOA-A-Lifetime-of-Exercise-Slows-Aging-Process/</id>
    <published>2019-04-27T08:20:30.000Z</published>
    <updated>2019-04-28T01:49:49.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="A-Lifetime-of-Exercise-Slows-Aging-Process"><a href="#A-Lifetime-of-Exercise-Slows-Aging-Process" class="headerlink" title="A Lifetime of Exercise Slows Aging Process"></a>A Lifetime of Exercise Slows Aging Process</h2><p><em>From VOA learning English,this is the Health&amp;Lifestyle report.</em></p><ul><li><em>这里是美国之音——健康&amp;生活方式节目.</em></li></ul><p><em>If you have been meaning to add more exercise to your daily <code>routine</code>,you may want to start sooner rather than later.</em></p><ul><li><em>如果你已经打算每天增加点锻炼,或许你应该尽早开始.</em></li></ul><p><em>A 2018 study has found a lifetime of regular exercise and activity can slow down the aging process.</em></p><ul><li><em>2018年的一项研究发现,在人的一生中,定期锻炼和参加活动可以减缓衰老过程.</em></li></ul><p><em>Researchers at Britain’s University of Birmingham and King’s Collage London say that getting older should not necessarily mean becoming more weak or sick. Their research shows that a <code>commitment</code> to a life of <code>movement</code> and exercise my help us live ont only longer,but also healthier.</em></p><ul><li><em>英国伯明翰大学和伦敦国王学院的研究人员说,年龄的增长不一定意味着变得更加虚弱.他们的研究表明,坚持运动和锻炼可以使我们的寿命加长,而且身体会更健康.</em></li></ul><p><em>For their study,the researchers looked at two groups.</em></p><ul><li><em>关于他们的研究,研究人员观察了两个小组.</em></li></ul><p><em>The first group <code>was made up</code> of 125 non-professional cyclists between the ages of 55 to 79. This group included 84 healthy men and 41 healthy women. We will call this group the “cyclists”.</em></p><ul><li><em>第一组由125名年龄在55至79岁之间的非职业自行车手组成.该组包括84名健康男性和41名女性.我们将这个组称为: “自行车运动组.”</em></li></ul><p><em>Researchers then found 130 people to make up a second group. Within this group,75 people were aged 57 to 80. The other 55 were between the ages of 20 and 36. The people in this group were also healthy,but they did not exercise regularly. We will call this group the “non-exercisers”.</em></p><ul><li><em>研究人员随后找了130人组成第二组.在这一组中,有75人年龄在57岁至80岁之间.其他55人年龄在20岁至36岁之间.这一群体的人也很健康,但他们没有定期锻炼.我们将这个小组称为: “非运动组”.</em></li></ul><p><em>Smokers,heavy drinkers of alcohol and people with other health issues were not included in the study.</em></p><ul><li><em>吸烟者,酗酒者以及有其他健康问题的人士未参与此次研究.</em></li></ul><p><em>Then,researchers gave both groups a series of tests. They testd their <code>muscle mass</code>,muscular strength,<code>percentage</code> of body fat,<code>cholesterol</code> levels and the strength of their immune system. And male <code>participants</code> had their <code>testosterone</code> levels checked.</em></p><ul><li><em>然后,研究人员对这两组进行了一系列的测试.他们测试他们的肌肉质量,肌肉力量,身体脂肪的百分比,胆固醇水平和他们的免疫系统的强度.还检查了男性参与者的睾酮水平.</em></li></ul><p><em>The the researchers compared the result of the two groups.</em></p><ul><li><em>然后研究人员比较了两组的结果.</em></li></ul><p><em>Result showed that the cyclists did not experience body changes usually <code>equated</code> with a normal aging process. For example,they did not lose muscle mass or strength. Also,their body fat and cholesterol levels did not increase with age.</em></p><ul><li><em>结果表明,骑自行车的人没有经历身体变化,通常等同于正常的老化过程.例如: 他们的肌肉质量或力量没有减少.此外,他们的身体脂肪和胆固醇指标并没有随着年龄增加而上升.</em></li></ul><p><em>The male cyclists’ testosterone levels had also <code>remained</code> high. Researchers say this may mean that they <code>avoided</code> at least one major <code>symptom</code> of male <code>menopause</code>.</em></p><ul><li><em>男性骑行者的睾酮水平也一直很高.研究人员说: 这可能意味着他们至少避免了男性更年期的一个主要症状.</em></li></ul><p><em>The reseachers also found something they had not expected. The study showed that the <code>immune</code> systems of the cyclists did not seem to age either. For this,they looked at an <code>organ</code> called the <code>thymus</code>. The thymus makes immune cells called T-cells.</em></p><ul><li><em>研究人员还发现他们没有预料的事情.该研究表明,骑自行车的免疫系统似乎也没有老化.为此,他们观察了一个称为胸腺的器官.胸腺制造的免疫细胞称为T细胞.</em></li></ul><p><em>The University of Arizona’s biology department explains on its website that T-cells are a type of white blood cell and are made in our bone <code>marrow</code>.</em></p><ul><li><em>亚利桑那大学生物系在其网站上解释说,T细胞是一种白血球,在我们的骨髓中生成.</em></li></ul><p><em>As the article says: “There are two types of T-cells in your body: Helper T-cells and Killer T-cells. Killer T-cells do the work of destorying the <code>infected</code> cells. The Helper T-cells <code>coordinate</code> the attack.”</em></p><ul><li><em>正如文章所说: “你体内有两种类型的T细胞: 辅助型T细胞和杀伤型T细胞. 杀伤型T细胞的工作是消灭感染的细胞.辅助型T细胞协调攻击.”</em></li></ul><p><em>Starting at about the age of 20,the thymus of most people starts to get smaller. It also starts to make fewer T-cells.</em></p><ul><li><em>从大约20岁开始,大多数人的胸腺开始变小.所产生的T细胞也开始相应的减少.</em></li></ul><p><em>Howerver,in this study,the T-cell production by the thymuses of the cyclists had not slowed down with age. They were making as many T-cells as those of a young person.</em></p><ul><li><em>然而,在这项研究中,骑自行车者的胸腺产生的T细胞没有随着年龄增加而减慢.他们正在制造与年轻人一样多的T细胞.</em></li></ul><p><em>Janet Lord is director of the Institute of <code>Inflammation</code> and Ageing at the University of Birmingham. In a press statement,she offers the words of <code>Hippocrates</code>,often called the “father of medicine.”</em></p><ul><li><em>珍妮特爵士是伯明翰大学炎症和老化研究所所长.在新闻发布会上,她引用了通常被称为”医学之父”的希波克拉底的话.</em></li></ul><p><em>She write: “Hippocrates in 400 BC said that exercise is man’s best medicine,but his message has been lost over time and we are an increasingly <code>sedentary</code> society.”</em></p><ul><li><em>她写到: “公元前400年希波克拉底说: 运动是人类最好的药物,但随着时间的流逝,他的话渐渐被大家所遗忘,我们正处在一个日益就久坐的社会.”</em></li></ul><p><em><code>Professor</code> Stephen Harridge is director of the Center of Human &amp; <code>Aerospace</code> <code>Physiological</code><br>Sciences at King’s College London. He addressed the common question of what came first——the chicken or the egg? In this case,the question became,”Which camej first——the healthy behavior or the good health?”</em></p><ul><li><em>斯蒂芬哈里教授是伦敦国王学院人体与航天生理学中心主任.他解释了一个老生常谈的问题——先有鸡还是先有蛋?在这种情况下,这个问题变成了: “有着健康行为,会有一个健康的身体.还是有了健康的身体才会进行健康的行为.”</em></li></ul><p><em>When talking about the findings of the study,he said “the cyclists do not exercise because they are healthy,but that they are healthy because they have been exercising for such a large <code>portion</code> of their lives.”</em></p><ul><li><em>在谈到这项研究的结果时,他说: “骑自行车的人之所以健康,并不是因为他们身体健康,而是因为他们“在生命的大部分时间里一直在锻炼.”</em></li></ul><p><em>The researchers advise us all to find an exercise that we like and to make physical activity a <code>priority</code> in our lives.</em></p><ul><li><em>研究人员建议我们所有人都要找到自己喜欢的运动,并将身体活动作为我们生活中的优先事项.</em></li></ul><p><em>They published their findings in Aging Cell. The study is part of <code>ongoing</code> research by the two universities.</em></p><ul><li><em>他们在《老龄细胞》发表了他们的研究.这项研究是两所大学正在进行研究的一部分.</em></li></ul><p><em>And that’s the Health&amp;Lifestyle report.</em><br><em>I’m Anna Matteo.</em></p><h3 id="重点词汇"><a href="#重点词汇" class="headerlink" title="重点词汇"></a>重点词汇</h3><ol><li>commitment       <code>(n)</code>       承诺,保证.</li><li>routine          <code>(n)</code>       [计]程序,日常工作.</li><li>movement         <code>(n)</code>       运动,活动.</li><li>muscle           <code>(n)</code>       肌肉,力量.</li><li>mass             <code>(n)</code>       块,团.</li><li>percentage       <code>(n)</code>       百分比,百分率.</li><li>cholesterol      <code>(n)</code>       [生化]胆固醇.</li><li>participant      <code>(n)</code>       参与者,关系者.</li><li>cyclist          <code>(n)</code>       骑自行车的人.</li><li>participant     <code>(n)</code>       参与者.</li><li>testosterone    <code>(n)</code>       睾酮,睾丸素.</li><li>symptom         <code>(n)</code>       症状,征兆.</li><li>menopause       <code>(n)</code>       更年期,活动终止期.</li><li>organ           <code>(n)</code>       器官,机构.</li><li>thymus          <code>(n)</code>       胸腺.</li><li>marrow          <code>(n)</code>       髓,骨髓.</li><li>inflammation    <code>(n)</code>       [病理]炎症.</li><li>Hippocrates     <code>(n)</code>       希波克拉底(希腊的名医-称医药之父)</li><li>professor       <code>(n)</code>       教授,教师.</li><li>aerospace       <code>(n)</code>       航空宇宙.[航]航空航天空间.</li><li>physiological   <code>(n)</code>       生理学的,生理的.</li><li>portion         <code>(n)</code>       部分,一份.</li><li>priority        <code>(n)</code>       优先,优先权.</li><li>equate          <code>(v)</code>       使相等,视为平等.</li><li>remain          <code>(v)</code>       保持,留下,剩余.</li><li>avoid           <code>(v)</code>       避免,避开.</li><li>coordinate      <code>(v)</code>       协调.</li><li>immune          <code>(a)</code>       免疫的.</li><li>infected        <code>(a)</code>       被感染的.</li><li>sedentary       <code>(a)</code>       久坐的,坐惯的.</li><li>ongoing         <code>(a)</code>       不间断的,进行的.</li></ol><h3 id="重点短语"><a href="#重点短语" class="headerlink" title="重点短语"></a>重点短语</h3><ol><li>be made up : 由..组成,被构成.</li><li>equate with : 把..等同,使相等,同等相待.</li><li>at least : 至少</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;A-Lifetime-of-Exercise-Slows-Aging-Process&quot;&gt;&lt;a href=&quot;#A-Lifetime-of-Exercise-Slows-Aging-Process&quot; class=&quot;headerlink&quot; title=&quot;A Lifeti
      
    
    </summary>
    
    
      <category term="VOA" scheme="http://yoursite.com/tags/VOA/"/>
    
  </entry>
  
  <entry>
    <title>文件上传与下载</title>
    <link href="http://yoursite.com/2019/04/26/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8E%E4%B8%8B%E8%BD%BD/"/>
    <id>http://yoursite.com/2019/04/26/文件上传与下载/</id>
    <published>2019-04-26T02:28:32.000Z</published>
    <updated>2019-04-28T04:18:25.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-Java-web之文件的上传与下载"><a href="#学习笔记-Java-web之文件的上传与下载" class="headerlink" title="学习笔记 : Java web之文件的上传与下载"></a>学习笔记 : Java web之文件的上传与下载</h2><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><h4 id="如何实现文件上传"><a href="#如何实现文件上传" class="headerlink" title="如何实现文件上传"></a>如何实现文件上传</h4><p><em><code>Apache</code>组织提供了一个开源组件<code>Commons-FileUpload</code>( 依赖于<code>common-io</code> ),该组件可以方便地将<code>multipart/form-data</code>类型请求中的各种表单解析出来,并实现一个或多个文件的上传,同时也可以限制上传文件的大小等内容..并且性能优异,使用简单. FileUpload组件是通过Servlet来实现文件上传功能的,其工作流程如下图所示.</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/04/26/文件上传与下载/FileUpload.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h4 id="文件上传相关API"><a href="#文件上传相关API" class="headerlink" title="文件上传相关API"></a>文件上传相关<code>API</code></h4><h5 id="FileItem-Interface"><a href="#FileItem-Interface" class="headerlink" title="FileItem Interface"></a>FileItem Interface</h5><p><em><code>FileItem</code>接口用于封装单个表单字段元素的数据,一个表单字段元素对应一个FileItem对象.</em></p><h5 id="DiskFileItemFactory-Class"><a href="#DiskFileItemFactory-Class" class="headerlink" title="DiskFileItemFactory Class"></a>DiskFileItemFactory Class</h5><p><em><code>DiskFileItemFactory</code>类用于将请求的消息实体中的每一个文件封装成单独的<code>FileItem</code>对象.如果上传的文件比较小,将直接保存在内存中,如果上传的文件比较大,则会以临时文件的形式,保存在磁盘的临时文件中,默认情况下,文件保存在内存/磁盘临时文件夹的临界值为10240,既10KB.</em></p><h5 id="ServletFileUpload-Class"><a href="#ServletFileUpload-Class" class="headerlink" title="ServletFileUpload Class"></a>ServletFileUpload Class</h5><p><em><code>ServletFileUpload</code>类是Apache组件处理文件上传的核心高级类,通过使用<code>parseRequest(HttpServletRequest)</code>方法可以将HTML中每个表单提交的数据封装成一个<code>FileItem</code>对象,然后以List列表的形式返回.</em></p><h4 id="文件上传案例"><a href="#文件上传案例" class="headerlink" title="文件上传案例"></a>文件上传案例</h4><ol><li><p><em>JSP页面代码</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>file<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>upload the specified the file<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"UploadServlet2"</span> <span class="attr">method</span>=<span class="string">"post"</span>  <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>照片<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"image"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--</span> 文件上传结果 <span class="attr">--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">result</span> = <span class="string">(String)request.getAttribute(</span>"<span class="attr">result</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">if</span>(<span class="attr">result</span>!=<span class="string">null)&#123;</span></span></span><br><span class="line">out.println("&lt;script&gt;alert(' "+result+" ')&lt;/script&gt;");</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"上传"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>Servlet类 : 获取表单及其上传文件的信息..</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.file.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItem;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileUploadBase.SizeLimitExceededException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileUploadException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.disk.DiskFileItemFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.filefilter.SuffixFileFilter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UploadServlet2"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadServlet2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UploadServlet2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">String message = <span class="string">"上传失败 !"</span>;<span class="comment">// 上传结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// FileItemFactory fileItemFactory = new DiskFileItemFactory();</span></span><br><span class="line">DiskFileItemFactory fileItemFactory = <span class="keyword">new</span> DiskFileItemFactory();</span><br><span class="line">fileItemFactory.setSizeThreshold(<span class="number">1024</span> * <span class="number">1024</span>);<span class="comment">// // 设置将上传的文件以临时文件的形式保存在磁盘的临界值</span></span><br><span class="line"><span class="comment">// 默认情况下,采用的是系统默认的临时文件路径,可以通过该方式获取: System.getProperty("java.io.tmpdir");</span></span><br><span class="line">fileItemFactory.setRepository(<span class="keyword">new</span> File(<span class="string">"D:\\Java web\\temporary files"</span>));<span class="comment">// 将上传的文件以临时文件的形式保存在指定的目录下</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断请求消息中的内容是否是: multipart/form-data类型</span></span><br><span class="line"><span class="keyword">if</span> (ServletFileUpload.isMultipartContent(request)) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件上传的核心高级类</span></span><br><span class="line">ServletFileUpload servletFileUpload = <span class="keyword">new</span> ServletFileUpload(fileItemFactory);</span><br><span class="line">servletFileUpload.setSizeMax(<span class="number">1024</span> * <span class="number">20</span>); <span class="comment">// 设置请求消息实体内容(既上传数据)的最大尺寸限制: 20KB</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 将HTML中每个表单提交的数据封装成一个FileItem对象,然后以List列表的形式返回</span></span><br><span class="line">List&lt;FileItem&gt; fileItems = servletFileUpload.parseRequest(request);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 限制上传的文件类型</span></span><br><span class="line">String[] suffixs = <span class="keyword">new</span> String[] &#123; <span class="string">".exe"</span>, <span class="string">".bat"</span>, <span class="string">".c"</span>, <span class="string">".java"</span>, <span class="string">".sh"</span>, <span class="string">"html"</span>, <span class="string">".css"</span>, <span class="string">".js"</span> &#125;;</span><br><span class="line">SuffixFileFilter suffixFileFilter = <span class="keyword">new</span> SuffixFileFilter(suffixs);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历集合</span></span><br><span class="line">File file = <span class="keyword">null</span>;</span><br><span class="line">String sno = <span class="keyword">null</span>;</span><br><span class="line">String sname = <span class="keyword">null</span>;</span><br><span class="line">String fileName = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">for</span> (FileItem fileItem : fileItems) &#123;</span><br><span class="line">String item = fileItem.getFieldName();</span><br><span class="line"><span class="keyword">if</span> (fileItem.isFormField()) &#123;<span class="comment">// 普通文本表单字段</span></span><br><span class="line"><span class="keyword">if</span> (item.equals(<span class="string">"id"</span>)) &#123;</span><br><span class="line">sno = fileItem.getString();</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (item.contentEquals(<span class="string">"name"</span>)) &#123;</span><br><span class="line">sname = fileItem.getString();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"others value .."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;<span class="comment">// 文件表单字段</span></span><br><span class="line">fileName = fileItem.getName();</span><br><span class="line">file = <span class="keyword">new</span> File(request.getSession().getServletContext().getRealPath(<span class="string">"/upload/"</span> + fileName));</span><br><span class="line"><span class="keyword">if</span> (suffixFileFilter.accept(file)) &#123;</span><br><span class="line">message = <span class="string">"禁止上传此类型文件 !"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">file.getParentFile().mkdirs();<span class="comment">// 创建目录</span></span><br><span class="line">fileItem.write(file);<span class="comment">// 上传文件</span></span><br><span class="line">message = <span class="string">"success to upload !"</span>;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"id: "</span> + sno + <span class="string">"\nname: "</span> + sname + <span class="string">"\nthe file name: "</span> + fileName</span><br><span class="line">+ <span class="string">"\nthe file path: "</span> + file.getAbsolutePath()); <span class="comment">// 上传者及文件信息</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">message = <span class="string">"error : please choose the specified file !"</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SizeLimitExceededException e) &#123;</span><br><span class="line">message = <span class="string">"error : the file size exceeds limit !"</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileUploadException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将提示信息保留在request对象中</span></span><br><span class="line">request.setAttribute(<span class="string">"result"</span>, message);</span><br><span class="line">request.getRequestDispatcher(<span class="string">"upload.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果 : 略..</em></p></li></ol><h3 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h3><h4 id="文件下载程序流程"><a href="#文件下载程序流程" class="headerlink" title="文件下载程序流程"></a>文件下载程序流程</h4><p><em>浏览器通常会直接处理响应的实体内容,这时需要在<code>HTTP</code>响应消息中设置两个响应消息头字段,指定接收程序处理数据内容的方式为下载方式,当点击”下载”超链接时,系统将请求提交到对应的<code>Servlet</code>.在该Servlet中,程序流程如下 :</em></p><ol><li>根据该地址创建文件字节输入流.</li><li>通过该流读取下载文件的内容.</li><li>将读取的内容通过输出流写到目标文件中.</li></ol><ul><li><em><code>HTTP</code>中设置两个响应消息头,具体如下.</em><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设定接收程序处理数据的方式</span></span><br><span class="line">Content-Disposition: attachment;filename=</span><br><span class="line"><span class="comment">//设定实体内容的MIME类型</span></span><br><span class="line">Content-Type: application/x-msdownload</span><br></pre></td></tr></table></figure></li></ul><h4 id="文件下载案例"><a href="#文件下载案例" class="headerlink" title="文件下载案例"></a>文件下载案例</h4><ol><li><p><em>JSP页面代码</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html"</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>down the file<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"DownloadServlet?filename=文件.png"</span>&gt;</span></span><br><span class="line">Click to download this file ..</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>Servlet类 : 设置所要下载的文件以及文件在浏览器中打开的方式.</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.file.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.tomcat.util.codec.binary.Base64;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/DownloadServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownloadServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DownloadServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取需要下载的文件名</span></span><br><span class="line">String fileName = request.getParameter(<span class="string">"filename"</span>);</span><br><span class="line"><span class="comment">// 设定接收程序处理数据的方式( MIME type : application/octet-stream )</span></span><br><span class="line">response.addHeader(<span class="string">"Content-Type"</span>, <span class="string">"application/octet-stream"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 根据不同浏览器进行不同的编码处理,以防乱码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// User-Agent: 首部包含了一个特征字符串,用来让网络协议的对端来识别发起请求的用户代理软件的应用类型、操作系统、软件开发商以及版本号.</span></span><br><span class="line">String agent = request.getHeader(<span class="string">"User-Agent"</span>);</span><br><span class="line"><span class="keyword">if</span> (agent.toLowerCase().indexOf(<span class="string">"firefox"</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">response.addHeader(<span class="string">"Content-Disposition"</span>, <span class="string">"attachment;filename==?UTF-8?B?"</span></span><br><span class="line">+ <span class="keyword">new</span> String(Base64.encodeBase64(fileName.getBytes(<span class="string">"UTF-8"</span>))) + <span class="string">"?="</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 设定实体内容的MIME类型并使用encode(String s, Charset charset)解决乱码问题: Google Chrome,Microsoft Eage ..</span></span><br><span class="line">response.addHeader(<span class="string">"Content-Disposition"</span>, <span class="string">"attachment;filename="</span> + URLEncoder.encode(fileName, <span class="string">"UTF-8"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取文件</span></span><br><span class="line">InputStream inputStream = getServletContext().getResourceAsStream(<span class="string">"/resource/"</span> + fileName);</span><br><span class="line"><span class="comment">// 获取response对象的输出流</span></span><br><span class="line">OutputStream outputStream = response.getOutputStream();</span><br><span class="line"><span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="keyword">while</span> ((len = inputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">outputStream.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">&#125;</span><br><span class="line">outputStream.close();</span><br><span class="line">inputStream.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果 : 略..</em></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-Java-web之文件的上传与下载&quot;&gt;&lt;a href=&quot;#学习笔记-Java-web之文件的上传与下载&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : Java web之文件的上传与下载&quot;&gt;&lt;/a&gt;学习笔记 : Java web之文件
      
    
    </summary>
    
    
      <category term="Java web" scheme="http://yoursite.com/tags/Java-web/"/>
    
  </entry>
  
  <entry>
    <title>JSP 标准标签库</title>
    <link href="http://yoursite.com/2019/04/26/JSP-%E6%A0%87%E5%87%86%E6%A0%87%E7%AD%BE%E5%BA%93/"/>
    <id>http://yoursite.com/2019/04/26/JSP-标准标签库/</id>
    <published>2019-04-26T02:24:15.000Z</published>
    <updated>2019-04-28T07:34:47.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记-Java-web之JSTL"><a href="#学习笔记-Java-web之JSTL" class="headerlink" title="学习笔记 : Java web之JSTL"></a>学习笔记 : Java web之<code>JSTL</code></h2><h3 id="JSTL介绍"><a href="#JSTL介绍" class="headerlink" title="JSTL介绍"></a><code>JSTL</code>介绍</h3><p><em>从<code>JSP 1.1</code>规范开始,JSP就支持使用自定义标签,使用自定义标签大大降低了JSP页面的复杂度.同时增加了代码的<code>重用性</code>.因此市面上出现了许多由不同厂商定制的功能相同的标签,继而导致网页制作者无从选择的问题.为了解决该问题,Sun公司制定了一套标准标签库(<code>Java Server Pages Standard Tag Library</code>),简称<code>JSTL</code>.其为一个JSP标签集合,封装了JSP应用的通用核心功能.</em></p><h3 id="JSTL标签库"><a href="#JSTL标签库" class="headerlink" title="JSTL标签库"></a><code>JSTL</code>标签库</h3><ol><li><em><code>Core</code> : 核心标签库,它包含实现Web应用中通用操作的标签.</em></li><li><em><code>SQL</code> : 数据库标签库,用于访问数据库和对数据库中的数据进行操作的标签.</em></li><li><em><code>XML</code> : 操作XML文档的标签库,它包含对XML文档中的数据进行操作的标签.</em></li><li><em><code>Functions</code> : 函数标签库,提供了一套自定义<code>EL</code>函数,包含<code>JSP</code>网页制作者经常要用到的字符串操作.</em></li></ol><h3 id="JSTL的使用"><a href="#JSTL的使用" class="headerlink" title="JSTL的使用"></a><code>JSTL</code>的使用</h3><p><em>例如 : 测试<code>&lt;c:out&gt;</code>标签,需要使用<code>taglib</code>指令导入<code>Core</code>标签库.代码如下 :</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@taglib</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span> %&gt;</span><br></pre></td></tr></table></figure></p><p><em>在上述代码中,<code>taglib</code>指令的<code>uri</code>属性用于指定引入标签库描述文件中的<code>URL</code>, 其<code>prefix</code>属性用于指定引入标签库描述符文件的前缀.在JSP文件中使用这个标签时都要使用这个前缀.</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记-Java-web之JSTL&quot;&gt;&lt;a href=&quot;#学习笔记-Java-web之JSTL&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : Java web之JSTL&quot;&gt;&lt;/a&gt;学习笔记 : Java web之&lt;code&gt;JSTL&lt;/co
      
    
    </summary>
    
    
      <category term="Java web" scheme="http://yoursite.com/tags/Java-web/"/>
    
  </entry>
  
  <entry>
    <title>VOA:Researchers Find Clues that Depression May Speed Brain Aging</title>
    <link href="http://yoursite.com/2019/04/26/VOA-Researchers-Find-Clues-that-Depression-May-Speed-Brain-Aging/"/>
    <id>http://yoursite.com/2019/04/26/VOA-Researchers-Find-Clues-that-Depression-May-Speed-Brain-Aging/</id>
    <published>2019-04-25T22:51:42.000Z</published>
    <updated>2019-04-28T01:49:08.602Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Researchers-Find-Clues-that-Depression-May-Speed-Brain-Aging"><a href="#Researchers-Find-Clues-that-Depression-May-Speed-Brain-Aging" class="headerlink" title="Researchers Find Clues that Depression May Speed Brain Aging"></a>Researchers Find Clues that Depression May Speed Brain Aging</h2><p><em>Memory and thinking skills naturally slow with age. Scientists are now looking inside living brains to tell if <code>depression</code> might speed aging. The scientists report that some of the signs they have found are worrisome.</em></p><ul><li><em>随着年龄增长,人的记忆力和思维能力也随之减退.科学家正在研究活人大脑的内部情况,以判断抑郁症是否会加速大脑老化.科学家报告称,他们发现一些迹象令人十分担忧.</em></li></ul><p><em>Depression has long been linked to some <code>cognitive</code> problems. Depression late in life even may increase the risk of developing <code>Alzheimer&#39;s disease</code>. Yet how depression might harm the ability to remember things and things and think clearly is not yet known.</em></p><ul><li><em>长期以来,抑郁症就与一些认知障碍相关联.在晚年,抑郁症甚至可能增加患增加<code>阿尔兹海默病</code>的风险.而然,关于抑郁症会如何损害记忆力及清晰的思维能力,目前尚不清楚.</em></li></ul><p><em>One pssibility : Brain cells communicate by sending messages across connections called <code>synapses</code>. Generally,good <code>cognition</code> is linked to more and stronger synapses. With a weakening of congnitive ability,those connections slowly <code>shrink</code> and die. But unitl recently,scientists could count synapses only in brain <code>tissue</code> collected after the person dies.</em></p><ul><li><em>一种可能是: 脑细胞间通过被称为突触的连接进行交流.一般来说,良好的认知能力表明突触数量多且强健.随着认知能力的退化,突触会慢慢萎缩并消亡.但直到最近,科学家还仅能通收集逝者的大脑组织来计算出突触的数量.</em></li></ul><p><em>Yale University scientists used a new method to study the brains of living people. They discovered that patients with depression had a lower <code>density</code> of synapses than healthy people of the same age.</em></p><ul><li><em>耶鲁大学科学家采用了一种新方法来研究活人的大脑.他们发现,抑郁症患者的突触密度比同龄的健康人群要低.</em></li></ul><p><em>The lower the density,the more <code>severe</code> the signs of depression. Yele University <code>neuroscientist</code> Irna Esterlis says this is especially true of problems with loss of interest in activities patients once enjoyed. She spoke at a meeting of the American <code>Association</code> for the Advancement of Science.</em></p><ul><li><em>突触密度越低,患抑郁症的迹象越严重.耶鲁大学神经学家伊琳娜·埃斯特曾在美国科学促进会的一次会议发言上说: 病人对曾经喜欢的活动失去兴趣的问题尤其如此.</em></li></ul><p><em>Esterlis was not studying just older adults,but people of all ages,including those too young for any <code>cognitive</code> changes to be noticeable. She was working from a <code>theory</code> that early damage can <code>build up</code>.</em></p><ul><li><em>埃斯特里并不仅仅是在研究老年人,而是所有年龄段的人群,包括那些非常年轻,无法注意到任何认知变化的人群.她的研究建立在”早起伤害会不断积累”这一理论上.</em></li></ul><p><em>“We think depression might be accelerating the normal <code>aging</code>,”she said.</em></p><ul><li><em>她说: “我们认为抑郁症可能正加速正常衰老.”</em></li></ul><p><em>Her studies are small. To prove if depression really does increase the risk of <code>cognitive</code> problem as we age would require more <code>investigation</code>. Jovier Evans is a scientist with the U.S. National Institute of Mental Health. He proposed a study of <code>synaptic</code> density on larger numbers of people as they get older,to see if and how it changes over time in those with and without depression.</em></p><ul><li><em>她进行的是小型研究.要证明随着年龄的增长,抑郁症确实会增加认知障碍的风险需要进行更多的调查.乔维尔·埃文斯是美国国家心理健康研究所的科学家.他提出一项研究: 针对更多的人群,研究他们随着年龄的增长,突触密度的变化,以此来判断在那些患抑郁症和无抑郁症的人群中,随着时间的推移,突触密度是否改变以及如何改变.</em></li></ul><p><em>Eaterlis has announced plans for a larger study to do that. Volunteers would be injected with a <code>radioactive</code> <code>substance</code> that <code>links up</code> to a protein in the <code>vesicles</code>,or storage containers,used by synapses. Then each volunteer would be given an imaging test,known as a PET scan. During the test,areas with synapses light up,enabling researchers to see how many are in different parts of the brain.</em></p><ul><li><em>埃斯特里已宣布要进行大规模对的研究计划.志愿者将注射放射性物质,该物质与囊泡中的蛋白质或突触使用的储存容器相连.然后,每位志愿者将进行影像检查,也就是PET扫描.检查期间,突触区域会亮起来,这样研究人员就能够看到大脑的不同部位有多少突触.</em></li></ul><p><em>Esterlis said there are no medications that <code>target</code> synapse damage.</em></p><ul><li><em>埃斯特里表示目前没有专门治疗突触损伤的药物.</em></li></ul><p><em>Doctor Mary Sano directs the Mount Sinai Alzheimer’s Disease Research Center in New York. She was not <code>involved in</code> the new research.</em></p><ul><li><em>玛丽·萨诺医生是纽约西奈山阿尔茨海默病研究中心的负责人.她没有参与这项新研究.</em></li></ul><p><em>Sano warned that normal cognitive aging is <code>complex</code> process that involves other health problems,such as heart disease. It might be that depression does not worsen synaptic weakening. It could just makes the problem more noticeable,she said.</em></p><ul><li><em>萨诺提醒说,正常的认知衰退是个复杂的过程,设计其他健康问题,比如心脏病.也有可能抑郁症不会加速突触退化.她说,抑郁症可能只是让问题更显而易见.</em></li></ul><p><em>With depression “at any age,there’s a hit on the brain. At an older age hit may be more visible because there may already be some loss,” she explained.</em></p><ul><li><em>患抑郁症 “在任何年纪,都会对大脑造成伤害.对较大年纪的人群而言,这种伤害可能更明显,因为他们的大脑可能已有一些损伤.”</em></li></ul><p><em>I’m Ashley Thompson.</em></p><h3 id="重点词汇"><a href="#重点词汇" class="headerlink" title="重点词汇"></a>重点词汇</h3><ol><li>cognition        <code>(n)</code>       认识,认识能力.</li><li>depression       <code>(n)</code>       抑郁症,精神忧郁.</li><li>Alzheimer        <code>(n)</code>       阿尔茨海默病.</li><li>synapse          <code>(n)</code>       突触.</li><li>tissue           <code>(n)</code>       组织.</li><li>density          <code>(n)</code>       密度.</li><li>neuroscientist   <code>(n)</code>       神经系统科学家.</li><li>association      <code>(n)</code>       协会,联盟.</li><li>theory           <code>(n)</code>       理论,原理.</li><li>aging           <code>(n)</code>       老化,陈化.</li><li>investigation   <code>(n)</code>       调查,调查研究.</li><li>substance       <code>(n)</code>       物质,实质.</li><li>vesicle         <code>(n)</code>       泡,囊.</li><li>target          <code>(n)</code>       目标,指标.</li><li>accelerate      <code>(a)</code>       加速,加快.</li><li>visible         <code>(a)</code>       看的见得.  </li><li>severe          <code>(a)</code>       严峻的,严厉的.</li><li>noticeable      <code>(a)</code>       显著的,显而易见的.</li><li>cognitive       <code>(a)</code>       认知的,认识的.</li><li>synaptic        <code>(a)</code>       突触的.</li><li>radioactive     <code>(a)</code>       [核]放射性的,有辐射的.</li><li>complex         <code>(a)</code>       复杂的,合成的.</li><li>shrink          <code>(v)</code>       收缩,畏缩.</li></ol><h3 id="重点短语"><a href="#重点短语" class="headerlink" title="重点短语"></a>重点短语</h3><ol><li>build up : 增进,加强.</li><li>link up : 会合,连接.</li><li>involved in : 参与,涉及.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Researchers-Find-Clues-that-Depression-May-Speed-Brain-Aging&quot;&gt;&lt;a href=&quot;#Researchers-Find-Clues-that-Depression-May-Speed-Brain-Aging
      
    
    </summary>
    
    
      <category term="VOA" scheme="http://yoursite.com/tags/VOA/"/>
    
  </entry>
  
  <entry>
    <title>JSP 自定义标签</title>
    <link href="http://yoursite.com/2019/04/25/JSP-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2019/04/25/JSP-自定义标签/</id>
    <published>2019-04-25T03:26:47.000Z</published>
    <updated>2019-04-25T13:39:56.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JSP-自定义标签"><a href="#JSP-自定义标签" class="headerlink" title="JSP 自定义标签"></a>JSP 自定义标签</h2><h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><ol><li>什么是<code>JSP</code>自定义标签?<br><em>自定义标签可以有效地将HTML代码与Java代码分类,从而使不懂Java编程的HTLML设计人员也可以编写出功能强大的JSP页面.JSP复规范中定义了多个用于开发自定义标签的接口和类,它们都位于<code>javax.servlet.jsp.tagext</code>包中,这些接口和类的继承关系如下所示.</em></li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/04/25/JSP-自定义标签/java-servlet-jsp-tagext.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ol start="2"><li>标签分类<br><em>在<code>JSP2.0</code>之前,所有的标签都需要实现<code>Tag</code>接口,这样的标签称为: <code>传统标签( javax.servlet.jsp.tagext.Tag )</code>. 后来为了简化标签的开发,JSP2.0规范又定义了一种新类型的标签,称为<code>简单标签( javax.servlet.jsp.tagext.SimpleTag )</code></em></li></ol><h3 id="自定义标签的开发步骤"><a href="#自定义标签的开发步骤" class="headerlink" title="自定义标签的开发步骤"></a>自定义标签的开发步骤</h3><ol><li><p>编写标签处理器<br><em><code>Tag</code>接口和<code>SimpleTag</code>接口定义了JSP页面与标签处理器类之间的通信规则.如果JSP引擎在编译JSP页面时遇到了自定义标签,<code>传统标签</code>将会调用标签处理器的<code>doStartTag()</code>方法,简单标签将会调用标签处理器类的<code>doTag()</code>方法.</em></p></li><li><p>编写标签库描述符文件<br><em>要想让JSP引擎在遇到自定义标签时,能找到其所对应的标签处理器,还必须编写是一个标签描述符( <code>Tag Library Descriptor</code> )文件.简称: <code>TLD</code>文件.</em></p></li></ol><ul><li><em>注意: 自定义标签的根标签(<code>&lt;taglib&gt;</code>)使用的是schema约束.其标签内容可以从 : <code>&lt;Tomcat安装目录&gt;\webapps\examples\WEB-INF\jsp2\jsp2-example-taglib.tld</code>中复制即可.</em> </li></ul><ol start="3"><li>在JSP页面导入和使用自定义标签<br><em>TLD文件编写完成后,就可以在JSP文件中使用自定义标签.在使用自定义标签之前,首先需要使用<code>taglib</code>指令来引入TLD文件.</em></li></ol><h3 id="传统标签"><a href="#传统标签" class="headerlink" title="传统标签"></a>传统标签</h3><ol><li><code>Tag</code> 接口</li></ol><p><em>Tag接口定义了JSP页面与标签处理器之前的通信规则,当JSP容器将JSP页面翻译成Servlet源文件时,如果遇到JSP标签,会创建标签处理器类的实例对象.然后依次调用标签处理器的如下方法.</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setPageContext() ——&gt; setParent() ——&gt; doStartTag() ——&gt; doEndTag() ---&gt; release()</span><br></pre></td></tr></table></figure></p><ol start="2"><li><code>IterationTag</code> 接口</li></ol><p><em>在自定义标签的开发过程中,其可以对标签体的内容进行重复处理.</em></p><ul><li><em><code>TagSupport</code>类实现了该接口,简化了程序的编写.</em></li></ul><ol start="3"><li><code>BodyTag</code> 接口</li></ol><p><em>在实现自定义标签时,其可以根据需要对标签体的内容进行处理后再向浏览器输出.</em></p><h4 id="案例-实现一个传统自定义标签"><a href="#案例-实现一个传统自定义标签" class="headerlink" title="案例-实现一个传统自定义标签"></a>案例-实现一个<code>传统</code>自定义标签</h4><p><em>描述 : 开发一个显示IP地址的自定义标签</em></p><ol><li><p>编写完成标签功能的标签处理器类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.tag.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.TagSupport;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: IpTag</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 传统标签处理器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 25, 2019 4:06:28 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IpTag</span> <span class="keyword">extends</span> <span class="title">TagSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">8446674958888389920L</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doStartTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException </span>&#123;</span><br><span class="line"></span><br><span class="line">String IP = pageContext.getRequest().getRemoteAddr();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">pageContext.getOut().write(<span class="string">"访问用户的IP地址为 : "</span> + IP);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">super</span>.doStartTag();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写TLD文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">version</span>=<span class="string">"2.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 标签库的版本号 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 标签库的名称 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">short-name</span>&gt;</span>TraditionalTag<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 标签库的URI --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uri</span>&gt;</span>https://yubuntu0109.github.io<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 注册一个自定义的标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定自定义标签的注册名称 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>ipTag<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定标签的标签处理器类 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>pers.huangyuhui.tag.handler.IpTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定标签的类型 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body-content</span>&gt;</span>empty<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写JSP文件,并导入和使用自定义标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--</span> 导入自定义的标签库描述符文件 <span class="attr">--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@taglib</span> <span class="attr">uri</span>=<span class="string">"https://yubuntu0109.github.io"</span> <span class="attr">prefix</span>=<span class="string">"yu"</span> %&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>测试自定义标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">yu:ipTag</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="简单标签"><a href="#简单标签" class="headerlink" title="简单标签"></a>简单标签</h3><ol><li><code>SimpleTag</code> 接口</li></ol><p><em>SimpleTag接口中的方法和传统标签中定义的签名有所区别,但是功能却基本一致,例如: 都实现了给<code>标签处理器</code>传递<code>pageContext</code>对象和父标签处理器对象的功能.而且<code>JSP容器</code>执行简单标签处理器的顺序也和执行传统标签处理器的顺序一致.简单标签处理器的执行流程如下所示:</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JSP容器实例化标签处理器类 ——&gt; setJspContext() ——&gt; setParent() ——&gt; 设置属性的setter方法 ——&gt; setJspBody() ——&gt; doTag()</span><br></pre></td></tr></table></figure></p><ol start="2"><li><code>JspFragment</code> 类</li></ol><p><em>JSP容器在处理简单标签时,会把标签体内容用一个JspFragment对象表示,并调用标签处理器对象的setJspBody()方法将JspFragment对象传递给标签处理器对象,标签开发者可以根据需要调用JspFragment对象的方法来决定是否输出标签体,或者循环多次输出标签体等.其中JspFragment的<code>invoke(Write out)</code>方法是简单标签开发中最重要的一个方法,它用于控制如何执行标签体的内容.</em></p><ol start="3"><li><code>SimpleTagSupport</code> 类</li></ol><p><em>该类实现了<code>SimpleTagSupport</code>接口,继而使得简单标签处理器的编写变得简化.</em></p><h4 id="案例-实现一个自定义简单标签"><a href="#案例-实现一个自定义简单标签" class="headerlink" title="案例-实现一个自定义简单标签"></a>案例-实现一个自定义简单标签</h4><p><em>描述 : 自定义简单标签,实现重复执行标签体的功能.</em></p><ol><li><p>编写标签处理器类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.tag.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.JspFragment;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: SimpleIterate</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 简单标签处理器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 24, 2019 4:52:19 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleIterate</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> num;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNum</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.num = num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="comment">// 对标签进行逻辑处理</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 获取标签体</span></span><br><span class="line">JspFragment jspFragment = <span class="keyword">this</span>.getJspBody();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">jspFragment.invoke(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>编写简单标签库描述符文件</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">version</span>=<span class="string">"2.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 标签库的版本号 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 标签库的名称 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">short-name</span>&gt;</span>SimpleTag<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 标签库的URI --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uri</span>&gt;</span>/SimpleTag<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注册一个自定义的标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>simpleIterate<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>pers.huangyuhui.tag.handler.SimpleIterate<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body-content</span>&gt;</span>scriptless<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 用于描述自定义标签的属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定属性的名称 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>num<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定在JSP页面调用自定义标签时是否必须设置这个属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写JSP文件,并导入和使用自定义标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@taglib</span> <span class="attr">uri</span>=<span class="string">"/SimpleTag"</span>  <span class="attr">prefix</span>=<span class="string">"yu"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>测试自定义标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">yu:simpleIterate</span> <span class="attr">num</span>=<span class="string">"5"</span>&gt;</span></span><br><span class="line">Hello SimpleTag !<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">yu:simpleIterate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="案例-模拟JSTL的-lt-c-choose-gt-lt-c-when-gt-lt-c-otherwise-gt-标签"><a href="#案例-模拟JSTL的-lt-c-choose-gt-lt-c-when-gt-lt-c-otherwise-gt-标签" class="headerlink" title="案例-模拟JSTL的&lt;c:choose&gt;,&lt;c:when&gt;,&lt;c:otherwise&gt;标签"></a>案例-模拟<code>JSTL</code>的&lt;c:choose&gt;,&lt;c:when&gt;,&lt;c:otherwise&gt;标签</h4><p><em>描述 : 通过模仿<code>JSTL</code>核心标签库中的&lt;c:choose&gt;,&lt;c:when test=””&gt;,&lt;c:otherwise&gt;标签,开发一套自己的标签 :  <code>&lt;yu:choose&gt;</code>,<code>&lt;yu:when test=&quot;&quot;&gt;</code>,<code>&lt;yu:otherwise&gt;</code></em></p><ol><li><p><em>编写标签<code>&lt;yu:choose&gt;</code>的标签处理器类 : ChooseTag.java</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.tag.handler.choose;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: ChooseTag</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 标签处理器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 24, 2019 5:15:53 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChooseTag</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 作为标识符用于控制&lt;yu:when&gt;和&lt;yu:otherwise&gt;的标签体是否执行</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> flag;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFlag</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFlag</span><span class="params">(<span class="keyword">boolean</span> flag)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.flag = flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.getJspBody().invoke(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>编写标签<code>&lt;yu:when test=&quot;&quot;&gt;</code>的标签处理器类 : WhenTag.java</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.tag.handler.choose;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspTagException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.JspTag;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: WhenTag</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 标签处理器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 24, 2019 5:19:01 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WhenTag</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用于接收标签中`test`属性传入的值</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> test;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTest</span><span class="params">(<span class="keyword">boolean</span> test)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.test = test;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获得父类标签对象</span></span><br><span class="line">JspTag tag = <span class="keyword">this</span>.getParent();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断父标签是否为: ChooseTag</span></span><br><span class="line"><span class="keyword">if</span> (!(tag <span class="keyword">instanceof</span> ChooseTag)) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> JspTagException(<span class="string">"ERROR : OUT OF CHOOSE TAG"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将父类标签对象强转成`ChooseTag`类型</span></span><br><span class="line">ChooseTag chooseTag = (ChooseTag) tag;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断`WhenFlag`为true且父标签中的`flag`为false时执行该标签体</span></span><br><span class="line"><span class="keyword">if</span> (test &amp;&amp; !(chooseTag.isFlag())) &#123;</span><br><span class="line"><span class="keyword">this</span>.getJspBody().invoke(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行完标签体后,将父标签中的`flag`置为true,防止其它嵌套标签体继续执行</span></span><br><span class="line">chooseTag.setFlag(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>编写<code>&lt;yu:otherwise&gt;</code>的标签体处理器类 : OtherwiseTag.java</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.tag.handler.choose;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspTagException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.JspTag;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: OtherwishTag</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 标签处理器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 24, 2019 5:46:33 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OtherwiseTag</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获得父标签对象</span></span><br><span class="line">JspTag jspTag = <span class="keyword">this</span>.getParent();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断父标签是否是: ChooseTag</span></span><br><span class="line"><span class="keyword">if</span> (!(jspTag <span class="keyword">instanceof</span> ChooseTag)) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> JspTagException(<span class="string">"ERROR : OUT OF CHOOSE TAG"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将父类标签对象强转成`ChooseTag`类型</span></span><br><span class="line">ChooseTag chooseTag = (ChooseTag) jspTag;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断父标签中的`flag`为false时,执行该标签体</span></span><br><span class="line"><span class="keyword">if</span> (!chooseTag.isFlag()) &#123;</span><br><span class="line"><span class="keyword">this</span>.getJspBody().invoke(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行完标签体后,将父标签中的`flag`置为true,防止其它嵌套标签体继续执行</span></span><br><span class="line">chooseTag.setFlag(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>编写<code>TLD</code>文件</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">version</span>=<span class="string">"2.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>模拟JSTL的choose,when,otherwish标签<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">short-name</span>&gt;</span>SimpleTag<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uri</span>&gt;</span>https://yubuntu0109.github.io<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- choose tag --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>choose<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>pers.huangyuhui.tag.handler.choose.ChooseTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body-content</span>&gt;</span>scriptless<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- when tag --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>when<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>pers.huangyuhui.tag.handler.choose.WhenTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body-content</span>&gt;</span>scriptless<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">注意: 属性名一定要和该标签的处理器类中的属性名一致 !</span></span><br><span class="line"><span class="comment">否则抛出异常:  Unable to find setter method for attribute: xxx ..</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>test<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rtexprvalue</span>&gt;</span>true<span class="tag">&lt;/<span class="name">rtexprvalue</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- otherwise tag --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>otherwise<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>pers.huangyuhui.tag.handler.choose.OtherwiseTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body-content</span>&gt;</span>scriptless<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>编写两个JSP文件,对三个自定义标签进行测试.</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>测试自定义标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>请选择你热爱的运动哟 (づ￣3￣)づ╭❤～<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"choose_when_otherwise.jsp"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span>  <span class="attr">name</span> = <span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"badminton"</span>/&gt;</span>羽毛球</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span>  <span class="attr">name</span> = <span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"footall"</span>/&gt;</span>足球</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span>  <span class="attr">name</span> = <span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"basketball"</span>/&gt;</span>篮球</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span>  <span class="attr">name</span> = <span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"others"</span>/&gt;</span>其它<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--</span> 导入自定义的标签库描述符文件 <span class="attr">--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@taglib</span> <span class="attr">uri</span>=<span class="string">"https://yubuntu0109.github.io"</span>  <span class="attr">prefix</span>=<span class="string">"yu"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>测试自定义标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">yu:choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">yu:when</span> <span class="attr">test</span>=<span class="string">"$&#123;param.hobby=='badminton' &#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>你热爱的运动是: 羽毛球<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">yu:when</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">yu:when</span> <span class="attr">test</span>=<span class="string">"$&#123;param.hobby=='footall' &#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>你热爱的运动是: 足球<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">yu:when</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">yu:when</span> <span class="attr">test</span>=<span class="string">"$&#123;param.hobby=='basketball' &#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>你热爱的运动是: 篮球<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">yu:when</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">yu:otherwise</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>哎哟 ~ 难道你只会coding ! ヾ(◍°∇°◍)ﾉﾞ<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">yu:otherwise</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">yu:choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;JSP-自定义标签&quot;&gt;&lt;a href=&quot;#JSP-自定义标签&quot; class=&quot;headerlink&quot; title=&quot;JSP 自定义标签&quot;&gt;&lt;/a&gt;JSP 自定义标签&lt;/h2&gt;&lt;h3 id=&quot;入门&quot;&gt;&lt;a href=&quot;#入门&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="JSP" scheme="http://yoursite.com/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>VOA:5 Habits of Very Successful People</title>
    <link href="http://yoursite.com/2019/04/25/VOA-5-Habits-of-Very-Successful-People/"/>
    <id>http://yoursite.com/2019/04/25/VOA-5-Habits-of-Very-Successful-People/</id>
    <published>2019-04-25T02:08:13.000Z</published>
    <updated>2019-04-25T14:06:53.457Z</updated>
    
    <content type="html"><![CDATA[<h2 id="5-Habits-of-Very-Successful-People"><a href="#5-Habits-of-Very-Successful-People" class="headerlink" title="5 Habits of Very Successful People"></a>5 Habits of Very Successful People</h2><p><em>From VOA Learning English,this is Health&amp;Lifestyle report.</em></p><ul><li><em>欢迎收听VOA慢速英语健康及生活方式报道.</em></li></ul><p><em>Having success and being able to meet one’s goals requires knowledge,a sense of direction,hard work and resources. Some people might add to that list luck,connections and <code>perhaps</code> a strong belief in yourself.</em></p><ul><li><em>获得成功以及达到某人的目标需要知识,方向感,努力付出和资源.一些人也许会将幸运,关系和自信加入其中.</em></li></ul><p><em>We accomplish our goals one step at a time,doing a little each day. So,using your day effectively is important.</em></p><ul><li><em>我们一步步完成自己的目标,每天完成一点.所以高效率地过好每天很重要.</em></li></ul><p><em>On many websites——from Forbes <code>magazine</code> and Fast Commpany to health and physical fitness sites——<code>productivity</code> experts share advice on how to achieve your career and life goals. Most of the experts agree on one thing: Starting your day on the right foot is most important.</em></p><ul><li><em>很多网站上,从福布斯杂志,快递公司到健康网站,专家都分享如何能够实现职业和生活目标的建议.很多专家都同意一点: 每一天开一个好头最重要.</em></li></ul><p><em>Collected from these websites,here are five ideas on how to start your day <code>off right</code>.</em></p><ul><li><em>根据这些网站整理出五点,关于如何做到开门大吉.</em></li></ul><ol><li>Get up an hour early.</li></ol><ul><li><em>第一: 早起一小时.</em></li></ul><p><em>People who get up early in the morning have a jump on the day. For starters,they’s awake! And some studies show that our <code>willpower</code> and attention <code>span</code> are strongest in the morning. In fact,the morning may be the most <code>productive</code> part of your day.</em></p><ul><li><em>早起的人们在那一天就已经领先一步.首先,他们已经清醒了.一些研究显示,我们的意志力和注意力在早上最集中.事实上,早晨可能是你一天当中效率最高的时候.</em></li></ul><p><em>In American English,we like to say,”The early bird gets the <code>worm</code>.” Here,if you’re a bird,the worm is the reward. So,this expression means that people who rise up early have a head start and,therefore,are more likely to succeed.</em></p><ul><li><em>在美式英语中,我们喜欢说: “早起的鸟儿有虫吃.” 如果你是一只鸟,虫子就是你早起的回报.这个表达是指早起的人们捷足先登,因此更可能成功.</em></li></ul><p><em><code>Inventor</code>,<code>philosopher</code> and writer Benjamin Franklin would probably agree. Americans like to use Franklin’s <code>memorable</code> expressions. One of them is “Early to bed,early to rise,makes a man healthy,wealthy and wise.”</em></p><ul><li><em>发明家,哲学家及作家的本杰明·富兰克林可能会同意这一点.美国人喜欢引用富兰克林的经典语录.其中一条是: “早睡早起会让人聪明,富有及智慧.”</em></li></ul><p><em>Of course,there are exceptions. People who are “night <code>owls</code>“ do their best work and their best thinking at night.</em></p><ul><li><em>当然也有例外.”夜猫子”型的人在晚上的工作效率最高.思维最活跃.</em></li></ul><ol start="2"><li>Drink a glass of with lemon juice.</li></ol><ul><li><em>第二: 喝一杯柠檬水.</em></li></ul><p><em>While your coffee is being prepared or waiting for your tea water to heat up,drink a glass of water with lemon juice.</em></p><ul><li><em>当你在煮咖啡或蒸茶时,先喝一杯柠檬水.</em></li></ul><p><em>Why? Health experts say that drinking a <code>combination</code> of lemon juice and water first thing in the morning jump-starts the body’s <code>metabolism</code>. Not only does it jump start your body’s cells,but this kind keeps them moving throughout the day.</em></p><ul><li><em>为什么呢? 健康专家表示,早上先喝一杯柠檬会激活身体的新陈代谢.不仅会激活你身体的细胞,还会让这些细胞整天保持运转.</em></li></ul><ol start="3"><li>Don’t answer emial or jump into social media as soon as you get up.</li></ol><ul><li><em>第三: 一起床不要先回邮件或查看社交媒体.</em></li></ul><p><em>Your coffee or tea is ready. So,you decide to look at your email quickly or open up your Facebook account. Well,don’t. This is a great way to forget about the day ahead.</em></p><ul><li><em>你的咖啡或茶煮好了.你决定先快速浏览一遍邮件或打开你的社交账户.不要这么做.这会让你忘记这是全新的一天.</em></li></ul><p><em>We’ve all done it. You see a Facebook post from a friend you haven’t seen in a long time. He is angry about some <code>political</code> issue and the heated discussion pulls you in. Before you know it,an hour has passed,you’re angry with <code>lawmakers</code> and it’s not even nine in the morning yet! You hurry out the door so as not to be later for work. This is not the best way to start your day.</em></p><ul><li><em>我们都这么做过.你看到很久不见的朋友发了一条状态.他对某个政治问题感到很气愤,然后拉你进入热烈的讨论.不知不觉中,一个小时过去了,你对立法者感到很生气,这时早上还不到九点.你为了避免上班迟到而急匆匆地冲出门外.这绝不是开启一天的最佳方式.</em></li></ul><ol start="4"><li>Exercise !</li></ol><p><em>Some people may disagree with this one. Exercising in the morning may not be for everyone. Some people like to exercise after work or at night.</em></p><ul><li><em>一些人可能不同意.在早上锻炼并不适合所有人.一些人喜欢下班后或晚上锻炼.</em></li></ul><p><em>Physical fitness experts and trainers often suggest some form of exercise in the morning because the middle of the day is busy time for most people. By the day’end,you may not have the time or energy to exercise. How many times have you finished work and said to yourself. “I’m too tired to exercise! I’ll do it tomorrow.”</em></p><ul><li><em>健身专家和教练通常会建议在早上做一些形式的运动,因为白天对大多数人来说就是最繁忙的时候.白天结束后,你可能就没有时间或精力去运动了.有多少次你下班后告诉自己: “我太累了,不能再锻炼了,明天再去锻炼吧!”</em></li></ul><p><em>Exercising in the morning prevents that from happening.</em></p><ul><li><em>在早上锻炼可以防止这一点.</em></li></ul><ol start="5"><li>Think about your day…at night.</li></ol><ul><li><em>第五,在晚上思考你白天做的事情.</em></li></ul><p><em><code>Meditate</code>,<code>visualize</code>——whatever you call it——take time at the day to think back on all the things that have happened. Give thanks,if you want. And spend a little time to think about tomorrow. Some people who talk about “living in the present” may <code>criticize</code> this. But it may help you to prepare if you take a few minutes to think about what you need to do the next day.</em></p><ul><li><em>冥想,思考——无论你将其称为什么—— 一天结束前花点时间想想今天发生过的事.感恩这一天.然后花点时间想想明天.一些坚持”活在当下”的人可能会批判这一点.但如果你能花几分钟想想第二天需要做些什么,可能会帮助你提前进行准备继而提高效率.</em></li></ul><p><em>Also,know that your day will probably change. You probably won’t have time to do everything you planned. But that’s fine. If you did one thing, that means you are one step closer in reaching one of your goals. And if you follow this advise,at least you’ve already gotten your exercise <code>out of the way !</code></em></p><ul><li><em>同时要知道,这一天也许会发生某些变化,你也许没有时间做完你所计划的所有的事,但这也没关系.如果你做完一件事,就离你完成这个目标近了一步.如果你遵循这些建议,至少你不会忘了锻炼.</em></li></ul><p><em>And that’s the Health&amp;Lifestyle report.</em><br><em>I’m Anna Matteo.</em></p><h3 id="重点词汇"><a href="#重点词汇" class="headerlink" title="重点词汇"></a>重点词汇</h3><ol><li>willpowr         <code>(n)</code>           意志力,毅力.</li><li>perhaps          <code>(n)</code>           假定,猜想.</li><li>magazine         <code>(n)</code>           杂志.</li><li>productivity     <code>(n)</code>           生产力,生产率,生产能力.</li><li>willpower        <code>(n)</code>           意志力,毅力.</li><li>owl              <code>(n)</code>           猫头鹰,惯于晚上活动的人.</li><li>span             <code>(n)</code>           跨度,跨距,范围.</li><li>worm             <code>(n)</code>           虫,蠕虫.</li><li>inventor        <code>(n)</code>           发明家,[专利]发明人.</li><li>philosopher     <code>(n)</code>           哲学家,哲人.</li><li>lawmaker        <code>(n)</code>           立法者.</li><li>combination     <code>(n)</code>           结合,组合.</li><li>metabolism      <code>(n)</code>           [生理]新陈代谢.</li><li>memorable       <code>(a)</code>           显著的,难忘的,值得纪念的.</li><li>political       <code>(a)</code>           政治的,党派的.</li><li>meditate        <code>(v)</code>           考虑,计划,冥想.</li><li>visualize       <code>(v)</code>           形象,想像,设想.</li><li>criticize       <code>(v)</code>           批评,评论,苛求.  </li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;5-Habits-of-Very-Successful-People&quot;&gt;&lt;a href=&quot;#5-Habits-of-Very-Successful-People&quot; class=&quot;headerlink&quot; title=&quot;5 Habits of Very Success
      
    
    </summary>
    
    
      <category term="VOA" scheme="http://yoursite.com/tags/VOA/"/>
    
  </entry>
  
  <entry>
    <title>详解Java对象的引用及赋值</title>
    <link href="http://yoursite.com/2019/04/23/%E8%AF%A6%E8%A7%A3Java%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BC%95%E7%94%A8%E5%8F%8A%E8%B5%8B%E5%80%BC/"/>
    <id>http://yoursite.com/2019/04/23/详解Java对象的引用及赋值/</id>
    <published>2019-04-23T10:21:00.000Z</published>
    <updated>2019-04-23T14:16:50.974Z</updated>
    
    <content type="html"><![CDATA[<h2 id="细节-详解Java中对象的引用及赋值"><a href="#细节-详解Java中对象的引用及赋值" class="headerlink" title="细节 : 详解Java中对象的引用及赋值"></a>细节 : 详解<code>Java</code>中对象的引用及赋值</h2><h3 id="问题引入"><a href="#问题引入" class="headerlink" title="问题引入"></a>问题引入</h3><ol><li><em>前言</em></li></ol><p><em>前些天学习数据结构与算法时特意写了一篇名为<code>详解Linked-list的实现方式及其应用</code>的文章,其中<code>循环链表</code>的代码中就淋漓尽致地体现了Java中<code>对象</code>的引用与赋值</em></p><ol start="2"><li><p><em>循环链表的实现</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.linkedlist;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: CircularLinkedList</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 操作循环链表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 16, 2019 7:25:36 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CircularLinkedList</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get the length of the circular linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLength</span><span class="params">(ListNode&lt;T&gt; headNode)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">while</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">currentNode = currentNode.getNext();</span><br><span class="line">length++;</span><br><span class="line"><span class="keyword">if</span> (currentNode == headNode) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// traverse the node of the circular linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">traverseNode</span><span class="params">(ListNode&lt;T&gt; headNode)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"\n### [headNode]-address : "</span> + headNode + <span class="string">"\n"</span>);</span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">while</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.print(currentNode.getData() + <span class="string">" -&gt; "</span>);</span><br><span class="line">currentNode = currentNode.getNext();</span><br><span class="line"><span class="keyword">if</span> (currentNode == headNode) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(<span class="string">"headNode("</span> + currentNode.getData() + <span class="string">")\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// add new node at the tail of linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertAtListTail</span><span class="params">(ListNode&lt;T&gt; headNode, ListNode&lt;T&gt; newNode)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">while</span> (currentNode.getNext() != headNode) &#123;</span><br><span class="line"><span class="comment">//// 注意: 由于`currentNode`无变化,导致`currentNode.getNext() != headNode`继而进入进入死循环 !////</span></span><br><span class="line"><span class="comment">// currentNode.setNext(currentNode.getNext());</span></span><br><span class="line">currentNode = currentNode.getNext();</span><br><span class="line">&#125;</span><br><span class="line">newNode.setNext(newNode);</span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">headNode = newNode;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">newNode.setNext(headNode);</span><br><span class="line">currentNode.setNext(newNode);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// add new node at the header of linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ListNode&lt;T&gt; <span class="title">insertAtListHeader</span><span class="params">(ListNode&lt;T&gt; headNode, ListNode&lt;T&gt; newNode)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">while</span> (currentNode.getNext() != headNode) &#123;</span><br><span class="line">currentNode = currentNode.getNext();<span class="comment">// 尾节点</span></span><br><span class="line">&#125;</span><br><span class="line">newNode.setNext(newNode);<span class="comment">// 指针指向自身</span></span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">headNode = newNode;</span><br><span class="line">&#125;</span><br><span class="line">newNode.setNext(headNode);</span><br><span class="line">currentNode.setNext(newNode);</span><br><span class="line"><span class="comment">// 注意: 此时链表头结点已更新! 所以应该返回更新后的头节点继而避免遍历时出现死循环!!!</span></span><br><span class="line">headNode = newNode;</span><br><span class="line"><span class="keyword">return</span> headNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// add the new node by the specified index</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ListNode&lt;T&gt; <span class="title">insertNodeByIndex</span><span class="params">(ListNode&lt;T&gt; headNode, ListNode&lt;T&gt; newNode, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"Error: the circular list is empty !"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == <span class="number">1</span>) &#123;</span><br><span class="line">insertAtListHeader(headNode, newNode);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == getLength(headNode)) &#123;</span><br><span class="line">insertAtListTail(headNode, newNode);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line">ListNode&lt;T&gt; temp = headNode;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; position - <span class="number">1</span>; i++) &#123;</span><br><span class="line">temp = currentNode;<span class="comment">// 待插节点的前节点</span></span><br><span class="line">currentNode = currentNode.getNext();<span class="comment">// 待插节点</span></span><br><span class="line">&#125;</span><br><span class="line">temp.setNext(newNode);</span><br><span class="line">newNode.setNext(currentNode);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> headNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// delete the last node</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteLastNode</span><span class="params">(ListNode&lt;T&gt; headNode)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">ListNode&lt;T&gt; temp = headNode;</span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Error: the circular list is empty !"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (currentNode.getNext() != headNode) &#123;</span><br><span class="line">temp = currentNode; <span class="comment">// 尾节点的前一个节点</span></span><br><span class="line">currentNode = currentNode.getNext();</span><br><span class="line">&#125;</span><br><span class="line">temp.setNext(headNode);</span><br><span class="line">currentNode = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// delete the header node</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ListNode&lt;T&gt; <span class="title">deleteHeaderNode</span><span class="params">(ListNode&lt;T&gt; headNode)</span> </span>&#123;</span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Error: the circular list is empty !"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (currentNode.getNext() != headNode) &#123;</span><br><span class="line"><span class="comment">// currentNode.setNext(currentNode.getNext());//死循环</span></span><br><span class="line">currentNode = currentNode.getNext();</span><br><span class="line">&#125;</span><br><span class="line">currentNode.setNext(headNode.getNext());</span><br><span class="line"><span class="comment">// 注意: 此时链表头结点已更新! 所以应该返回更新后的头节点继而避免遍历时出现死循环!!!</span></span><br><span class="line">headNode = headNode.getNext();</span><br><span class="line"><span class="keyword">return</span> headNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// delete the node by the specified index</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ListNode&lt;T&gt; <span class="title">deleteNodeByIndex</span><span class="params">(ListNode&lt;T&gt; headNode, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"Error: the circular linked list is empty !"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == <span class="number">1</span>) &#123;</span><br><span class="line">deleteHeaderNode(headNode);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == getLength(headNode)) &#123;</span><br><span class="line">deleteLastNode(headNode);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line">ListNode&lt;T&gt; temp = headNode;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; position - <span class="number">1</span>; i++) &#123;</span><br><span class="line">temp = currentNode;<span class="comment">// 待删节点的前节点</span></span><br><span class="line">currentNode = currentNode.getNext();<span class="comment">// 待删节点</span></span><br><span class="line">&#125;</span><br><span class="line">temp.setNext(currentNode.getNext());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> headNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化链表头结点</span></span><br><span class="line">CircularLinkedList&lt;Integer&gt; list = <span class="keyword">new</span> CircularLinkedList&lt;&gt;();</span><br><span class="line">ListNode&lt;Integer&gt; headNode = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">headNode.setData(<span class="number">1</span>);<span class="comment">// 初始化链表头结点</span></span><br><span class="line">headNode.setNext(headNode);<span class="comment">// 节点指针指向自身</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化待插入的链表节点</span></span><br><span class="line">ListNode&lt;Integer&gt; a = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">a.setData(<span class="number">2</span>);</span><br><span class="line">ListNode&lt;Integer&gt; b = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">b.setData(<span class="number">3</span>);</span><br><span class="line">ListNode&lt;Integer&gt; c = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">c.setData(<span class="number">4</span>);</span><br><span class="line">ListNode&lt;Integer&gt; d = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">d.setData(<span class="number">100</span>);</span><br><span class="line">ListNode&lt;Integer&gt; e = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">e.setData(<span class="number">101</span>);</span><br><span class="line">ListNode&lt;Integer&gt; f = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">f.setData(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向链表的尾部添加三个节点</span></span><br><span class="line">System.out.print(<span class="string">"the origin node: "</span>);</span><br><span class="line">list.insertAtListTail(headNode, a);</span><br><span class="line">list.insertAtListTail(headNode, b);</span><br><span class="line">list.insertAtListTail(headNode, c);</span><br><span class="line">list.traverseNode(headNode);</span><br><span class="line">System.out.println(<span class="string">"the length of the list: "</span> + list.getLength(headNode));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向链表中添加两个头结点( 头结点被更新 )</span></span><br><span class="line">System.out.print(<span class="string">"add two header node: "</span>);</span><br><span class="line">ListNode&lt;Integer&gt; newHeadNode = list.insertAtListHeader(headNode, d);</span><br><span class="line"><span class="comment">// 注意: 由于`头结点`已在`insertAtListHeader`中已更新所以要向`traverseNode`传入新的头结点</span></span><br><span class="line">ListNode&lt;Integer&gt; newHeadNode2 = list.insertAtListHeader(newHeadNode, e);</span><br><span class="line">list.traverseNode(newHeadNode2);</span><br><span class="line">System.out.println(<span class="string">"the length of the list: "</span> + list.getLength(headNode));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在链表的指定位置上插入新的节点</span></span><br><span class="line">System.out.print(<span class="string">"Insert the new node at position 3: "</span>);</span><br><span class="line">list.insertNodeByIndex(headNode, f, <span class="number">3</span>);</span><br><span class="line">list.traverseNode(newHeadNode2);</span><br><span class="line">System.out.println(<span class="string">"the length of the list: "</span> + list.getLength(headNode));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除链表的尾节点</span></span><br><span class="line">System.out.print(<span class="string">"delete the tail node:  "</span>);</span><br><span class="line">list.deleteLastNode(newHeadNode2);</span><br><span class="line">list.traverseNode(newHeadNode2);</span><br><span class="line">System.out.println(<span class="string">"the length of the list: "</span> + list.getLength(headNode));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意: 由于`头结点`已在`deleteHeaderNode`中已更新所以要向`traverseNode`传入新的头结点对象</span></span><br><span class="line">ListNode&lt;Integer&gt; newHeadNode3 = list.deleteHeaderNode(newHeadNode2);</span><br><span class="line">System.out.print(<span class="string">"delete the header node:  "</span>);</span><br><span class="line">list.traverseNode(newHeadNode3);</span><br><span class="line">System.out.println(<span class="string">"the length of the list: "</span> + list.getLength(headNode));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除链表中指定位置的节点</span></span><br><span class="line">ListNode&lt;Integer&gt; newHeadNode4 = list.deleteNodeByIndex(newHeadNode3, <span class="number">4</span>);</span><br><span class="line">System.out.print(<span class="string">"delete the fourth node: "</span>);</span><br><span class="line">list.traverseNode(newHeadNode4);</span><br><span class="line">System.out.println(<span class="string">"the length of the list: "</span> + list.getLength(headNode));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">the origin node: </span><br><span class="line">### [headNode]-address : pers.huangyuhui.linkedlist.ListNode@16f65612</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">3</span> -&gt; <span class="number">4</span> -&gt; headNode(<span class="number">1</span>)</span><br><span class="line">the length of the list: <span class="number">4</span></span><br><span class="line">add two header node: </span><br><span class="line">### [headNode]-address : pers.huangyuhui.linkedlist.ListNode@311d617d</span><br><span class="line"></span><br><span class="line"><span class="number">101</span> -&gt; <span class="number">100</span> -&gt; <span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">3</span> -&gt; <span class="number">4</span> -&gt; headNode(<span class="number">101</span>)</span><br><span class="line">the length of the list: <span class="number">6</span></span><br><span class="line">Insert the <span class="keyword">new</span> node at position <span class="number">3</span>: </span><br><span class="line">### [headNode]-address : pers.huangyuhui.linkedlist.ListNode@311d617d</span><br><span class="line"></span><br><span class="line"><span class="number">101</span> -&gt; <span class="number">100</span> -&gt; <span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">0</span> -&gt; <span class="number">3</span> -&gt; <span class="number">4</span> -&gt; headNode(<span class="number">101</span>)</span><br><span class="line">the length of the list: <span class="number">7</span></span><br><span class="line">delete the tail node:  </span><br><span class="line">### [headNode]-address : pers.huangyuhui.linkedlist.ListNode@311d617d</span><br><span class="line"></span><br><span class="line"><span class="number">101</span> -&gt; <span class="number">100</span> -&gt; <span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">0</span> -&gt; <span class="number">3</span> -&gt; headNode(<span class="number">101</span>)</span><br><span class="line">the length of the list: <span class="number">6</span></span><br><span class="line">delete the header node:  </span><br><span class="line">### [headNode]-address : pers.huangyuhui.linkedlist.ListNode@7c53a9eb</span><br><span class="line"></span><br><span class="line"><span class="number">100</span> -&gt; <span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">0</span> -&gt; <span class="number">3</span> -&gt; headNode(<span class="number">100</span>)</span><br><span class="line">the length of the list: <span class="number">5</span></span><br><span class="line">delete the fourth node: </span><br><span class="line">### [headNode]-address : pers.huangyuhui.linkedlist.ListNode@7c53a9eb</span><br><span class="line"></span><br><span class="line"><span class="number">100</span> -&gt; <span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">3</span> -&gt; headNode(<span class="number">100</span>)</span><br><span class="line">the length of the list: <span class="number">4</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="基本数据类型作为参数传递"><a href="#基本数据类型作为参数传递" class="headerlink" title="基本数据类型作为参数传递"></a>基本数据类型作为参数传递</h3><ol><li><p><em>示例程序</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">System.out.println(<span class="string">"before change, i="</span> + i);</span><br><span class="line">change(i);</span><br><span class="line">System.out.println(<span class="string">"after change, i="</span> + i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">i = <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">before change, i=<span class="number">1</span></span><br><span class="line">after change, i=<span class="number">1</span></span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>. *结论*</span><br><span class="line">   </span><br><span class="line">*当`基本数据类型`作为参数传递时,传递时的是`实参的副本`,既传的是`值`,无论在函数中怎么操作这个副本,实参的值是不会被改变的.*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 对象作为参数传递</span><br><span class="line"><span class="number">1</span>. *第一个示例程序*</span><br><span class="line">```java</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">"Hello"</span>);</span><br><span class="line">System.out.println(<span class="string">"before change: "</span> + sb);</span><br><span class="line">change(sb);</span><br><span class="line">System.out.println(<span class="string">"after change: "</span> + sb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">(StringBuffer stringBuffer)</span> </span>&#123;</span><br><span class="line">stringBuffer.append(<span class="string">" world !"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">before change: Hello</span><br><span class="line">after change: Hello world !</span><br></pre></td></tr></table></figure></li><li><p><em>探究结论</em><br><em>从上述程序运行结果可知<code>sb</code>所指的对象的值被改变了!那么我们是否就可以认为Java中的对象作为参数传递时,传递的是该对象的引用呢 <code>?</code> 那我们再来看第二个示例程序.</em></p></li><li><p><em>第二个示例程序</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">"Hello"</span>);</span><br><span class="line">System.out.println(<span class="string">"before change: "</span> + sb);</span><br><span class="line">change(sb);</span><br><span class="line">System.out.println(<span class="string">"after change: "</span> + sb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">(StringBuffer stringBuffer)</span> </span>&#123;</span><br><span class="line">stringBuffer = <span class="keyword">new</span> StringBuffer(<span class="string">"Hi"</span>);</span><br><span class="line">stringBuffer.append(<span class="string">" world !"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果</em></p></li></ol><p><em>如果上面的<code>推论</code>:(Java中对象作为参数传递时,实际传递的是该对象的引用)是正确的,那么在调用<code>change</code>函数后,原对象的值应该会被改变,既变为:<code>Hi World !</code>,但是,该程序的运行结果如下 !!!</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">before change: Hello</span><br><span class="line">after change: Hello</span><br></pre></td></tr></table></figure></p><p><em>可知原对象(<code>sb</code>)的值并没有被改变,这是为什么呢? 下面让我们来<code>分析</code>一下其中的原因吧嘿嘿 ~</em></p><ol start="6"><li>结论分析</li></ol><p><em>当我们执行<code>StringBuffer sb = new StringBuffer(&quot;Hello&quot;)</code>时,我们便创建了一个指向新建对象<code>new StringBuffer(&quot;Hello&quot;)</code>的引用<code>sb</code>,如下所示.</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sb ——————&gt; [Hello]</span><br></pre></td></tr></table></figure></p><p><em>在<code>第二个示例程序</code>中,当我们调用<code>change</code>函数后,实际上,形参<code>stringBuffer</code>也指向了实参<code>sb</code>所指的对象! 如下所示.</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sb ——————&gt; [Hello] &lt;—————— stringBuffer</span><br></pre></td></tr></table></figure></p><p><em>那么当我们执行<code>stringBuffer.append(&quot;world!&quot;)</code>后,便通过对象的引用(<code>stringBuffer</code>)修改了对象的值,使之修改成了: <code>Hello world !</code>,如下所示:</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sb ——————&gt; [Hello world !] &lt;—————— stringBuffer</span><br></pre></td></tr></table></figure></p><p><em>但是在<code>第二个示例程序</code>中的<code>change</code>函数中,我们又新建了一个对象:<code>new StringBuffer(&quot;Hi&quot;)</code>(该操作实际上是在内存中开辟了一块在原对象地址之外的<code>新区域</code>),这让形参<code>stringBuffer</code>实际指向了这个新建的对象,并将新对象的值设置为了<code>Hi world !</code>,如下所示:</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sb ——————&gt; [Hello]</span><br><span class="line">stringBuffer ——————&gt; [Hi World !]</span><br></pre></td></tr></table></figure></p><ul><li><em>综上所述,可以得出结论: <code>在Java中,当对象作为参数传递时,实际上传递的是一份&quot;引用&quot;的拷贝 !</code></em></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><em>在Java中, <code>=</code> 不能看成一个赋值语句,因为它并不是把一个对象赋给另一个对象的过程,它的执行过程实质上是将右边对象的<code>地址</code>传给了左边的引用,使得左边的引用指向了右边的对象.Java表面上看起来没有指针,但它的引用实质上就是一个<code>指针</code>,引用里面存放的并不是对象,而是存放该对象的地址,使得该引用指向了该对象.</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;细节-详解Java中对象的引用及赋值&quot;&gt;&lt;a href=&quot;#细节-详解Java中对象的引用及赋值&quot; class=&quot;headerlink&quot; title=&quot;细节 : 详解Java中对象的引用及赋值&quot;&gt;&lt;/a&gt;细节 : 详解&lt;code&gt;Java&lt;/code&gt;中对象的引用
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>VOA:One in Five Deaths Linked to Unhealthy Diet</title>
    <link href="http://yoursite.com/2019/04/23/VOA-One-in-Five-Deaths-Linked-to-Unhealthy-Diet/"/>
    <id>http://yoursite.com/2019/04/23/VOA-One-in-Five-Deaths-Linked-to-Unhealthy-Diet/</id>
    <published>2019-04-23T01:06:07.000Z</published>
    <updated>2019-04-24T02:43:09.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="One-in-Five-Deaths-Linked-to-Unhealthy-Diet"><a href="#One-in-Five-Deaths-Linked-to-Unhealthy-Diet" class="headerlink" title="One in Five Deaths Linked to Unhealthy Diet"></a>One in Five Deaths Linked to Unhealthy Diet</h2><p><em>In 2017,eleven million deaths worldwide were linked to people eating diets high in sugar,salt and processed meat.</em></p><ul><li><em>2017年,全国范围内有1100个死亡案例与摄入含糖,含盐,加工肉制品最高的食物有关.</em></li></ul><p><em>Those foods were partly to blam for heart disease,cancer and <code>diabetes</code>,a new study found.</em></p><ul><li><em>上述食物是导致心脏病,癌症,糖尿病的部分原因,这是一项新研究的发现.</em></li></ul><p><em>The study is called the Global Burden of Disease,It followed eating trends in 195 countries 1990 to 2017. The findings were reported in the publication The Lancet.</em></p><ul><li><em>该研究名为”全国疾病负担研究”.该研究在1990-2017年间跟进了195个国家的饮食趋势.该研究的发现成果以报告的形式发布在了《柳叶刀》杂志上.</em></li></ul><p><em>Researchers considered 15 <code>dietary</code> elements,such as diets low in fruits,vegetables,whole <code>grains</code> and milk. They also looked at diets high in red meat,processed meat,sugar-sweetend drinks and <code>sodium</code>.</em></p><ul><li><em>研究人员考量了15中饮食元素,比如水果,蔬菜,全谷类,牛奶含量少的食谱.研究人员还考量了红肉,加工肉制品,含糖饮料,含钠量高的食谱.</em></li></ul><p><em>The study found that Uzbekistan had the highest <code>percentage</code> of <code>diet-related</code> deaths.</em></p><ul><li><em>该研究发现: 乌兹别斯坦因食谱而导致死亡的比例是最高的.</em></li></ul><p><em>Israel had the lowest <code>proportion</code> of diet-related deaths, while the United Stated reted 43rd in the study.</em></p><ul><li><em>以色列则恰恰相反,美国则名列第43位.</em></li></ul><p><em><code>Consumption</code> of foods such as <code>nuts</code> and seeds,milk and whole gains was on average too low,the researchers found.</em></p><ul><li><em>研究人员发现,平均来看,坚果,种子,牛奶,全谷类的摄入太低.</em></li></ul><p><em>Chris Murrary is <code>director</code> of the Institute for Health <code>Metrics</code> and <code>Evaluation</code> at the University of Washington,which led the work.</em></p><ul><li><em>克里斯·默里是华盛顿大学健康指标和评估研究所的负责人,他也是这项研究的负责人.</em></li></ul><p><em>“Poor diet is reponsible for more deaths than any other risk <code>factor</code> in the world,”he said.</em></p><ul><li><em>他表示,”食谱不健康是导致死亡案例增加的罪魁祸首,比其他的风险都要致命.”</em></li></ul><p><em>The study found people are only 12 percent of the recommended amount of nuts and seeds——an average <code>intake</code> of 3 grams a day. For good health,experts say,you should eat 21 grams of nuts and seeds every day.</em></p><ul><li><em>研究发现,人们摄入坚果和种子的总量只达到了推荐摄入量的12%——平均每天只有3克.多位专家表示,为了保持身体健康,每天应该摄入21克的坚果和种子类食物.</em></li></ul><p><em>The study also found that people drank more than 10 times the recommened amount of <code>sugary</code> drinks.</em></p><ul><li><em>该研究还返现:含糖饮料的摄入量是推荐摄入量的10倍以上.</em></li></ul><p><em>Another study published in January suggested an “ideal diet” for the health of people and the planet would a doubling of the <code>consumption</code> of nuts,fruits,vegetables and <code>legumes</code>. Such a diet would also include reducing by half the amount of meat and sugar <code>consumed</code>.</em></p><ul><li><em>一月份发布的另一个研究提出了一份”理想食谱”来保证人类的身体健康,而且全国范围内的所有人都应该加倍摄入坚果,水果,蔬菜,豆类食品.这样的健康食谱还应该包括将肉类和糖分摄入量减少一半.</em></li></ul><p><em>I’m John Russell.</em></p><h3 id="重点单词"><a href="#重点单词" class="headerlink" title="重点单词"></a>重点单词</h3><ol><li>trend            <code>(n)</code>       潮流,趋势.</li><li>proportion       <code>(n)</code>       比例.</li><li>consumption      <code>(n)</code>       摄入,消耗.</li><li>factor           <code>(n)</code>       因素.</li><li>legume           <code>(n)</code>       豆类,豆科植物.</li><li>diabetes         <code>(n)</code>       糖尿病,多尿症.</li><li>percentage       <code>(n)</code>       百分比,百分率,百分数.</li><li>grain            <code>(n)</code>       粮食,颗粒,[作物]谷物.</li><li>sodium           <code>(n)</code>       [化学]钠.</li><li>proportion      <code>(n)</code>       比例,占比.部分.</li><li>Consumption     <code>(n)</code>       消费,消耗.</li><li>nut             <code>(n)</code>       坚果.</li><li>director        <code>(n)</code>       主任,主管,导演.</li><li>metric          <code>(n)</code>       度量标准.</li><li>evaluation      <code>(n)</code>       评价,[审计]评估,估价.</li><li>factor          <code>(n)</code>       因素,要素.</li><li>intake          <code>(n)</code>       摄取量,通风口.</li><li>consumption     <code>(n)</code>       消费,消耗.</li><li>dietary         <code>(a)</code>       饮食的,饭食的,规定食物的.</li><li>sugary          <code>(a)</code>       含糖的,甜的.</li><li>consume         <code>(v)</code>       消耗,消费.</li><li>recommend       <code>(v)</code>       推荐.</li><li>diet-related                与饮食有关的.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;One-in-Five-Deaths-Linked-to-Unhealthy-Diet&quot;&gt;&lt;a href=&quot;#One-in-Five-Deaths-Linked-to-Unhealthy-Diet&quot; class=&quot;headerlink&quot; title=&quot;One in
      
    
    </summary>
    
    
      <category term="VOA" scheme="http://yoursite.com/tags/VOA/"/>
    
  </entry>
  
  <entry>
    <title>自定义EL函数防止HTML注入</title>
    <link href="http://yoursite.com/2019/04/22/%E8%87%AA%E5%AE%9A%E4%B9%89EL%E5%87%BD%E6%95%B0%E9%98%B2%E6%AD%A2HTML%E6%B3%A8%E5%85%A5/"/>
    <id>http://yoursite.com/2019/04/22/自定义EL函数防止HTML注入/</id>
    <published>2019-04-22T10:19:18.000Z</published>
    <updated>2019-04-22T13:02:32.602Z</updated>
    
    <content type="html"><![CDATA[<h3 id="学习笔记-自定义EL函数防止HTML注入"><a href="#学习笔记-自定义EL函数防止HTML注入" class="headerlink" title="学习笔记 : 自定义EL函数防止HTML注入"></a>学习笔记 : 自定义<code>EL</code>函数防止<code>HTML</code>注入</h3><h4 id="防止HTML注入前"><a href="#防止HTML注入前" class="headerlink" title="防止HTML注入前"></a>防止<code>HTML</code>注入前</h4><ol><li><p><em><code>JSP</code>程序代码</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>`HTML`注入<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"ResultServlet"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">姓 名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">留 言: <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">"6"</span> <span class="attr">cols</span>=<span class="string">"50"</span> <span class="attr">name</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"submit"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em><code>Servlet</code>程序代码</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.el.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: ResultServlet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 跳转页面</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 21, 2019 3:03:53 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ResultServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResultServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">6692198599916433288L</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">req.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">String name = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">String message = req.getParameter(<span class="string">"message"</span>);</span><br><span class="line">req.setAttribute(<span class="string">"name"</span>, name);</span><br><span class="line">req.setAttribute(<span class="string">"message"</span>, message);</span><br><span class="line">req.getRequestDispatcher(<span class="string">"result.jsp"</span>).forward(req, resp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>所跳转的<code>JSP</code>页面的程序代码</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML注入<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">用户名: $&#123;name &#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">留言内容: $&#123;message &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><em>运行结果示例图</em></p></li></ol><ul><li><em><code>JSP</code>页面</em><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/04/22/自定义EL函数防止HTML注入/JSP-HTMLInjection.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li><em><code>HTML</code>注入结果</em><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/04/22/自定义EL函数防止HTML注入/JSP-HTMLInjectionResult1.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ul><h4 id="防止HTML注入后"><a href="#防止HTML注入后" class="headerlink" title="防止HTML注入后"></a>防止<code>HTML</code>注入后</h4><ol><li><p><em>过滤<code>HTML</code>中特殊字符的程序代码</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.el.util;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: HTMLFilter</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 过滤特殊字符</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 21, 2019 3:42:04 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HTMLFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">filter</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (message == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// copy</span></span><br><span class="line"><span class="keyword">char</span> content[] = <span class="keyword">new</span> <span class="keyword">char</span>[message.length()];</span><br><span class="line">message.getChars(<span class="number">0</span>, message.length(), content, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">StringBuffer result = <span class="keyword">new</span> StringBuffer(content.length + <span class="number">50</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; content.length; i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (content[i]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'&lt;'</span>:</span><br><span class="line">result.append(<span class="string">"&amp;lt;"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'&gt;'</span>:</span><br><span class="line">result.append(<span class="string">"&amp;gt;"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'&amp;'</span>:</span><br><span class="line">result.append(<span class="string">"&amp;amp;"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'"'</span>:</span><br><span class="line">result.append(<span class="string">"&amp;quot;"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">result.append(content[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result.toString();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>描述自定义<code>EL</code>函数的<code>mytaglib.tld</code>文件</em></p></li></ol><ul><li><em><code>&lt;taglib&gt;</code>元素是tld文件的根元素,用于声明该JSP文件使用了标签库,不需要对其进行修改,只需要从目录<code>&lt;Tomacat安装目录&gt;\webapps\examples\WEB-INF\jsp2\jsp2-example-taglib.tld</code>中复制即可.</em></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">version</span>=<span class="string">"2.0"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>A tag library exercising SimpleTag handlers.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">short-name</span>&gt;</span>SimpleTagLibrary<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uri</span>&gt;</span>https://yubuntu0109.github.io<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">function</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>filter<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">function-class</span>&gt;</span></span><br><span class="line">    pers.huangyuhui.el.util.HTMLFilter</span><br><span class="line">    <span class="tag">&lt;/<span class="name">function-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">function-signature</span>&gt;</span></span><br><span class="line">    java.lang.String filter(java.lang.String)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">function-signature</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">function</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p><em><code>JSP</code>页面的程序代码</em></p><pre><code class="html"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span><span class="tag"> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span>&lt;%-- uri: 既tld文件中&lt;uri&gt;元素的内容.  prefix: 为引用的tld文件定义一个"代号"(作为自定义EL函数的前缀) --%&gt;<span class="tag">&lt;<span class="name">%@taglib</span> <span class="attr">prefix</span>=<span class="string">"demo"</span> <span class="attr">uri</span>=<span class="string">"https://yubuntu0109.github.io"</span> %&gt;</span><span class="meta">&lt;!DOCTYPE html&gt;</span><span class="tag">&lt;<span class="name">html</span>&gt;</span> <span class="tag">&lt;<span class="name">head</span>&gt;</span>     <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>     <span class="tag">&lt;<span class="name">title</span>&gt;</span>防止`HTML`注入<span class="tag">&lt;/<span class="name">title</span>&gt;</span> <span class="tag">&lt;/<span class="name">head</span>&gt;</span> <span class="tag">&lt;<span class="name">body</span>&gt;</span>     <span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>         姓名: ${name }<span class="tag">&lt;<span class="name">br</span>&gt;</span>         留言内容: ${demo:filter(message) }     <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></code></pre></li><li><p><em>运行效果示例图</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/04/22/自定义EL函数防止HTML注入/JSP-HTMLInjectionResult2.PNG" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;学习笔记-自定义EL函数防止HTML注入&quot;&gt;&lt;a href=&quot;#学习笔记-自定义EL函数防止HTML注入&quot; class=&quot;headerlink&quot; title=&quot;学习笔记 : 自定义EL函数防止HTML注入&quot;&gt;&lt;/a&gt;学习笔记 : 自定义&lt;code&gt;EL&lt;/code
      
    
    </summary>
    
    
      <category term="JSP" scheme="http://yoursite.com/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>VOA:Paris`Notre-Dame Cathedral Burning</title>
    <link href="http://yoursite.com/2019/04/22/VOA-Paris-Notre-Dame-Cathedral-Burning/"/>
    <id>http://yoursite.com/2019/04/22/VOA-Paris-Notre-Dame-Cathedral-Burning/</id>
    <published>2019-04-22T01:26:31.000Z</published>
    <updated>2019-04-24T02:51:41.423Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Paris’-Notre-Dame-Cathedral-Burning"><a href="#Paris’-Notre-Dame-Cathedral-Burning" class="headerlink" title="Paris’ Notre-Dame Cathedral Burning"></a>Paris’ Notre-Dame Cathedral Burning</h2><p><em>A major fire began to burn on Monday at France’s world-famous <code>Notre-Dame</code> de <code>Paris Cathedral</code>.</em></p><ul><li><em>周一,法国著名的巴黎圣母院大教堂发生大火.</em></li></ul><p><em>Flames could be seen rising through the top of the <code>monument</code>. It tall,<code>narrow</code> <code>spire</code> later <code>collapsed</code>.</em></p><ul><li><em>可以看到纪念碑的顶部火焰冲天,又高又窄的尖塔随后倒塌了.</em></li></ul><p><em>The cathedral dates back to the 12th century. Frech writer <code>Victor Hugo</code> used it as the setting of his famous story,The Hunchback of Notre-Dame,first published in 1831.</em></p><ul><li><em>这座大教堂可追溯到12世纪.法国作家维克多·雨果把它作为其著名小说《巴黎圣母院》的背景,该书于1831年首次出版.</em></li></ul><p><em>The capthedral is one of world’s most famous tourist sites. About 12 million people visit Notre-Dame each year. It’s sits in the center of Paris,along the <code>Seine River</code>.</em></p><ul><li><em>这座大教堂是世界上最著名的旅游景点之一.每年大约有1200万人参观巴黎圣母院.它位于巴黎市中心,塞纳河沿岸.</em></li></ul><p><em>The <code>mayor</code> of Paris,Anne Hidalgo wrote on <code>Twitter</code> Monday,”A terrible fire is <code>underway</code> at Notre-Dame Cathedral in Paris.” Hidalgo added that Paris firefighters were still trying to <code>contain</code> the fire. She <code>urged</code> people to stay away from the area.</em></p><ul><li><em>巴黎市长安妮·伊达尔戈周一在推特上表示:”巴黎圣母院发生可怕的火灾.” 伊达尔戈补充说,巴黎消防员仍在努力控制火势.她督促人们远离该区域.</em></li></ul><p><em>As the cathedral’s roof <code>continued</code> to burn. a police officer near the scene told Reuters news <code>agency</code>, “Everying is <code>collapsing.</code>“</em></p><ul><li><em>随着大教堂的屋顶火势不断地蔓延,一名靠近现场的警官告诉路透社,”一切都在坍塌.”</em></li></ul><p><em>French President Emmanuel Macron <code>delayed</code> a planned scheduled speech to the nation because of the fire. The speech was to present his answers to the <code>yellow vest crisis</code> that has <code>taken over</code> the country since November.</em></p><ul><li><em>法国总统艾玛纽埃尔·马克龙因火灾推迟了原定的全国讲话.此次演讲是为了回应自去年11月以来席卷全国的黄背心危机.</em></li></ul><p><em>Macron arrived at the scene of the fire Monday nigth.</em></p><ul><li><em>马克龙于周一晚上抵达火灾现场.</em></li></ul><p><em>The cause off the fire was not immediately knownn. France 2 television reported that police was <code>treating</code> it as <code>accidental</code>.</em></p><ul><li><em>火灾发生的原因尚不清楚.法国第二电视台报道说,警方认为这是一起意外事故.</em></li></ul><p><em>Workers had been <code>renovating</code> parts of Notre-Dame. Parts of the monument surrounded by <code>metal</code> and wood support structure. The cathedral’s <code>bronze statues</code> had been removed last week for repairs.</em></p><ul><li><em>此前,人工们一直在修缮巴黎圣母院的部分建筑.纪念碑的一部分被金属和木头组成的支护结构包围.大教堂的青铜雕像上周已被移走进行修复.</em></li></ul><p><em>Notre-Dame’s first stone was laid in 1163 by Pope Alexander III,It’s main spire was added during repairs in the 19th century.</em></p><ul><li><em>巴黎圣母院的第一块基石是1163年由教皇亚历山大三世奠基的.它的主尖塔是在19世纪修缮时加上去的.</em></li></ul><h3 id="重点词汇"><a href="#重点词汇" class="headerlink" title="重点词汇"></a>重点词汇</h3><ol><li>cathedral        <code>(n)</code>       大教堂.</li><li>flame            <code>(n)</code>       火焰.</li><li>spire            <code>(n)</code>       尖顶,塔尖.</li><li>tourist          <code>(n)</code>       旅游者,观光者.</li><li>statue           <code>(n)</code>       雕像,塑像.</li><li>Seine            <code>(n)</code>       塞纳河(法国北部河流，流经巴黎)</li><li>agency           <code>(n)</code>       代理,中介,代理处,经销处.</li><li>vest             <code>(n)</code>       背心,汗衫.</li><li>crisis           <code>(n)</code>       危机,危险期,决定性时刻.</li><li>metal           <code>(n)</code>       金属,合金.</li><li>statue          <code>(n)</code>       雕像,塑像.</li><li>mayor           <code>(n)</code>       市长.</li><li>monument        <code>(n)</code>       纪念碑,历史遗迹,不朽的作品.</li><li>accidental      <code>(a)</code>       意外的,偶然的.</li><li>narrow          <code>(a)</code>       狭窄的,有限的.</li><li>underway        <code>(a)</code>       进行中的,起步的.</li><li>bronze          <code>(a)</code>       青铜色的,青铜制的.</li><li>urged           <code>(v)</code>       怂恿,催促.</li><li>collapsed       <code>(v)</code>       倒塌,崩溃.</li><li>contain         <code>(v)</code>       控制,容纳.</li><li>continue        <code>(v)</code>       继续,延续.</li><li>collapse        <code>(v)</code>       崩溃,塌陷.</li><li>delay           <code>(v)</code>       延期,耽搁.</li><li>treat           <code>(v)</code>       对待,处理.</li><li>renovate        <code>(v)</code>       更新,修复.</li></ol><h3 id="重点短语"><a href="#重点短语" class="headerlink" title="重点短语"></a>重点短语</h3><ol><li><code>urged</code> to do sth : 催促做某事.</li><li>news <code>agency</code> : 通讯社,新闻通讯社.</li><li>take over : 接管,接收.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Paris’-Notre-Dame-Cathedral-Burning&quot;&gt;&lt;a href=&quot;#Paris’-Notre-Dame-Cathedral-Burning&quot; class=&quot;headerlink&quot; title=&quot;Paris’ Notre-Dame Cath
      
    
    </summary>
    
    
      <category term="VOA" scheme="http://yoursite.com/tags/VOA/"/>
    
  </entry>
  
  <entry>
    <title>VOA:The Woman Behind the Image of the Black Hole</title>
    <link href="http://yoursite.com/2019/04/21/VOA-The-Woman-Behind-the-Image-of-the-Black-Hole/"/>
    <id>http://yoursite.com/2019/04/21/VOA-The-Woman-Behind-the-Image-of-the-Black-Hole/</id>
    <published>2019-04-21T13:51:03.000Z</published>
    <updated>2019-04-24T02:42:30.552Z</updated>
    
    <content type="html"><![CDATA[<h2 id="The-Woman-Behind-the-Image-of-the-Black-Hole"><a href="#The-Woman-Behind-the-Image-of-the-Black-Hole" class="headerlink" title="The Woman Behind the Image of the Black Hole"></a>The Woman Behind the Image of the Black Hole</h2><p><em>Trying to capture an image of a black hole is like trying to take a picture of an orange sitting on the <code>surface</code> of the moon from Earth——with your smartphone.</em></p><ul><li><em>试图捕捉黑洞的一张图片就好比在地球上试图用智能手机去拍摄在月f球表面放着的一个橙子.</em></li></ul><p><em>That is what Dr.Katie Bouman said two years ago during her TED talk called “How to take a picture of a black hole.”</em></p><ul><li><em>这是两年前凯蒂·布曼博士在她的TED演讲《如果拍一张黑洞的照片》中所说的话.</em></li></ul><p><em>Bouman is 29 years old. She received her <code>doctoral</code> degrees in computer science and enginnering from the Masschusetts Institute of Technology. She later became a <code>postdoctoral</code> researcher with the international <code>Event Horizon Telescope</code>,or <code>EHT</code>,project. The project scientists produced a black hole image from data collected from a series of telecopes around the world. Together,they formed an Earth-sized “virtual” telescope——on powerful enough to do what had once seemed impossible.</em></p><ul><li><em>布曼今年29岁,她在麻省理工学院获得了计算机科学和计算机工程博士学位.后来,她成为了国际事件视界望远镜(简称<code>EHT</code>)项目的博士后研究院.研究该项目的科学家们从世界各地各种望远镜收集的数据中的得出了一张黑洞图像.他们一起组成了一个地球大小的虚拟望远镜,这个望远镜强大到足以让他们完成曾经看起来不可能完成的任务.</em></li></ul><p><em>This week,the team of scientists,led by Sheperd S.Doeleman of Harvard University,<code>released to</code> the public the first-ever image of a black hole.</em></p><ul><li><em>本周,由哈佛大学的谢泼德S.杜勒曼领导的科学家团队向公众发布了史上第一张黑洞图片.</em></li></ul><p><em>Soon after,another image was spreading over ssocial media and the news. It’s showed a smiling Bouman with the black hole image on her computer screen. She wrote on Facebook, “Watching in <code>disbelief</code> as the first image I ever made of a black hole was in the process of being <code>reconstructed</code>.”</em></p><ul><li><em>不久之后,另一个照片在社交媒体和新闻上传播开来.照片上布曼在微笑,她后面的电脑屏幕上是黑洞的图像.她的脸书上写到: “看着我制作的第一张黑洞图片正在重新,这简直难以置信.”</em></li></ul><p><em>Bouman led a team that helped create an algorithm,or set of computer processes that turned the huge amout of <code>telescopic</code> data into one image.</em></p><ul><li><em>布曼领导者的团队帮助创建了一种算法,或一组计算机处理程序,其能将望远镜观察到的大量数据转换为一张图像.</em></li></ul><p><em>Bouman quickly became a symbol for woman in science.</em></p><ul><li><em>布曼很快成为了科学界女性的象征.</em></li></ul><p><em>One especially pupular Twitter post showed a <code>side-by-side</code> picture of Bouman with hard drives of black hole image data next to another woman scientist: Margarget Hamilton. In 1969,Hamilton helped write <code>on-board</code> computer code for NASA’s Apollo space program.</em></p><ul><li><em>一条特别受欢迎的推特帖子展示了一张布曼与另一位女科学家玛格丽特·汉密尔顿并列的照片,布曼的硬盘里存有黑洞图像数据.1969年,汉密尔顿为美国宇航局的阿波罗太空计划编写了随行对计算机代码.</em></li></ul><p><em>Twitter user Tammy Emma Pepin wrote of Bouman,”Here’s to more women in science——getting their credit and being remembered in history.”</em></p><ul><li><em>推特用户塔米·艾玛·佩平这样评论布曼: “让更多的科学女性获得荣誉,并被载入史册.”</em></li></ul><p><em>And Twitter user Pooja Chandrakekar,who recently completed her studies in <code>engineering</code> at Harvard,wrote, “So many young girls will see Dr.Katie Bouman as an inspiration and go on to make their own discoveries in space,physis,and computer science. A <code>historic</code> moment not just for science,but for women in science.”</em></p><ul><li><em>推特用户普贾·钱德拉斯卡最近最哈佛大学工程学系毕业,她写到: “很多年轻女性都因凯蒂·布曼博士而大受鼓舞,决定在太空,物理和计算机科学领域做深入研究.这不仅是科学界的历史性时刻,也是科学领域中女性的历史时刻.”</em></li></ul><p><em>But Boman herself quickly noted that she was not the only one responsible for the image off the black hole. She posted on Facebook, “No one algorithm or person made this image,it required the amazing talent of a team of scientists from around the globe and years of hard work…”</em></p><ul><li><em>但布曼本人很快指出,她并不是黑洞图像的唯一功臣. 她在Facebook上写到: “并不是什么算法或者人制作了这幅图像.这幅图像的的问世得益于世界各地的科学家团队的惊人才能和多年的辛勤工作···”</em></li></ul><p><em>After the <code>press</code> event Wednesday,Bouman spoke with members of the media. She said she is looking forward to developing more algorithms and methods that will help lead to an even better,<code>sharper</code> image of a black hole.</em></p><ul><li><em>周期三的新闻发布会后,布曼对媒体说,她期待着开发更多的算法和方法,以帮助生成一幅更好,更清晰的黑洞图像.</em></li></ul><p><em>Bouman will begin her teaching career at the California Institute of Technology later this year.</em></p><ul><li><em>今天晚些时候,布曼将在加州理工学院开始地她的教学生涯.</em></li></ul><p><em>I’m Ashley Thompson.</em></p><h3 id="重点词汇"><a href="#重点词汇" class="headerlink" title="重点词汇"></a>重点词汇</h3><ol><li>symbol           <code>(n)</code>           象征.</li><li>inspiration      <code>(n)</code>           鼓舞.</li><li>talent           <code>(n)</code>           才能.</li><li>telescope        <code>(n)</code>           望远镜.</li><li>disbelief        <code>(n)</code>           怀疑,不信.</li><li>engineering      <code>(n)</code>           工程,工程学.</li><li>horizon          <code>(n)</code>           [天]地平线,视野.</li><li>surface          <code>(n)</code>           表面,表层,外观.</li><li>press            <code>(n)</code>           压,按.新闻,出版社.</li><li>sharper         <code>(n)</code>           骗子,赌棍,欺诈犯.</li><li>virtual         <code>(a)</code>           虚拟的.    </li><li>postdoctoral    <code>(a)</code>           博士后的.</li><li>doctoral        <code>(a)</code>           博士的,博士学位的.</li><li>historic        <code>(a)</code>           有历史意义的,历史上著名的.</li><li>reconstruct     <code>(v)</code>           重建,改造,修复,重现.</li><li>on-board                        随行.          </li><li>side-by-side                    并肩的,并行的.   </li></ol><h3 id="重点短语"><a href="#重点短语" class="headerlink" title="重点短语"></a>重点短语</h3><ol><li>Event Horizon Telescope : 视界望远镜.</li><li>released to : 发布.</li><li>Brightness sharper : 亮度更清晰.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;The-Woman-Behind-the-Image-of-the-Black-Hole&quot;&gt;&lt;a href=&quot;#The-Woman-Behind-the-Image-of-the-Black-Hole&quot; class=&quot;headerlink&quot; title=&quot;The 
      
    
    </summary>
    
    
      <category term="VOA" scheme="http://yoursite.com/tags/VOA/"/>
    
  </entry>
  
  <entry>
    <title>VOA:咖啡到底好不好?研究人员也说不清</title>
    <link href="http://yoursite.com/2019/04/19/VOA-%E5%92%96%E5%95%A1%E5%88%B0%E5%BA%95%E5%A5%BD%E4%B8%8D%E5%A5%BD-%E7%A0%94%E7%A9%B6%E4%BA%BA%E5%91%98%E4%B9%9F%E8%AF%B4%E4%B8%8D%E6%B8%85/"/>
    <id>http://yoursite.com/2019/04/19/VOA-咖啡到底好不好-研究人员也说不清/</id>
    <published>2019-04-19T10:45:07.000Z</published>
    <updated>2019-04-24T02:44:13.023Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Large-Review-of-Coffee-Studies-Finds…Not-Much-New"><a href="#Large-Review-of-Coffee-Studies-Finds…Not-Much-New" class="headerlink" title="Large Review of Coffee Studies Finds…Not Much New"></a>Large Review of Coffee Studies Finds…Not Much New</h2><p><em>From VOA Learning English,this is the Health&amp;Lifestyle report.</em></p><ul><li><em>这里是美国之音慢速英语与健康报道.</em></li></ul><p><em>Which is more popular —— coffee or tea ?</em><br><em>If you are on Team Coffee,you team may be ahead.</em></p><ul><li><em>如果你站在咖啡队,那就加一分.</em></li></ul><p><em>The well-known U.S. coffee shop <code>Starbucks</code> just opened its largest store in the land of tea: China!</em></p><ul><li><em>美国著名的咖啡店星巴克在茶叶之国中国开了一家最大的门店!</em></li></ul><p><em>The Shanghai Starbucks is 2,700 square meters and employs more than 400 people.</em></p><ul><li><em>上海星巴克占地2700平方米,员工400多人.</em></li></ul><p><em>But nw for the health question: Is coffee good for us ?</em></p><ul><li><em>但现在从健康出发,咖啡对我们有好处吗?</em></li></ul><p><em>There have been many studies on the health benefits of coffee. Recently,researchers at the University of <code>Southampton&#39;s Faculty of Medicine</code> in Great Britain looked at results from 201 <code>observational</code> coffee studies and 17 <code>clinical trial</code> of coffee</em></p><ul><li><em>有很多关于咖啡对健康的益处的研究.最近,英国南安普顿大学医学院的研究人员对咖啡进行了研究,他们观察了201项观测性研究和17项临床试验的结果.</em></li></ul><p><em>With this “<code>umbrella review</code>“ researchers wanted to find a clear answer on whether coffee is good for us or not.</em></p><ul><li><em>在”撒网式研究”的帮助下,研究人员想找到一个明确的答案: 咖啡对我们是否有益.</em></li></ul><p><em>They discovered that coffee drinkers had a lower risk of heart and <code>liver</code> disease and some cancers. Coffee drinkers also had a lower risk of dying from <code>stroke</code>.</em></p><ul><li><em>它们发现和咖啡的人患心脏病,肝病和一些癌症的风险较低.喝咖啡的人死于中风的风险也较低.</em></li></ul><p><em>However,their findings are uncertain. The researchers could not prove coffee was the cause of these lowered risks.</em></p><ul><li><em>然而,他们的发现还不确定,研究人员不能证明咖啡是降低这些风险的原因.</em></li></ul><p><em>One of the researchers of this umbrella review is Robin Poole. Poole’s team notes that their umbrella review included mainly observational data. Therefore,they could not prove any cause and effect relationship.</em></p><ul><li><em>“撒网式研究”的其中一位研究人员是罗宾·普尔.普尔的团队注意到,它们的”撒网式研究”主要是观测数据.因此他们无法证明任何因果关系.</em></li></ul><p><em>The National <code>Institutes</code> of Health in the United States define an “observational uncontrolled study” as a study where “researchers simply watch what happens to a series of people in one group.”,There is no control group.</em></p><ul><li><em>根据美国国家卫生研究院的定义,”不受控制的观测性研究”指的是”研究人员仅观察一组人中一部分人的情况”的研究.这种研究没有试验控制组.</em></li></ul><p><em>Still,researchers found that the benefits of <code>moderate</code> coffee drinking seem to outweght the risks. Their report says drinking coffee “was more often <code>associated with</code> benefit than harm.”</em></p><ul><li><em>不过,研究人员发现,适度应用咖啡的好处似乎大于风险.它们的报告指出,喝咖啡”好处多于坏处”.</em></li></ul><p><em>Poole calls these findings “Handline benefits.”</em></p><ul><li><em>普尔称这些发现为”看得见的益处”.</em></li></ul><p><em>There are some headline benefits such as a lower risk of <code>dying</code> from any cause,a lower risk of dying from heart disease and stroke and lower risk of <code>developing heart diease</code> in the first place.</em></p><ul><li><em>有一些看得见的益处,比如降低死亡的风险,降低死于心脏病和中风的风险,以及降低患早期心脏病的风险.对于这些结果,每天喝三到四杯咖啡就可以带来最大的好处.</em></li></ul><p><em>Poole means that if people read only the headline,they may think that the result are simply positive. But he warns that the coffee story is much more <code>complicated</code>.</em></p><ul><li><em>普尔的意思是：如果人们只看表面,他们可能会认为结果是积极的.但他提醒我们,咖啡要复杂得多.</em></li></ul><p><em>He advises people to not drink more than four cups a day. And not everyone should drink so much coffee.</em></p><ul><li><em>他建议人们每天最多和四杯咖啡,而且不是每个人都应该喝这么多.</em></li></ul><p><em>Researchers found that: Too much coffee during <code>pregnancy</code> can be dangerous.</em></p><ul><li><em>研究人员发现: 怀孕期间喝太多咖啡会很危险.</em></li></ul><p><em>People,esecially woman,whose bones break easily should limit how much coffee they drink.</em></p><ul><li><em>人们,尤其是女性,骨头容易骨折,应该限制她们饮用咖啡的量.</em></li></ul><p><em>People with <code>abnormal</code> heart beat patterns are advised to drink <code>decaffeinated</code> coffee.</em></p><ul><li><em>心脏跳动不规律的人建议饮用无咖啡因的咖啡.</em></li></ul><p><em>In addition,the scientists point out that the research was only about coffee. Yet many coffee drinkers don’t just drink coffee. They put sugar into it. They add milk or cream. They may have a <code>baked treat on the side</code>.</em></p><ul><li><em>此外,科学家们指出这项研究是关于咖啡的.然而,许多和咖啡的人并不只是喝咖啡.他们往里面放糖.他们家牛奶或奶油.他们还可能还同时吃一些烘焙食品.</em></li></ul><p><em>Researcher Robin Poole warns that to get the full health benefits of coffee,keep it simple.Drinking it black is the healthiest. And skip the <code>pastries</code>.</em></p><ul><li><em>研究人员罗宾·普尔提醒我们,要想充分享受咖啡的健康益处,要尽量简单.喝黑咖啡是最健康的.糕点就放弃吧.</em></li></ul><p><em>It’s not about the sugar and the <code>syrups</code> and the <code>biscuits</code>,cakes and pastries. And we should <code>urge</code> people who are already drinking moderate <code>amounts of</code> coffee——about the three or four cups per day mark——to enjoy it,but try and make it as healthy as possible because standard health message still apply to those other things.</em></p><ul><li><em>这本身与糖,糖浆,饼干,蛋糕和糕点无关,我们会监督那些已经喝了适量咖啡的人——大约每天喝三到四杯咖啡——可以尽情享受这些食物,但是尽量保持健康饮食,因为标准的健康饮食也同样适用于其他食物.</em></li></ul><p><em>The researchers found that the greatest benefit to drinking coffee seemed to be in fighting livers diseases. Based on that finding. They are planning a clinical test using coffee as a treatment for <code>cirrhosis</code>,a serious liver disease.</em></p><ul><li><em>研究人员发现和咖啡最大的好处似乎是对抗肝脏疾病.基于这一发现,他们计划用咖啡来对肝硬化进行临床试验,肝硬化是一种严重的肝病.</em></li></ul><p><em>But the <code>final takeaway</code> is the same as before: if you drink coffee,keep it simple and don’t eat the pastries or other baked treats that often come with a cup of coffee.</em></p><ul><li><em>但最终的结论还是和以前一样: 如果你和咖啡,保持简单,不要同时吃糕点或其他烘焙食品.</em></li></ul><p><em>And if you’re not coffee drinker,you don’t need to start drinking coffee to be healthier.</em></p><ul><li><em>如果你不喝咖啡,你也不必用喝咖啡来保持健康.</em></li></ul><p><em>And that’s the Health &amp; Lifestyle report. I’m Anna Matteo.</em></p><ul><li><em>这就是健康与生活报道,我是安娜·马特奥.</em></li></ul><p><em>The coffee <code>versus</code> tea argument is always interesting. Let us know In the Comments Section,which drink you prefer.</em></p><ul><li><em>人们对咖啡和茶总是争论不休.欢迎在评论区留言.告诉我们你更喜欢咖啡还是茶.</em></li></ul><h3 id="重点单词"><a href="#重点单词" class="headerlink" title="重点单词"></a>重点单词</h3><ol><li>Starbuck         <code>(n)</code>           星巴克(咖啡公司).</li><li>trial            <code>(n)</code>           试验,审讯,努力,磨炼.</li><li>liver            <code>(n)</code>           肝脏,生活者,居民.</li><li>stroke           <code>(n)</code>           中风.</li><li>Institute        <code>(n)</code>           学会,协会,学院.</li><li>dying            <code>(n)</code>           死,死亡.</li><li>pregnancy        <code>(n)</code>           怀孕,丰富,多产.</li><li>pastry           <code>(n)</code>           油酥点心,面粉糕饼.</li><li>syrup            <code>(n)</code>           糖浆,果汁,含药糖浆.</li><li>biscuit         <code>(n)</code>           小点心,饼干.</li><li>amount          <code>(n)</code>           数量,总额,总数.</li><li>cirrhosis       <code>(n)</code>           硬化,[内科]肝硬化.</li><li>observational   <code>(a)</code>           观测的,根据观察的.</li><li>clinical        <code>(a)</code>           临床的,诊所的.</li><li>moderate        <code>(a)</code>           稳健的,温和的,适度的,中等的,有节制的.</li><li>associated      <code>(a)</code>           关联的,联合的.</li><li>complicated     <code>(a)</code>           难懂的,复杂的.</li><li>decaffeinated   <code>(a)</code>           无因咖啡的.</li><li>abnormal        <code>(ad)</code>          反常的,不规则的,变态的.</li><li>baked           <code>(v)</code>           烤的,烘焙的.</li><li>urge            <code>(v)</code>           力劝,催促,驱策,推进.</li></ol><h3 id="重点短语"><a href="#重点短语" class="headerlink" title="重点短语"></a>重点短语</h3><ol><li>Southampton’s Faculty of Medicine : 南安普敦医学院</li><li>clinical trial : 临床试验,诊治试验.</li><li>associated with : 与..有关系,与..相联系.</li><li>amounts of : 大量的,相当数量的.</li><li>final takeaway : 最终的结论.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Large-Review-of-Coffee-Studies-Finds…Not-Much-New&quot;&gt;&lt;a href=&quot;#Large-Review-of-Coffee-Studies-Finds…Not-Much-New&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
      <category term="VOA" scheme="http://yoursite.com/tags/VOA/"/>
    
  </entry>
  
  <entry>
    <title>详解Linked list的实现方式及其应用</title>
    <link href="http://yoursite.com/2019/04/19/%E8%AF%A6%E8%A7%A3Linked-list%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2019/04/19/详解Linked-list的实现方式及其应用/</id>
    <published>2019-04-19T03:54:07.000Z</published>
    <updated>2019-04-25T22:50:07.712Z</updated>
    
    <content type="html"><![CDATA[<h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><h3 id="链表的定义"><a href="#链表的定义" class="headerlink" title="链表的定义"></a>链表的定义</h3><p><em><code>链表</code>是一种物理存储单元上非连续、非顺序的存储结构,数据元素的逻辑顺序是通过链表中的指针链接次序实现的.链表由一系列<code>结点</code>(链表中每一个元素称为结点)组成,结点可以在运行时动态生成.每个结点包括两个部分: 一个是存储数据元素的<code>数据域</code>,另一个是存储下一个结点地址的<code>指针域</code>.</em></p><h3 id="链表的使用场景"><a href="#链表的使用场景" class="headerlink" title="链表的使用场景"></a>链表的使用场景</h3><ol><li>数据量较小.</li><li>不需要预先知道数据规模.</li><li>适应于频繁的插入操作.</li></ol><h3 id="链表的实现方式"><a href="#链表的实现方式" class="headerlink" title="链表的实现方式"></a>链表的实现方式</h3><h4 id="单向链表"><a href="#单向链表" class="headerlink" title="单向链表"></a>单向链表</h4><ol><li><p><em>首先定义一个链表</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.linkedlist;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: ListNode</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 单向链表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 15, 2019 8:59:50 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SinglyListNode</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> E data;</span><br><span class="line"><span class="keyword">private</span> SinglyListNode&lt;E&gt; next;<span class="comment">// the pointer</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(E data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.data = data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> SinglyListNode&lt;E&gt; <span class="title">getNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext</span><span class="params">(SinglyListNode&lt;E&gt; next)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.next = next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>操作单向链表的示例程序</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.linkedlist;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: SinglyLinkedList</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 操作单向链表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 15, 2019 8:54:46 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SinglyLinkedList</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">SinglyListNode&lt;T&gt; headNode;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createLinkedList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">headNode = <span class="keyword">new</span> SinglyListNode&lt;T&gt;();</span><br><span class="line"><span class="comment">// headNode.setData(0);// attention: the header node is zero default</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get the header node of the linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">getHeaderNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> headNode.getData();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get the length of the linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getListLength</span><span class="params">(<span class="comment">/* ListNode headNode */</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line">SinglyListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">while</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">currentNode = currentNode.getNext();</span><br><span class="line">length++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// add a new node into the linked list by specified position</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> SinglyListNode&lt;T&gt; <span class="title">insertInLinked</span><span class="params">(SinglyListNode&lt;T&gt; nodeToInsert, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Error: the linked list is empty !"</span>);</span><br><span class="line"><span class="keyword">return</span> nodeToInsert;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> size = getListLength();</span><br><span class="line"><span class="keyword">if</span> (position &gt; size + <span class="number">1</span> || position &lt; <span class="number">1</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Position of node to insert is invalid. The vaild inputs are 1 to "</span> + (size + <span class="number">1</span>));</span><br><span class="line"><span class="keyword">return</span> headNode;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (position == <span class="number">1</span>) &#123;</span><br><span class="line">nodeToInsert.setNext(headNode);</span><br><span class="line">headNode = nodeToInsert;</span><br><span class="line"><span class="keyword">return</span> nodeToInsert;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">SinglyListNode&lt;T&gt; previousNode = headNode;</span><br><span class="line"><span class="keyword">while</span> (count &lt; position - <span class="number">1</span>) &#123;</span><br><span class="line">previousNode = previousNode.getNext();<span class="comment">// 待插节点的前节点</span></span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SinglyListNode&lt;T&gt; currentNode = previousNode.getNext();<span class="comment">// 待插节点的后节点</span></span><br><span class="line">nodeToInsert.setNext(currentNode);</span><br><span class="line">previousNode.setNext(nodeToInsert);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> headNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// delete the node by the specified position in the linked node</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">deleteNodeFromLinkedList</span><span class="params">(<span class="comment">/* ListNode headNode, */</span> <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> size = getListLength();</span><br><span class="line"><span class="keyword">if</span> (position &gt; size || position &lt; <span class="number">1</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Position of node to insert is invalid. The vaild inputs are 1 to"</span> + (size + <span class="number">1</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (position == <span class="number">1</span>) &#123;</span><br><span class="line">SinglyListNode&lt;T&gt; currentNode = headNode.getNext();</span><br><span class="line">headNode = currentNode;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;<span class="comment">// 删除中间或表尾结点</span></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">SinglyListNode&lt;T&gt; previousNode = headNode.getNext();</span><br><span class="line"><span class="keyword">while</span> (count &lt; position) &#123;</span><br><span class="line">previousNode = previousNode.getNext(); <span class="comment">// 找到待删节点的前节点</span></span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SinglyListNode&lt;T&gt; currentNode = previousNode.getNext();<span class="comment">// 待删节点</span></span><br><span class="line">previousNode.setNext(currentNode.getNext());</span><br><span class="line">currentNode = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// delete the singly linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">destroyLinkedList</span><span class="params">(<span class="comment">/* ListNode headNode */</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Error: the singly linked list is empty !"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(<span class="string">"delete the node: "</span>);</span><br><span class="line"><span class="keyword">while</span> (headNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.print(headNode.getData() + <span class="string">" , "</span>);</span><br><span class="line">headNode = headNode.getNext();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Iterate through all the data in the linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">traverseNode</span><span class="params">( <span class="comment">/* ListNode headNode */</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Error: the linked node is empty !"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">SinglyListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line">System.out.print(<span class="string">"All of node: "</span>);</span><br><span class="line"><span class="keyword">while</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.print(currentNode.getData() + <span class="string">" , "</span>);</span><br><span class="line">currentNode = currentNode.getNext();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">SinglyLinkedList&lt;String&gt; list = <span class="keyword">new</span> SinglyLinkedList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义待插入链表的节点</span></span><br><span class="line">SinglyListNode&lt;String&gt; a = <span class="keyword">new</span> SinglyListNode&lt;String&gt;();</span><br><span class="line">a.setData(<span class="string">"A"</span>);</span><br><span class="line">SinglyListNode&lt;String&gt; b = <span class="keyword">new</span> SinglyListNode&lt;String&gt;();</span><br><span class="line">b.setData(<span class="string">"B"</span>);</span><br><span class="line">SinglyListNode&lt;String&gt; c = <span class="keyword">new</span> SinglyListNode&lt;String&gt;();</span><br><span class="line">c.setData(<span class="string">"C"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向单向链表中添加新的节点</span></span><br><span class="line">list.createLinkedList();</span><br><span class="line">list.insertInLinked(a, <span class="number">1</span>);</span><br><span class="line">list.insertInLinked(b, <span class="number">2</span>);</span><br><span class="line">list.insertInLinked(c, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"The size of linked list: "</span> + list.getListLength());</span><br><span class="line">System.out.println(<span class="string">"The header node : "</span> + list.getHeaderNode());</span><br><span class="line">list.traverseNode();</span><br><span class="line">System.out.println(<span class="string">"Delete the node which the position is first: "</span> + list.deleteNodeFromLinkedList(<span class="number">1</span>));</span><br><span class="line">list.traverseNode();</span><br><span class="line">System.out.println(<span class="string">"Delete all of node: "</span> + list.destroyLinkedList());</span><br><span class="line">System.out.println(<span class="string">"The size of linked list: "</span> + list.getListLength());</span><br><span class="line">list.traverseNode();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">The size of linked list: <span class="number">4</span></span><br><span class="line">The header node : C</span><br><span class="line">All of node: C , A , B , <span class="keyword">null</span> , </span><br><span class="line">Delete the node which the position is first: <span class="keyword">true</span></span><br><span class="line">All of node: A , B , <span class="keyword">null</span> , </span><br><span class="line">delete the node: A , B , <span class="keyword">null</span> , </span><br><span class="line">Delete all of node: <span class="keyword">true</span></span><br><span class="line">The size of linked list: <span class="number">0</span></span><br><span class="line">Error: the linked node is empty !</span><br></pre></td></tr></table></figure></li></ol><h4 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h4><ol><li><p><em>定义链表</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.linkedlist;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: BidirectionalLinkList</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 双向链表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 16, 2019 2:31:09 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoubleListNode</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> E data;</span><br><span class="line"><span class="keyword">private</span> DoubleListNode&lt;E&gt; next;<span class="comment">// the pointer</span></span><br><span class="line"><span class="keyword">private</span> DoubleListNode&lt;E&gt; previous;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(E data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.data = data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> DoubleListNode&lt;E&gt; <span class="title">getNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext</span><span class="params">(DoubleListNode&lt;E&gt; next)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.next = next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> DoubleListNode&lt;E&gt; <span class="title">getPrevious</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> previous;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrevious</span><span class="params">(DoubleListNode&lt;E&gt; previous)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.previous = previous;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>操作双向链表的示例程序</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.linkedlist;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: CircularList</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 操作循环链表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 16, 2019 2:28:27 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoubleLinkedList</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">DoubleListNode&lt;T&gt; headNode;</span><br><span class="line"></span><br><span class="line"><span class="comment">// initialize the circular list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createCircularList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">headNode = <span class="keyword">new</span> DoubleListNode&lt;T&gt;();<span class="comment">// Attention: the header node is empty default</span></span><br><span class="line"><span class="comment">// headNode.setData(0);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get the length of the circular list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLength</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line">DoubleListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">while</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">currentNode = currentNode.getNext();</span><br><span class="line">length++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get the header node of the double linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">getHeaderNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Error: the double linked list is empty !"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> headNode.getData();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// add new node into the double linked list by the specified position</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> DoubleListNode&lt;T&gt; <span class="title">insertNode</span><span class="params">(DoubleListNode&lt;T&gt; newNode, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Error: the double linked list is empty !"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> size = getLength();</span><br><span class="line"><span class="keyword">if</span> (position &lt; <span class="number">1</span> || position &gt; size + <span class="number">1</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Position of node to insert is invalid. The vaild inputs are 1 to "</span> + (size + <span class="number">1</span>));</span><br><span class="line"><span class="keyword">return</span> headNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (position == <span class="number">1</span>) &#123;</span><br><span class="line">newNode.setNext(headNode);</span><br><span class="line">headNode.setPrevious(newNode);</span><br><span class="line">headNode = newNode;<span class="comment">// 更新头结点</span></span><br><span class="line"><span class="keyword">return</span> headNode;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">DoubleListNode&lt;T&gt; previousNode = headNode;</span><br><span class="line"><span class="keyword">while</span> (count &lt; position - <span class="number">1</span>) &#123;</span><br><span class="line">previousNode = previousNode.getNext();</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">DoubleListNode&lt;T&gt; currentNode = previousNode.getNext();<span class="comment">// 找到待插位置的节点</span></span><br><span class="line">newNode.setNext(currentNode);</span><br><span class="line"><span class="keyword">if</span> (currentNode != <span class="keyword">null</span>) &#123;<span class="comment">// 如果待插位置的节点不是尾节点</span></span><br><span class="line">currentNode.setPrevious(newNode);</span><br><span class="line">&#125;</span><br><span class="line">previousNode.setNext(newNode);</span><br><span class="line">newNode.setPrevious(previousNode);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> headNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// delete node by the spcified position in the double linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">deleteNode</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Error: the circular list is empty !"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (position == <span class="number">1</span>) &#123;</span><br><span class="line">DoubleListNode&lt;T&gt; secondNode = headNode.getNext();</span><br><span class="line">secondNode.setPrevious(<span class="keyword">null</span>);</span><br><span class="line">headNode = secondNode;<span class="comment">// as the header node</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//// `previousNode`与`headNode`操作的是同一个对象哟 ! ////</span></span><br><span class="line">DoubleListNode&lt;T&gt; previousNode = headNode;</span><br><span class="line"><span class="keyword">while</span> (count &lt; position - <span class="number">1</span>) &#123;</span><br><span class="line">previousNode = previousNode.getNext();<span class="comment">// 待删节点的前节点</span></span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DoubleListNode&lt;T&gt; currentNode = previousNode.getNext();<span class="comment">// 待删节点</span></span><br><span class="line">DoubleListNode&lt;T&gt; laterNode = currentNode.getNext();<span class="comment">// 待删节点的后节点</span></span><br><span class="line"></span><br><span class="line">previousNode.setNext(laterNode);</span><br><span class="line"><span class="keyword">if</span> (laterNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">laterNode.setPrevious(previousNode);</span><br><span class="line">currentNode = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Iterate through all the data in the linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">traverseNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">DoubleListNode&lt;T&gt; node = headNode;</span><br><span class="line"><span class="keyword">if</span> (node == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Error: the circular list is empty !"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (node != <span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"the node: "</span> + node.getData());</span><br><span class="line">node = node.getNext();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// destroy the double linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroyList</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"Error: the circular list is empty !"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (headNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"delete the node: "</span> + headNode.getData());</span><br><span class="line">headNode = headNode.getNext();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// CircularList&lt;Integer&gt; list = new CircularList&lt;Integer&gt;();</span></span><br><span class="line">DoubleLinkedList&lt;Character&gt; list = <span class="keyword">new</span> DoubleLinkedList&lt;Character&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化待插节点</span></span><br><span class="line">DoubleListNode&lt;Character&gt; a = <span class="keyword">new</span> DoubleListNode&lt;Character&gt;();</span><br><span class="line">a.setData(<span class="string">'a'</span>);</span><br><span class="line">DoubleListNode&lt;Character&gt; b = <span class="keyword">new</span> DoubleListNode&lt;Character&gt;();</span><br><span class="line">b.setData(<span class="string">'b'</span>);</span><br><span class="line">DoubleListNode&lt;Character&gt; c = <span class="keyword">new</span> DoubleListNode&lt;Character&gt;();</span><br><span class="line">c.setData(<span class="string">'c'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向双向链表中添加新节点</span></span><br><span class="line">list.createCircularList();</span><br><span class="line">list.insertNode(a, <span class="number">1</span>);</span><br><span class="line">list.insertNode(b, <span class="number">2</span>);</span><br><span class="line">list.insertNode(c, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"-------- traverse --------"</span>);</span><br><span class="line">list.traverseNode();</span><br><span class="line">System.out.println(<span class="string">"--------------------------"</span>);</span><br><span class="line">System.out.println(<span class="string">"The header node: "</span> + list.getHeaderNode());</span><br><span class="line">System.out.println(<span class="string">"The length of the circular list: "</span> + list.getLength());</span><br><span class="line">System.out.println(<span class="string">"Delete the node which the position is one: "</span> + list.deleteNode(<span class="number">1</span>));</span><br><span class="line">System.out.println(<span class="string">"-------- traverse --------"</span>);</span><br><span class="line">list.traverseNode();</span><br><span class="line">System.out.println(<span class="string">"--------------------------"</span>);</span><br><span class="line">System.out.println(<span class="string">"The header node: "</span> + list.getHeaderNode());</span><br><span class="line">System.out.println(<span class="string">"The length of the circular list: "</span> + list.getLength());</span><br><span class="line"></span><br><span class="line">System.out.println();</span><br><span class="line">list.destroyList();</span><br><span class="line">System.out.println(<span class="string">"The header node: "</span> + list.getHeaderNode());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">-------- traverse --------</span><br><span class="line">the node: a</span><br><span class="line">the node: b</span><br><span class="line">the node: c</span><br><span class="line">the node: <span class="keyword">null</span></span><br><span class="line">--------------------------</span><br><span class="line">The header node: a</span><br><span class="line">The length of the circular list: <span class="number">4</span></span><br><span class="line">Delete the node which the position is one: <span class="keyword">true</span></span><br><span class="line">-------- traverse --------</span><br><span class="line">the node: b</span><br><span class="line">the node: c</span><br><span class="line">the node: <span class="keyword">null</span></span><br><span class="line">--------------------------</span><br><span class="line">The header node: b</span><br><span class="line">The length of the circular list: <span class="number">3</span></span><br><span class="line"></span><br><span class="line">delete the node: b</span><br><span class="line">delete the node: c</span><br><span class="line">delete the node: <span class="keyword">null</span></span><br><span class="line">The header node: <span class="keyword">null</span></span><br><span class="line">Error: the <span class="keyword">double</span> linked list is empty !</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">#### 循环链表</span><br><span class="line"><span class="number">1</span>. *定义一个链表*</span><br><span class="line">```java</span><br><span class="line"><span class="keyword">package</span> pers.huangyuhui.linkedlist;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: CircularListNode</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 循环链表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 17, 2019 9:52:23 AM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListNode</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> T data;</span><br><span class="line"><span class="keyword">private</span> ListNode&lt;T&gt; next;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(T data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.data = data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> ListNode&lt;T&gt; <span class="title">getNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext</span><span class="params">(ListNode&lt;T&gt; next)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.next = next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>操作循环链表的示例程序</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pers.huangyuhui.linkedlist;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: CircularLinkedList</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 操作循环链表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: HuangYuhui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Apr 16, 2019 7:25:36 PM</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CircularLinkedList</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get the length of the circular linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLength</span><span class="params">(ListNode&lt;T&gt; headNode)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">while</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">currentNode = currentNode.getNext();</span><br><span class="line">length++;</span><br><span class="line"><span class="keyword">if</span> (currentNode == headNode) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// traverse the node of the circular linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">traverseNode</span><span class="params">(ListNode&lt;T&gt; headNode)</span> </span>&#123;</span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">while</span> (currentNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.print(currentNode.getData() + <span class="string">" -&gt; "</span>);</span><br><span class="line">currentNode = currentNode.getNext();</span><br><span class="line"><span class="keyword">if</span> (currentNode == headNode) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(<span class="string">"headNode("</span> + currentNode.getData() + <span class="string">")\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// add new node at the tail of linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertAtListTail</span><span class="params">(ListNode&lt;T&gt; headNode, ListNode&lt;T&gt; newNode)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">while</span> (currentNode.getNext() != headNode) &#123;</span><br><span class="line"><span class="comment">//// 注意: 由于`currentNode`无变化,导致`currentNode.getNext() != headNode`继而进入进入死循环 !////</span></span><br><span class="line"><span class="comment">// currentNode.setNext(currentNode.getNext());</span></span><br><span class="line">currentNode = currentNode.getNext();</span><br><span class="line">&#125;</span><br><span class="line">newNode.setNext(newNode);</span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">headNode = newNode;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">newNode.setNext(headNode);</span><br><span class="line">currentNode.setNext(newNode);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// add new node at the header of linked list</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ListNode&lt;T&gt; <span class="title">insertAtListHeader</span><span class="params">(ListNode&lt;T&gt; headNode, ListNode&lt;T&gt; newNode)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">while</span> (currentNode.getNext() != headNode) &#123;</span><br><span class="line">currentNode = currentNode.getNext();<span class="comment">// 尾节点</span></span><br><span class="line">&#125;</span><br><span class="line">newNode.setNext(newNode);<span class="comment">// 指针指向自身</span></span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">headNode = newNode;</span><br><span class="line">&#125;</span><br><span class="line">newNode.setNext(headNode);</span><br><span class="line">currentNode.setNext(newNode);</span><br><span class="line"><span class="comment">// 注意: 此时链表头结点已更新! 所以应该返回更新后的头节点继而避免遍历时出现死循环!!!</span></span><br><span class="line">headNode = newNode;</span><br><span class="line"><span class="keyword">return</span> headNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// add the new node by the specified index</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ListNode&lt;T&gt; <span class="title">insertNodeByIndex</span><span class="params">(ListNode&lt;T&gt; headNode, ListNode&lt;T&gt; newNode, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"Error: the circular list is empty !"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == <span class="number">1</span>) &#123;</span><br><span class="line">insertAtListHeader(headNode, newNode);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == getLength(headNode)) &#123;</span><br><span class="line">insertAtListTail(headNode, newNode);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line">ListNode&lt;T&gt; temp = headNode;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; position - <span class="number">1</span>; i++) &#123;</span><br><span class="line">temp = currentNode;<span class="comment">// 待插节点的前节点</span></span><br><span class="line">currentNode = currentNode.getNext();<span class="comment">// 待插节点</span></span><br><span class="line">&#125;</span><br><span class="line">temp.setNext(newNode);</span><br><span class="line">newNode.setNext(currentNode);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> headNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// delete the last node</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteLastNode</span><span class="params">(ListNode&lt;T&gt; headNode)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">ListNode&lt;T&gt; temp = headNode;</span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Error: the circular list is empty !"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (currentNode.getNext() != headNode) &#123;</span><br><span class="line">temp = currentNode; <span class="comment">// 尾节点的前一个节点</span></span><br><span class="line">currentNode = currentNode.getNext();</span><br><span class="line">&#125;</span><br><span class="line">temp.setNext(headNode);</span><br><span class="line">currentNode = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// delete the header node</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ListNode&lt;T&gt; <span class="title">deleteHeaderNode</span><span class="params">(ListNode&lt;T&gt; headNode)</span> </span>&#123;</span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.err.println(<span class="string">"Error: the circular list is empty !"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (currentNode.getNext() != headNode) &#123;</span><br><span class="line"><span class="comment">// currentNode.setNext(currentNode.getNext());//死循环</span></span><br><span class="line">currentNode = currentNode.getNext();</span><br><span class="line">&#125;</span><br><span class="line">currentNode.setNext(headNode.getNext());</span><br><span class="line"><span class="comment">// 注意: 此时链表头结点已更新! 所以应该返回更新后的头节点继而避免遍历时出现死循环!!!</span></span><br><span class="line">headNode = headNode.getNext();</span><br><span class="line"><span class="keyword">return</span> headNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// delete the node by the specified index</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ListNode&lt;T&gt; <span class="title">deleteNodeByIndex</span><span class="params">(ListNode&lt;T&gt; headNode, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (headNode == <span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"Error: the circular linked list is empty !"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == <span class="number">1</span>) &#123;</span><br><span class="line">deleteHeaderNode(headNode);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == getLength(headNode)) &#123;</span><br><span class="line">deleteLastNode(headNode);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ListNode&lt;T&gt; currentNode = headNode;</span><br><span class="line">ListNode&lt;T&gt; temp = headNode;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; position - <span class="number">1</span>; i++) &#123;</span><br><span class="line">temp = currentNode;<span class="comment">// 待删节点的前节点</span></span><br><span class="line">currentNode = currentNode.getNext();<span class="comment">// 待删节点</span></span><br><span class="line">&#125;</span><br><span class="line">temp.setNext(currentNode.getNext());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> headNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化链表头结点</span></span><br><span class="line">CircularLinkedList&lt;Integer&gt; list = <span class="keyword">new</span> CircularLinkedList&lt;&gt;();</span><br><span class="line">ListNode&lt;Integer&gt; headNode = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">headNode.setData(<span class="number">1</span>);<span class="comment">// 初始化链表头结点</span></span><br><span class="line">headNode.setNext(headNode);<span class="comment">// 节点指针指向自身</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化待插入的链表节点</span></span><br><span class="line">ListNode&lt;Integer&gt; a = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">a.setData(<span class="number">2</span>);</span><br><span class="line">ListNode&lt;Integer&gt; b = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">b.setData(<span class="number">3</span>);</span><br><span class="line">ListNode&lt;Integer&gt; c = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">c.setData(<span class="number">4</span>);</span><br><span class="line">ListNode&lt;Integer&gt; d = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">d.setData(<span class="number">100</span>);</span><br><span class="line">ListNode&lt;Integer&gt; e = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">e.setData(<span class="number">101</span>);</span><br><span class="line">ListNode&lt;Integer&gt; f = <span class="keyword">new</span> ListNode&lt;&gt;();</span><br><span class="line">f.setData(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向链表的尾部添加三个节点</span></span><br><span class="line">System.out.print(<span class="string">"the origin node: "</span>);</span><br><span class="line">list.insertAtListTail(headNode, a);</span><br><span class="line">list.insertAtListTail(headNode, b);</span><br><span class="line">list.insertAtListTail(headNode, c);</span><br><span class="line">list.traverseNode(headNode);</span><br><span class="line">System.out.println(<span class="string">"the length of the list: "</span> + list.getLength(headNode));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向链表中添加两个头结点</span></span><br><span class="line">System.out.print(<span class="string">"add two header node: "</span>);</span><br><span class="line">ListNode&lt;Integer&gt; newHeadNode = list.insertAtListHeader(headNode, d);</span><br><span class="line"><span class="comment">// 注意: 由于`头结点`已在`insertAtListHeader`中已更新所以要向`traverseNode`传入新的头结点</span></span><br><span class="line">ListNode&lt;Integer&gt; newHeadNode2 = list.insertAtListHeader(newHeadNode, e);</span><br><span class="line">list.traverseNode(newHeadNode2);</span><br><span class="line">System.out.println(<span class="string">"the length of the list: "</span> + list.getLength(headNode));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在链表的指定位置上插入新的节点</span></span><br><span class="line">System.out.print(<span class="string">"Insert the new node at position 3: "</span>);</span><br><span class="line">list.insertNodeByIndex(headNode, f, <span class="number">3</span>);</span><br><span class="line">list.traverseNode(newHeadNode2);</span><br><span class="line">System.out.println(<span class="string">"the length of the list: "</span> + list.getLength(headNode));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除链表的尾节点</span></span><br><span class="line">System.out.print(<span class="string">"delete the tail node:  "</span>);</span><br><span class="line">list.deleteLastNode(newHeadNode2);</span><br><span class="line">list.traverseNode(newHeadNode2);</span><br><span class="line">System.out.println(<span class="string">"the length of the list: "</span> + list.getLength(headNode));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意: 由于`头结点`已在`deleteHeaderNode`中已更新所以要向`traverseNode`传入新的头结点</span></span><br><span class="line">ListNode&lt;Integer&gt; newHeadNode3 = list.deleteHeaderNode(newHeadNode2);</span><br><span class="line">System.out.print(<span class="string">"delete the header node:  "</span>);</span><br><span class="line">list.traverseNode(newHeadNode3);</span><br><span class="line">System.out.println(<span class="string">"the length of the list: "</span> + list.getLength(headNode));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除链表中指定位置的节点</span></span><br><span class="line">ListNode&lt;Integer&gt; newHeadNode4 = list.deleteNodeByIndex(newHeadNode3, <span class="number">4</span>);</span><br><span class="line">System.out.print(<span class="string">"delete the fourth node: "</span>);</span><br><span class="line">list.traverseNode(newHeadNode4);</span><br><span class="line">System.out.println(<span class="string">"the length of the list: "</span> + list.getLength(headNode));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>程序运行结果</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">the origin node: <span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">3</span> -&gt; <span class="number">4</span> -&gt; headNode(<span class="number">1</span>)</span><br><span class="line">the length of the list: <span class="number">4</span></span><br><span class="line">add two header node: <span class="number">101</span> -&gt; <span class="number">100</span> -&gt; <span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">3</span> -&gt; <span class="number">4</span> -&gt; headNode(<span class="number">101</span>)</span><br><span class="line">the length of the list: <span class="number">6</span></span><br><span class="line">Insert the <span class="keyword">new</span> node at position <span class="number">3</span>: <span class="number">101</span> -&gt; <span class="number">100</span> -&gt; <span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">0</span> -&gt; <span class="number">3</span> -&gt; <span class="number">4</span> -&gt; headNode(<span class="number">101</span>)</span><br><span class="line">the length of the list: <span class="number">7</span></span><br><span class="line">delete the tail node:  <span class="number">101</span> -&gt; <span class="number">100</span> -&gt; <span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">0</span> -&gt; <span class="number">3</span> -&gt; headNode(<span class="number">101</span>)</span><br><span class="line">the length of the list: <span class="number">6</span></span><br><span class="line">delete the header node:  <span class="number">100</span> -&gt; <span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">0</span> -&gt; <span class="number">3</span> -&gt; headNode(<span class="number">100</span>)</span><br><span class="line">the length of the list: <span class="number">5</span></span><br><span class="line">delete the fourth node: <span class="number">100</span> -&gt; <span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">3</span> -&gt; headNode(<span class="number">100</span>)</span><br><span class="line">the length of the list: <span class="number">4</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="推荐书籍"><a href="#推荐书籍" class="headerlink" title="推荐书籍"></a>推荐书籍</h3><ul><li><em>上述示例程序主要参考本书籍：《数据结构与算法经典问题解析》—— 纳拉辛哈·卡路曼希[著]</em></li><li><em>很认真的说这是我大二至今看过的最好的一本关于数据结构与算法的书籍哟 ! 其针对不同问题提供多个具有不同复杂度的解决方案.兼顾自学教材和面试辅导的不同需求呢 !</em></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;链表&quot;&gt;&lt;a href=&quot;#链表&quot; class=&quot;headerlink&quot; title=&quot;链表&quot;&gt;&lt;/a&gt;链表&lt;/h2&gt;&lt;h3 id=&quot;链表的定义&quot;&gt;&lt;a href=&quot;#链表的定义&quot; class=&quot;headerlink&quot; title=&quot;链表的定义&quot;&gt;&lt;/a&gt;链表的定
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="Data Structures and Algorithms" scheme="http://yoursite.com/tags/Data-Structures-and-Algorithms/"/>
    
  </entry>
  
</feed>
